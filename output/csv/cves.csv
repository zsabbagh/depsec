id,cve_id,description,published_at,last_modified_at,updated_at,cvss_version,cvss_exploitability_score,cvss_impact_score,cvss_vector_string,cvss_attack_vector,cvss_attack_complexity,cvss_privileges_required,cvss_user_interaction,cvss_scope,cvss_confidentiality_impact,cvss_integrity_impact,cvss_availability_impact,cvss_base_score,cvss_base_severity,has_cwe,major,minor,project,project_version,source,release,release_version,release_requirements,inherited_from,technical_lag,start_to_patched,start_to_published,published_to_patched,release_to_patched,release_to_published,not_patched
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,5,0,django,5.0.1,Direct,django,5.0.1,,,False,64.0,64,-1.0,35.0,35,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,5,0,django,5.0,Direct,django,5.0,,,False,64.0,64,-1.0,64.0,64,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2.9,Direct,django,4.2.9,,,False,309.0,309,-1.0,35.0,35,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2.8,Direct,django,4.2.8,,,False,309.0,309,-1.0,64.0,64,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2.7,Direct,django,4.2.7,,,False,309.0,309,-1.0,97.0,97,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2.6,Direct,django,4.2.6,,,False,309.0,309,-1.0,124.0,125,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.6,Direct,django,4.2.6,,,False,4915.0,4916,-1.0,27.0,28,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2.5,Direct,django,4.2.5,,,False,309.0,309,-1.0,155.0,155,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.5,Direct,django,4.2.5,,,False,184.0,213,-30.0,30.0,59,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.5,Direct,django,4.2.5,,,False,4915.0,4916,-1.0,57.0,58,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2.4,Direct,django,4.2.4,,,False,309.0,309,-1.0,188.0,189,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.4,Direct,django,4.2.4,,,False,154.0,213,-60.0,33.0,93,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.4,Direct,django,4.2.4,,,False,184.0,213,-30.0,63.0,93,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.4,Direct,django,4.2.4,,,False,4915.0,4916,-1.0,91.0,92,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2.3,Direct,django,4.2.3,,,False,309.0,309,-1.0,218.0,218,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.3,Direct,django,4.2.3,,,False,154.0,213,-60.0,63.0,122,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.3,Direct,django,4.2.3,,,False,184.0,213,-30.0,93.0,122,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.3,Direct,django,4.2.3,,,False,4915.0,4916,-1.0,120.0,121,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2.2,Direct,django,4.2.2,,,False,309.0,309,-1.0,246.0,246,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.2,Direct,django,4.2.2,,,False,90.0,91,-1.0,27.0,27,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.2,Direct,django,4.2.2,,,False,154.0,213,-60.0,90.0,150,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.2,Direct,django,4.2.2,,,False,184.0,213,-30.0,121.0,150,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.2,Direct,django,4.2.2,,,False,4915.0,4916,-1.0,148.0,149,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2.1,Direct,django,4.2.1,,,False,309.0,309,-1.0,279.0,279,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.1,Direct,django,4.2.1,,,False,90.0,91,-1.0,60.0,61,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.1,Direct,django,4.2.1,,,False,154.0,213,-60.0,123.0,183,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.1,Direct,django,4.2.1,,,False,184.0,213,-30.0,154.0,183,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2.1,Direct,django,4.2.1,,,False,4915.0,4916,-1.0,181.0,182,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,django,4.2,Direct,django,4.2,,,False,309.0,309,-1.0,309.0,309,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,2,django,4.2,Direct,django,4.2,,,False,30.0,33,-4.0,30.0,33,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2,Direct,django,4.2,,,False,90.0,91,-1.0,90.0,91,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2,Direct,django,4.2,,,False,154.0,213,-60.0,154.0,213,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2,Direct,django,4.2,,,False,184.0,213,-30.0,184.0,213,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,django,4.2,Direct,django,4.2,,,False,4915.0,4916,-1.0,211.0,212,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.12,Direct,django,4.1.12,,,False,454.0,455,-1.0,27.0,28,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.11,Direct,django,4.1.11,,,False,427.0,456,-30.0,30.0,59,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.11,Direct,django,4.1.11,,,False,454.0,455,-1.0,57.0,58,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.10,Direct,django,4.1.10,,,False,397.0,456,-60.0,63.0,122,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.10,Direct,django,4.1.10,,,False,427.0,456,-30.0,93.0,122,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.10,Direct,django,4.1.10,,,False,454.0,455,-1.0,120.0,121,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.9,Direct,django,4.1.9,,,False,572.0,573,-1.0,60.0,61,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.9,Direct,django,4.1.9,,,False,397.0,456,-60.0,123.0,183,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.9,Direct,django,4.1.9,,,False,427.0,456,-30.0,154.0,183,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.9,Direct,django,4.1.9,,,False,454.0,455,-1.0,181.0,182,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,django,4.1.8,Direct,django,4.1.8,,,False,512.0,515,-4.0,28.0,31,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.8,Direct,django,4.1.8,,,False,572.0,573,-1.0,89.0,89,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.8,Direct,django,4.1.8,,,False,397.0,456,-60.0,152.0,211,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.8,Direct,django,4.1.8,,,False,427.0,456,-30.0,182.0,211,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.8,Direct,django,4.1.8,,,False,454.0,455,-1.0,210.0,211,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,django,4.1.7,Direct,django,4.1.7,,,False,512.0,515,-4.0,78.0,81,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.7,Direct,django,4.1.7,,,False,572.0,573,-1.0,138.0,139,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.7,Direct,django,4.1.7,,,False,397.0,456,-60.0,202.0,261,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.7,Direct,django,4.1.7,,,False,427.0,456,-30.0,232.0,261,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.7,Direct,django,4.1.7,,,False,454.0,455,-1.0,259.0,260,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.6,Direct,django,4.1.6,,,False,194.0,195,-1.0,12.0,13,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,django,4.1.6,Direct,django,4.1.6,,,False,512.0,515,-4.0,91.0,94,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.6,Direct,django,4.1.6,,,False,572.0,573,-1.0,151.0,152,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.6,Direct,django,4.1.6,,,False,397.0,456,-60.0,215.0,274,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.6,Direct,django,4.1.6,,,False,427.0,456,-30.0,245.0,274,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.6,Direct,django,4.1.6,,,False,454.0,455,-1.0,272.0,273,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.5,Direct,django,4.1.5,,,False,182.0,182,-1.0,29.0,29,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.5,Direct,django,4.1.5,,,False,194.0,195,-1.0,42.0,43,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,django,4.1.5,Direct,django,4.1.5,,,False,512.0,515,-4.0,120.0,124,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.5,Direct,django,4.1.5,,,False,572.0,573,-1.0,181.0,181,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.5,Direct,django,4.1.5,,,False,397.0,456,-60.0,244.0,304,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.5,Direct,django,4.1.5,,,False,427.0,456,-30.0,274.0,304,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.5,Direct,django,4.1.5,,,False,454.0,455,-1.0,302.0,303,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.4,Direct,django,4.1.4,,,False,182.0,182,-1.0,57.0,57,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.4,Direct,django,4.1.4,,,False,194.0,195,-1.0,69.0,70,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,django,4.1.4,Direct,django,4.1.4,,,False,512.0,515,-4.0,148.0,151,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.4,Direct,django,4.1.4,,,False,572.0,573,-1.0,208.0,209,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.4,Direct,django,4.1.4,,,False,397.0,456,-60.0,272.0,331,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.4,Direct,django,4.1.4,,,False,427.0,456,-30.0,302.0,331,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.4,Direct,django,4.1.4,,,False,454.0,455,-1.0,329.0,330,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.3,Direct,django,4.1.3,,,False,182.0,182,-1.0,92.0,92,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.3,Direct,django,4.1.3,,,False,194.0,195,-1.0,105.0,105,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,django,4.1.3,Direct,django,4.1.3,,,False,512.0,515,-4.0,183.0,186,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.3,Direct,django,4.1.3,,,False,572.0,573,-1.0,244.0,244,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.3,Direct,django,4.1.3,,,False,397.0,456,-60.0,307.0,366,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.3,Direct,django,4.1.3,,,False,427.0,456,-30.0,337.0,366,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.3,Direct,django,4.1.3,,,False,454.0,455,-1.0,365.0,365,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.2,Direct,django,4.1.2,,,False,182.0,182,-1.0,120.0,120,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.2,Direct,django,4.1.2,,,False,194.0,195,-1.0,133.0,133,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,django,4.1.2,Direct,django,4.1.2,,,False,512.0,515,-4.0,211.0,214,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.2,Direct,django,4.1.2,,,False,572.0,573,-1.0,272.0,272,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.2,Direct,django,4.1.2,,,False,397.0,456,-60.0,335.0,394,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.2,Direct,django,4.1.2,,,False,427.0,456,-30.0,365.0,394,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.2,Direct,django,4.1.2,,,False,454.0,455,-1.0,392.0,393,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.1,Direct,django,4.1.1,,,False,182.0,182,-1.0,149.0,149,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.1,Direct,django,4.1.1,,,False,194.0,195,-1.0,162.0,162,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,django,4.1.1,Direct,django,4.1.1,,,False,512.0,515,-4.0,240.0,243,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.1,Direct,django,4.1.1,,,False,572.0,573,-1.0,301.0,301,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.1,Direct,django,4.1.1,,,False,397.0,456,-60.0,364.0,424,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.1,Direct,django,4.1.1,,,False,427.0,456,-30.0,394.0,424,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1.1,Direct,django,4.1.1,,,False,454.0,455,-1.0,422.0,423,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,1,django,4.1.1,Direct,django,4.1.1,,,False,61.0,73,-12.0,29.0,41,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1,Direct,django,4.1,,,False,182.0,182,-1.0,182.0,182,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1,Direct,django,4.1,,,False,194.0,195,-1.0,194.0,195,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,django,4.1,Direct,django,4.1,,,False,512.0,515,-4.0,273.0,276,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1,Direct,django,4.1,,,False,572.0,573,-1.0,333.0,334,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1,Direct,django,4.1,,,False,397.0,456,-60.0,397.0,456,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1,Direct,django,4.1,,,False,427.0,456,-30.0,427.0,456,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,django,4.1,Direct,django,4.1,,,False,454.0,455,-1.0,454.0,455,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,1,django,4.1,Direct,django,4.1,,,False,61.0,73,-12.0,61.0,73,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.10,Direct,django,4.0.10,,,False,512.0,515,-4.0,78.0,81,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.10,Direct,django,4.0.10,,,False,572.0,573,-1.0,138.0,139,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.9,Direct,django,4.0.9,,,False,433.0,434,-1.0,12.0,13,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.9,Direct,django,4.0.9,,,False,512.0,515,-4.0,91.0,94,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.9,Direct,django,4.0.9,,,False,572.0,573,-1.0,151.0,152,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.8,Direct,django,4.0.8,,,False,421.0,421,-1.0,120.0,120,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.8,Direct,django,4.0.8,,,False,433.0,434,-1.0,133.0,133,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.8,Direct,django,4.0.8,,,False,512.0,515,-4.0,211.0,214,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.8,Direct,django,4.0.8,,,False,572.0,573,-1.0,272.0,272,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.7,Direct,django,4.0.7,,,False,421.0,421,-1.0,182.0,182,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.7,Direct,django,4.0.7,,,False,433.0,434,-1.0,195.0,195,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.7,Direct,django,4.0.7,,,False,512.0,515,-4.0,273.0,276,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.7,Direct,django,4.0.7,,,False,572.0,573,-1.0,334.0,334,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,django,4.0.7,Direct,django,4.0.7,,,False,300.0,312,-12.0,62.0,73,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.6,Direct,django,4.0.6,,,False,421.0,421,-1.0,212.0,212,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.6,Direct,django,4.0.6,,,False,433.0,434,-1.0,225.0,225,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.6,Direct,django,4.0.6,,,False,512.0,515,-4.0,303.0,306,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.6,Direct,django,4.0.6,,,False,572.0,573,-1.0,364.0,364,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,django,4.0.6,Direct,django,4.0.6,,,False,238.0,239,-1.0,29.0,30,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,django,4.0.6,Direct,django,4.0.6,,,False,300.0,312,-12.0,91.0,103,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.5,Direct,django,4.0.5,,,False,421.0,421,-1.0,244.0,245,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.5,Direct,django,4.0.5,,,False,433.0,434,-1.0,257.0,258,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.5,Direct,django,4.0.5,,,False,512.0,515,-4.0,336.0,339,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.5,Direct,django,4.0.5,,,False,572.0,573,-1.0,396.0,397,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.5,Direct,django,4.0.5,,,False,208.0,209,-1.0,32.0,33,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,django,4.0.5,Direct,django,4.0.5,,,False,238.0,239,-1.0,62.0,63,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,django,4.0.5,Direct,django,4.0.5,,,False,300.0,312,-12.0,124.0,136,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.4,Direct,django,4.0.4,,,False,421.0,421,-1.0,296.0,296,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.4,Direct,django,4.0.4,,,False,433.0,434,-1.0,309.0,309,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.4,Direct,django,4.0.4,,,False,512.0,515,-4.0,387.0,390,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.4,Direct,django,4.0.4,,,False,572.0,573,-1.0,448.0,448,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.4,Direct,django,4.0.4,,,False,208.0,209,-1.0,84.0,84,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,django,4.0.4,Direct,django,4.0.4,,,False,238.0,239,-1.0,113.0,114,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,django,4.0.4,Direct,django,4.0.4,,,False,300.0,312,-12.0,176.0,187,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.3,Direct,django,4.0.3,,,False,421.0,421,-1.0,337.0,337,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.3,Direct,django,4.0.3,,,False,433.0,434,-1.0,349.0,350,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.3,Direct,django,4.0.3,,,False,512.0,515,-4.0,428.0,431,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.3,Direct,django,4.0.3,,,False,572.0,573,-1.0,488.0,489,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.3,Direct,django,4.0.3,,,False,124.0,125,-1.0,40.0,41,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.3,Direct,django,4.0.3,,,False,124.0,125,-1.0,40.0,41,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.3,Direct,django,4.0.3,,,False,208.0,209,-1.0,124.0,125,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,django,4.0.3,Direct,django,4.0.3,,,False,238.0,239,-1.0,154.0,155,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,django,4.0.3,Direct,django,4.0.3,,,False,300.0,312,-12.0,216.0,228,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.2,Direct,django,4.0.2,,,False,421.0,421,-1.0,365.0,365,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.2,Direct,django,4.0.2,,,False,433.0,434,-1.0,378.0,378,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.2,Direct,django,4.0.2,,,False,512.0,515,-4.0,456.0,459,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.2,Direct,django,4.0.2,,,False,572.0,573,-1.0,517.0,517,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.2,Direct,django,4.0.2,,,False,124.0,125,-1.0,68.0,69,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.2,Direct,django,4.0.2,,,False,124.0,125,-1.0,68.0,69,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.2,Direct,django,4.0.2,,,False,208.0,209,-1.0,153.0,153,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,django,4.0.2,Direct,django,4.0.2,,,False,238.0,239,-1.0,182.0,183,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,django,4.0.2,Direct,django,4.0.2,,,False,300.0,312,-12.0,244.0,256,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,421.0,421,-1.0,393.0,393,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,433.0,434,-1.0,405.0,406,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,512.0,515,-4.0,484.0,487,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,572.0,573,-1.0,544.0,545,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,55.0,57,-2.0,27.0,29,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,55.0,57,-2.0,27.0,29,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,124.0,125,-1.0,96.0,97,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,124.0,125,-1.0,96.0,97,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,208.0,209,-1.0,180.0,181,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,django,4.0.1,Direct,django,4.0.1,,,False,238.0,239,-1.0,210.0,211,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,django,4.0.1,Direct,django,4.0.1,,,False,300.0,312,-12.0,272.0,284,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0,Direct,django,4.0,,,False,421.0,421,-1.0,421.0,421,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0,Direct,django,4.0,,,False,433.0,434,-1.0,433.0,434,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0,Direct,django,4.0,,,False,512.0,515,-4.0,512.0,515,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0,Direct,django,4.0,,,False,572.0,573,-1.0,572.0,573,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,django,4.0,Direct,django,4.0,,,False,55.0,57,-2.0,55.0,57,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,django,4.0,Direct,django,4.0,,,False,55.0,57,-2.0,55.0,57,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0,Direct,django,4.0,,,False,124.0,125,-1.0,124.0,125,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0,Direct,django,4.0,,,False,124.0,125,-1.0,124.0,125,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,django,4.0,Direct,django,4.0,,,False,208.0,209,-1.0,208.0,209,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,django,4.0,Direct,django,4.0,,,False,238.0,239,-1.0,238.0,239,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,django,4.0,Direct,django,4.0,,,False,300.0,312,-12.0,300.0,312,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,django,4.0,Direct,django,4.0,,,False,28.0,28,-1.0,28.0,28,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,4,0,django,4.0,Direct,django,4.0,,,False,28.0,28,-1.0,28.0,28,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,4,0,django,4.0,Direct,django,4.0,,,False,28.0,28,-1.0,28.0,28,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.23,Direct,django,3.2.23,,,False,1035.0,1036,-1.0,97.0,97,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.22,Direct,django,3.2.22,,,False,1035.0,1036,-1.0,124.0,125,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.22,Direct,django,3.2.22,,,False,938.0,939,-1.0,27.0,28,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.21,Direct,django,3.2.21,,,False,1035.0,1036,-1.0,155.0,155,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.21,Direct,django,3.2.21,,,False,910.0,940,-30.0,30.0,59,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.21,Direct,django,3.2.21,,,False,938.0,939,-1.0,57.0,58,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.20,Direct,django,3.2.20,,,False,1035.0,1036,-1.0,218.0,218,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.20,Direct,django,3.2.20,,,False,880.0,940,-60.0,63.0,122,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.20,Direct,django,3.2.20,,,False,910.0,940,-30.0,93.0,122,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.20,Direct,django,3.2.20,,,False,938.0,939,-1.0,120.0,121,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.19,Direct,django,3.2.19,,,False,1035.0,1036,-1.0,279.0,279,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.19,Direct,django,3.2.19,,,False,817.0,817,-1.0,60.0,61,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.19,Direct,django,3.2.19,,,False,880.0,940,-60.0,123.0,183,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.19,Direct,django,3.2.19,,,False,910.0,940,-30.0,154.0,183,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.19,Direct,django,3.2.19,,,False,938.0,939,-1.0,181.0,182,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.18,Direct,django,3.2.18,,,False,1035.0,1036,-1.0,357.0,357,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.18,Direct,django,3.2.18,,,False,756.0,760,-4.0,78.0,81,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.18,Direct,django,3.2.18,,,False,817.0,817,-1.0,138.0,139,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.18,Direct,django,3.2.18,,,False,880.0,940,-60.0,202.0,261,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.18,Direct,django,3.2.18,,,False,910.0,940,-30.0,232.0,261,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.18,Direct,django,3.2.18,,,False,938.0,939,-1.0,259.0,260,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.17,Direct,django,3.2.17,,,False,1035.0,1036,-1.0,370.0,370,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.17,Direct,django,3.2.17,,,False,678.0,679,-1.0,12.0,13,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.17,Direct,django,3.2.17,,,False,756.0,760,-4.0,91.0,94,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.17,Direct,django,3.2.17,,,False,817.0,817,-1.0,151.0,152,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.17,Direct,django,3.2.17,,,False,880.0,940,-60.0,215.0,274,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.17,Direct,django,3.2.17,,,False,910.0,940,-30.0,245.0,274,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.17,Direct,django,3.2.17,,,False,938.0,939,-1.0,272.0,273,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.16,Direct,django,3.2.16,,,False,1035.0,1036,-1.0,490.0,490,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.16,Direct,django,3.2.16,,,False,665.0,665,-1.0,120.0,120,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.16,Direct,django,3.2.16,,,False,678.0,679,-1.0,133.0,133,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.16,Direct,django,3.2.16,,,False,756.0,760,-4.0,211.0,214,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.16,Direct,django,3.2.16,,,False,817.0,817,-1.0,272.0,272,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.16,Direct,django,3.2.16,,,False,880.0,940,-60.0,335.0,394,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.16,Direct,django,3.2.16,,,False,910.0,940,-30.0,365.0,394,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.16,Direct,django,3.2.16,,,False,938.0,939,-1.0,392.0,393,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.15,Direct,django,3.2.15,,,False,1035.0,1036,-1.0,552.0,552,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.15,Direct,django,3.2.15,,,False,665.0,665,-1.0,182.0,182,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.15,Direct,django,3.2.15,,,False,678.0,679,-1.0,195.0,195,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.15,Direct,django,3.2.15,,,False,756.0,760,-4.0,273.0,276,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.15,Direct,django,3.2.15,,,False,817.0,817,-1.0,334.0,334,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.15,Direct,django,3.2.15,,,False,880.0,940,-60.0,397.0,456,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.15,Direct,django,3.2.15,,,False,910.0,940,-30.0,427.0,456,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.15,Direct,django,3.2.15,,,False,938.0,939,-1.0,454.0,455,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.15,Direct,django,3.2.15,,,False,545.0,557,-12.0,62.0,73,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.14,Direct,django,3.2.14,,,False,1035.0,1036,-1.0,582.0,582,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.14,Direct,django,3.2.14,,,False,665.0,665,-1.0,212.0,212,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.14,Direct,django,3.2.14,,,False,678.0,679,-1.0,225.0,225,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.14,Direct,django,3.2.14,,,False,756.0,760,-4.0,303.0,306,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.14,Direct,django,3.2.14,,,False,817.0,817,-1.0,364.0,364,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.14,Direct,django,3.2.14,,,False,880.0,940,-60.0,427.0,486,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.14,Direct,django,3.2.14,,,False,910.0,940,-30.0,457.0,486,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.14,Direct,django,3.2.14,,,False,938.0,939,-1.0,484.0,485,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.14,Direct,django,3.2.14,,,False,483.0,483,-1.0,29.0,30,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.14,Direct,django,3.2.14,,,False,545.0,557,-12.0,91.0,103,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.13,Direct,django,3.2.13,,,False,1035.0,1036,-1.0,666.0,666,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.13,Direct,django,3.2.13,,,False,665.0,665,-1.0,296.0,296,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.13,Direct,django,3.2.13,,,False,678.0,679,-1.0,309.0,309,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.13,Direct,django,3.2.13,,,False,756.0,760,-4.0,387.0,390,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.13,Direct,django,3.2.13,,,False,817.0,817,-1.0,448.0,448,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.13,Direct,django,3.2.13,,,False,880.0,940,-60.0,511.0,570,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.13,Direct,django,3.2.13,,,False,910.0,940,-30.0,541.0,570,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.13,Direct,django,3.2.13,,,False,938.0,939,-1.0,568.0,569,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.13,Direct,django,3.2.13,,,False,453.0,453,-1.0,84.0,84,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.13,Direct,django,3.2.13,,,False,483.0,483,-1.0,113.0,114,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.13,Direct,django,3.2.13,,,False,545.0,557,-12.0,176.0,187,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.12,Direct,django,3.2.12,,,False,1035.0,1036,-1.0,735.0,735,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,665.0,665,-1.0,365.0,365,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,678.0,679,-1.0,378.0,378,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,756.0,760,-4.0,456.0,459,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,817.0,817,-1.0,517.0,517,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,880.0,940,-60.0,580.0,639,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,910.0,940,-30.0,610.0,639,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,938.0,939,-1.0,637.0,638,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,369.0,370,-1.0,68.0,69,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,369.0,370,-1.0,68.0,69,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,453.0,453,-1.0,153.0,153,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.12,Direct,django,3.2.12,,,False,483.0,483,-1.0,182.0,183,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.12,Direct,django,3.2.12,,,False,545.0,557,-12.0,244.0,256,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.11,Direct,django,3.2.11,,,False,1035.0,1036,-1.0,763.0,763,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,665.0,665,-1.0,393.0,393,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,678.0,679,-1.0,405.0,406,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,756.0,760,-4.0,484.0,487,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,817.0,817,-1.0,544.0,545,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,880.0,940,-60.0,608.0,667,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,910.0,940,-30.0,638.0,667,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,938.0,939,-1.0,665.0,666,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,300.0,302,-2.0,27.0,29,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,300.0,302,-2.0,27.0,29,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,369.0,370,-1.0,96.0,97,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,369.0,370,-1.0,96.0,97,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,453.0,453,-1.0,180.0,181,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.11,Direct,django,3.2.11,,,False,483.0,483,-1.0,210.0,211,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.11,Direct,django,3.2.11,,,False,545.0,557,-12.0,272.0,284,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.10,Direct,django,3.2.10,,,False,1035.0,1036,-1.0,789.0,790,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,665.0,665,-1.0,419.0,420,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,678.0,679,-1.0,432.0,433,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,756.0,760,-4.0,510.0,514,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,817.0,817,-1.0,571.0,571,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,880.0,940,-60.0,634.0,694,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,910.0,940,-30.0,664.0,694,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,938.0,939,-1.0,692.0,693,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,300.0,302,-2.0,54.0,56,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,300.0,302,-2.0,54.0,56,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,369.0,370,-1.0,123.0,124,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,369.0,370,-1.0,123.0,124,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,453.0,453,-1.0,207.0,207,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,483.0,483,-1.0,237.0,237,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.10,Direct,django,3.2.10,,,False,545.0,557,-12.0,299.0,311,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.10,Direct,django,3.2.10,,,False,272.0,273,-1.0,26.0,27,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,272.0,273,-1.0,26.0,27,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.10,Direct,django,3.2.10,,,False,272.0,273,-1.0,26.0,27,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.9,Direct,django,3.2.9,,,False,1035.0,1036,-1.0,827.0,827,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,665.0,665,-1.0,457.0,457,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,678.0,679,-1.0,469.0,470,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,756.0,760,-4.0,548.0,551,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,817.0,817,-1.0,608.0,609,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,880.0,940,-60.0,672.0,731,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,910.0,940,-30.0,702.0,731,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,938.0,939,-1.0,729.0,730,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,300.0,302,-2.0,91.0,93,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,300.0,302,-2.0,91.0,93,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,369.0,370,-1.0,160.0,161,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,369.0,370,-1.0,160.0,161,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,453.0,453,-1.0,244.0,245,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,483.0,483,-1.0,274.0,275,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.9,Direct,django,3.2.9,,,False,545.0,557,-12.0,336.0,348,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2.9,Direct,django,3.2.9,,,False,245.0,245,0.0,37.0,36,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.9,Direct,django,3.2.9,,,False,272.0,273,-1.0,64.0,64,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,272.0,273,-1.0,64.0,64,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.9,Direct,django,3.2.9,,,False,272.0,273,-1.0,64.0,64,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.8,Direct,django,3.2.8,,,False,1035.0,1036,-1.0,854.0,854,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,665.0,665,-1.0,484.0,484,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,678.0,679,-1.0,497.0,497,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,756.0,760,-4.0,575.0,578,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,817.0,817,-1.0,636.0,636,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,880.0,940,-60.0,699.0,758,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,910.0,940,-30.0,729.0,758,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,938.0,939,-1.0,756.0,757,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,300.0,302,-2.0,119.0,120,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,300.0,302,-2.0,119.0,120,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,369.0,370,-1.0,188.0,188,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,369.0,370,-1.0,188.0,188,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,453.0,453,-1.0,272.0,272,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,483.0,483,-1.0,301.0,302,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.8,Direct,django,3.2.8,,,False,545.0,557,-12.0,364.0,375,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2.8,Direct,django,3.2.8,,,False,245.0,245,0.0,64.0,63,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.8,Direct,django,3.2.8,,,False,272.0,273,-1.0,91.0,91,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,272.0,273,-1.0,91.0,91,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.8,Direct,django,3.2.8,,,False,272.0,273,-1.0,91.0,91,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.7,Direct,django,3.2.7,,,False,1035.0,1036,-1.0,888.0,888,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,665.0,665,-1.0,518.0,518,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,678.0,679,-1.0,531.0,531,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,756.0,760,-4.0,609.0,612,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,817.0,817,-1.0,670.0,670,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,880.0,940,-60.0,733.0,792,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,910.0,940,-30.0,763.0,792,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,938.0,939,-1.0,790.0,791,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,300.0,302,-2.0,153.0,154,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,300.0,302,-2.0,153.0,154,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,369.0,370,-1.0,222.0,222,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,369.0,370,-1.0,222.0,222,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,453.0,453,-1.0,306.0,306,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,483.0,483,-1.0,336.0,336,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.7,Direct,django,3.2.7,,,False,545.0,557,-12.0,398.0,409,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2.7,Direct,django,3.2.7,,,False,245.0,245,0.0,98.0,97,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.7,Direct,django,3.2.7,,,False,272.0,273,-1.0,125.0,125,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,272.0,273,-1.0,125.0,125,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.7,Direct,django,3.2.7,,,False,272.0,273,-1.0,125.0,125,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.6,Direct,django,3.2.6,,,False,1035.0,1036,-1.0,918.0,918,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,665.0,665,-1.0,548.0,548,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,678.0,679,-1.0,561.0,561,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,756.0,760,-4.0,639.0,642,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,817.0,817,-1.0,700.0,700,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,880.0,940,-60.0,763.0,822,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,910.0,940,-30.0,793.0,822,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,938.0,939,-1.0,821.0,821,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,300.0,302,-2.0,183.0,184,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,300.0,302,-2.0,183.0,184,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,369.0,370,-1.0,252.0,252,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,369.0,370,-1.0,252.0,252,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,453.0,453,-1.0,336.0,336,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,483.0,483,-1.0,366.0,366,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.6,Direct,django,3.2.6,,,False,545.0,557,-12.0,428.0,439,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2.6,Direct,django,3.2.6,,,False,245.0,245,0.0,128.0,127,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.6,Direct,django,3.2.6,,,False,272.0,273,-1.0,155.0,155,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,272.0,273,-1.0,155.0,155,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.6,Direct,django,3.2.6,,,False,272.0,273,-1.0,155.0,155,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.5,Direct,django,3.2.5,,,False,1035.0,1036,-1.0,950.0,950,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,665.0,665,-1.0,580.0,580,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,678.0,679,-1.0,593.0,593,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,756.0,760,-4.0,671.0,674,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,817.0,817,-1.0,732.0,732,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,880.0,940,-60.0,795.0,854,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,910.0,940,-30.0,825.0,854,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,938.0,939,-1.0,852.0,853,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,300.0,302,-2.0,215.0,216,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,300.0,302,-2.0,215.0,216,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,369.0,370,-1.0,284.0,284,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,369.0,370,-1.0,284.0,284,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,453.0,453,-1.0,368.0,368,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,483.0,483,-1.0,397.0,398,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.5,Direct,django,3.2.5,,,False,545.0,557,-12.0,460.0,471,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2.5,Direct,django,3.2.5,,,False,245.0,245,0.0,160.0,159,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.5,Direct,django,3.2.5,,,False,272.0,273,-1.0,187.0,187,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,272.0,273,-1.0,187.0,187,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.5,Direct,django,3.2.5,,,False,272.0,273,-1.0,187.0,187,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.4,Direct,django,3.2.4,,,False,1035.0,1036,-1.0,979.0,979,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,665.0,665,-1.0,609.0,609,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,678.0,679,-1.0,621.0,622,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,756.0,760,-4.0,700.0,703,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,817.0,817,-1.0,760.0,761,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,880.0,940,-60.0,824.0,883,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,910.0,940,-30.0,854.0,883,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,938.0,939,-1.0,881.0,882,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,300.0,302,-2.0,243.0,245,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,300.0,302,-2.0,243.0,245,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,369.0,370,-1.0,312.0,313,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,369.0,370,-1.0,312.0,313,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,453.0,453,-1.0,396.0,397,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,483.0,483,-1.0,426.0,427,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.4,Direct,django,3.2.4,,,False,545.0,557,-12.0,488.0,500,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,85.0,86,-2.0,28.0,30,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2.4,Direct,django,3.2.4,,,False,245.0,245,0.0,189.0,188,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.4,Direct,django,3.2.4,,,False,272.0,273,-1.0,216.0,216,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,272.0,273,-1.0,216.0,216,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.4,Direct,django,3.2.4,,,False,272.0,273,-1.0,216.0,216,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.3,Direct,django,3.2.3,,,False,1035.0,1036,-1.0,999.0,999,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,665.0,665,-1.0,629.0,629,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,678.0,679,-1.0,642.0,642,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,756.0,760,-4.0,720.0,723,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,817.0,817,-1.0,781.0,781,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,880.0,940,-60.0,844.0,903,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,910.0,940,-30.0,874.0,903,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,938.0,939,-1.0,901.0,902,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,300.0,302,-2.0,264.0,265,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,300.0,302,-2.0,264.0,265,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,369.0,370,-1.0,333.0,333,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,369.0,370,-1.0,333.0,333,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,453.0,453,-1.0,417.0,417,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,483.0,483,-1.0,447.0,447,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.3,Direct,django,3.2.3,,,False,545.0,557,-12.0,509.0,520,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,4033.0,4039,-7.0,20.0,26,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,56.0,62,-7.0,20.0,26,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,85.0,86,-2.0,49.0,50,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2.3,Direct,django,3.2.3,,,False,245.0,245,0.0,209.0,208,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.3,Direct,django,3.2.3,,,False,272.0,273,-1.0,236.0,236,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,272.0,273,-1.0,236.0,236,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.3,Direct,django,3.2.3,,,False,272.0,273,-1.0,236.0,236,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.2,Direct,django,3.2.2,,,False,1035.0,1036,-1.0,1006.0,1006,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,665.0,665,-1.0,636.0,636,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,678.0,679,-1.0,649.0,649,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,756.0,760,-4.0,727.0,730,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,817.0,817,-1.0,788.0,788,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,880.0,940,-60.0,851.0,910,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,910.0,940,-30.0,881.0,910,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,938.0,939,-1.0,908.0,909,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,300.0,302,-2.0,271.0,272,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,300.0,302,-2.0,271.0,272,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,369.0,370,-1.0,340.0,340,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,369.0,370,-1.0,340.0,340,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,453.0,453,-1.0,424.0,424,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,483.0,483,-1.0,454.0,454,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.2,Direct,django,3.2.2,,,False,545.0,557,-12.0,516.0,527,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,4033.0,4039,-7.0,27.0,33,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,56.0,62,-7.0,27.0,33,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,85.0,86,-2.0,56.0,57,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2.2,Direct,django,3.2.2,,,False,245.0,245,0.0,216.0,215,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.2,Direct,django,3.2.2,,,False,272.0,273,-1.0,243.0,243,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,272.0,273,-1.0,243.0,243,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.2,Direct,django,3.2.2,,,False,272.0,273,-1.0,243.0,243,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.1,Direct,django,3.2.1,,,False,1035.0,1036,-1.0,1008.0,1008,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,665.0,665,-1.0,638.0,638,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,678.0,679,-1.0,650.0,651,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,756.0,760,-4.0,729.0,732,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,817.0,817,-1.0,789.0,790,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,880.0,940,-60.0,853.0,912,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,910.0,940,-30.0,883.0,912,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,938.0,939,-1.0,910.0,911,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,300.0,302,-2.0,272.0,274,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,300.0,302,-2.0,272.0,274,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,369.0,370,-1.0,341.0,342,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,369.0,370,-1.0,341.0,342,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,453.0,453,-1.0,425.0,426,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,483.0,483,-1.0,455.0,456,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.1,Direct,django,3.2.1,,,False,545.0,557,-12.0,517.0,529,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,29.0,29,-1.0,1.0,2,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,4033.0,4039,-7.0,29.0,35,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,56.0,62,-7.0,29.0,35,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,85.0,86,-2.0,57.0,59,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2.1,Direct,django,3.2.1,,,False,245.0,245,0.0,218.0,217,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2.1,Direct,django,3.2.1,,,False,272.0,273,-1.0,245.0,245,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,272.0,273,-1.0,245.0,245,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2.1,Direct,django,3.2.1,,,False,272.0,273,-1.0,245.0,245,False
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2,Direct,django,3.2,,,False,1035.0,1036,-1.0,1035.0,1036,False
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,665.0,665,-1.0,665.0,665,False
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,678.0,679,-1.0,678.0,679,False
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2,Direct,django,3.2,,,False,756.0,760,-4.0,756.0,760,False
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,817.0,817,-1.0,817.0,817,False
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,880.0,940,-60.0,880.0,940,False
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,910.0,940,-30.0,910.0,940,False
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,938.0,939,-1.0,938.0,939,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2,Direct,django,3.2,,,False,300.0,302,-2.0,300.0,302,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,300.0,302,-2.0,300.0,302,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2,Direct,django,3.2,,,False,369.0,370,-1.0,369.0,370,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2,Direct,django,3.2,,,False,369.0,370,-1.0,369.0,370,False
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2,Direct,django,3.2,,,False,453.0,453,-1.0,453.0,453,False
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,483.0,483,-1.0,483.0,483,False
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2,Direct,django,3.2,,,False,545.0,557,-12.0,545.0,557,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,27.0,28,-2.0,27.0,28,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,django,3.2,Direct,django,3.2,,,False,29.0,29,-1.0,29.0,29,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,2,django,3.2,Direct,django,3.2,,,False,4033.0,4039,-7.0,56.0,62,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,56.0,62,-7.0,56.0,62,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,django,3.2,Direct,django,3.2,,,False,85.0,86,-2.0,85.0,86,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,django,3.2,Direct,django,3.2,,,False,245.0,245,0.0,245.0,245,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,django,3.2,Direct,django,3.2,,,False,272.0,273,-1.0,272.0,273,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,django,3.2,Direct,django,3.2,,,False,272.0,273,-1.0,272.0,273,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,django,3.2,Direct,django,3.2,,,False,272.0,273,-1.0,272.0,273,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.13,Direct,django,3.1.13,,,False,491.0,490,0.0,160.0,159,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.12,Direct,django,3.1.12,,,False,330.0,332,-2.0,28.0,30,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.12,Direct,django,3.1.12,,,False,491.0,490,0.0,189.0,188,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.11,Direct,django,3.1.11,,,False,4033.0,4039,-7.0,20.0,26,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.11,Direct,django,3.1.11,,,False,547.0,554,-7.0,20.0,26,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.11,Direct,django,3.1.11,,,False,330.0,332,-2.0,49.0,50,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.11,Direct,django,3.1.11,,,False,491.0,490,0.0,209.0,208,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.10,Direct,django,3.1.10,,,False,4033.0,4039,-7.0,27.0,33,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.10,Direct,django,3.1.10,,,False,547.0,554,-7.0,27.0,33,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.10,Direct,django,3.1.10,,,False,330.0,332,-2.0,55.0,57,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.10,Direct,django,3.1.10,,,False,491.0,490,0.0,216.0,215,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1.9,Direct,django,3.1.9,,,False,274.0,275,-1.0,1.0,2,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.9,Direct,django,3.1.9,,,False,4033.0,4039,-7.0,29.0,35,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.9,Direct,django,3.1.9,,,False,547.0,554,-7.0,29.0,35,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.9,Direct,django,3.1.9,,,False,330.0,332,-2.0,57.0,59,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.9,Direct,django,3.1.9,,,False,491.0,490,0.0,218.0,217,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1.8,Direct,django,3.1.8,,,False,273.0,274,-2.0,28.0,29,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1.8,Direct,django,3.1.8,,,False,274.0,275,-1.0,30.0,30,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.8,Direct,django,3.1.8,,,False,4033.0,4039,-7.0,57.0,63,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.8,Direct,django,3.1.8,,,False,547.0,554,-7.0,57.0,63,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.8,Direct,django,3.1.8,,,False,330.0,332,-2.0,86.0,87,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.8,Direct,django,3.1.8,,,False,491.0,490,0.0,246.0,245,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,django,3.1.7,Direct,django,3.1.7,,,False,244.0,245,-1.0,45.0,46,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1.7,Direct,django,3.1.7,,,False,273.0,274,-2.0,73.0,75,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1.7,Direct,django,3.1.7,,,False,274.0,275,-1.0,75.0,76,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.7,Direct,django,3.1.7,,,False,4033.0,4039,-7.0,102.0,109,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.7,Direct,django,3.1.7,,,False,547.0,554,-7.0,102.0,109,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.7,Direct,django,3.1.7,,,False,330.0,332,-2.0,131.0,133,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.7,Direct,django,3.1.7,,,False,491.0,490,0.0,292.0,291,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,django,3.1.6,Direct,django,3.1.6,,,False,199.0,195,3.0,17.0,14,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,django,3.1.6,Direct,django,3.1.6,,,False,244.0,245,-1.0,63.0,64,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1.6,Direct,django,3.1.6,,,False,273.0,274,-2.0,91.0,93,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1.6,Direct,django,3.1.6,,,False,274.0,275,-1.0,93.0,94,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.6,Direct,django,3.1.6,,,False,4033.0,4039,-7.0,120.0,127,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.6,Direct,django,3.1.6,,,False,547.0,554,-7.0,120.0,127,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.6,Direct,django,3.1.6,,,False,330.0,332,-2.0,149.0,151,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.6,Direct,django,3.1.6,,,False,491.0,490,0.0,310.0,309,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,django,3.1.5,Direct,django,3.1.5,,,False,199.0,195,3.0,45.0,42,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,django,3.1.5,Direct,django,3.1.5,,,False,244.0,245,-1.0,91.0,92,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1.5,Direct,django,3.1.5,,,False,273.0,274,-2.0,119.0,121,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1.5,Direct,django,3.1.5,,,False,274.0,275,-1.0,121.0,122,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,django,3.1.5,Direct,django,3.1.5,,,False,181.0,181,-1.0,27.0,28,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.5,Direct,django,3.1.5,,,False,4033.0,4039,-7.0,148.0,155,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.5,Direct,django,3.1.5,,,False,547.0,554,-7.0,148.0,155,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.5,Direct,django,3.1.5,,,False,330.0,332,-2.0,177.0,178,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.5,Direct,django,3.1.5,,,False,491.0,490,0.0,338.0,337,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,django,3.1.4,Direct,django,3.1.4,,,False,199.0,195,3.0,80.0,76,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,django,3.1.4,Direct,django,3.1.4,,,False,244.0,245,-1.0,126.0,126,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1.4,Direct,django,3.1.4,,,False,273.0,274,-2.0,154.0,155,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1.4,Direct,django,3.1.4,,,False,274.0,275,-1.0,156.0,156,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,django,3.1.4,Direct,django,3.1.4,,,False,181.0,181,-1.0,62.0,63,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.4,Direct,django,3.1.4,,,False,4033.0,4039,-7.0,183.0,189,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.4,Direct,django,3.1.4,,,False,547.0,554,-7.0,183.0,189,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.4,Direct,django,3.1.4,,,False,330.0,332,-2.0,212.0,213,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.4,Direct,django,3.1.4,,,False,491.0,490,0.0,372.0,371,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,django,3.1.3,Direct,django,3.1.3,,,False,199.0,195,3.0,109.0,105,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,django,3.1.3,Direct,django,3.1.3,,,False,244.0,245,-1.0,154.0,155,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1.3,Direct,django,3.1.3,,,False,273.0,274,-2.0,183.0,184,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1.3,Direct,django,3.1.3,,,False,274.0,275,-1.0,184.0,185,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,django,3.1.3,Direct,django,3.1.3,,,False,181.0,181,-1.0,91.0,91,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.3,Direct,django,3.1.3,,,False,4033.0,4039,-7.0,212.0,218,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.3,Direct,django,3.1.3,,,False,547.0,554,-7.0,212.0,218,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.3,Direct,django,3.1.3,,,False,330.0,332,-2.0,240.0,242,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.3,Direct,django,3.1.3,,,False,491.0,490,0.0,401.0,400,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,django,3.1.2,Direct,django,3.1.2,,,False,199.0,195,3.0,141.0,137,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,django,3.1.2,Direct,django,3.1.2,,,False,244.0,245,-1.0,187.0,187,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1.2,Direct,django,3.1.2,,,False,273.0,274,-2.0,215.0,216,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1.2,Direct,django,3.1.2,,,False,274.0,275,-1.0,217.0,217,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,django,3.1.2,Direct,django,3.1.2,,,False,181.0,181,-1.0,123.0,124,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.2,Direct,django,3.1.2,,,False,4033.0,4039,-7.0,244.0,250,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.2,Direct,django,3.1.2,,,False,547.0,554,-7.0,244.0,250,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.2,Direct,django,3.1.2,,,False,330.0,332,-2.0,273.0,274,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.2,Direct,django,3.1.2,,,False,491.0,490,0.0,433.0,432,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,django,3.1.1,Direct,django,3.1.1,,,False,199.0,195,3.0,157.0,153,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,django,3.1.1,Direct,django,3.1.1,,,False,244.0,245,-1.0,203.0,203,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1.1,Direct,django,3.1.1,,,False,273.0,274,-2.0,231.0,232,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1.1,Direct,django,3.1.1,,,False,274.0,275,-1.0,233.0,233,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,django,3.1.1,Direct,django,3.1.1,,,False,181.0,181,-1.0,139.0,140,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1.1,Direct,django,3.1.1,,,False,4033.0,4039,-7.0,260.0,267,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1.1,Direct,django,3.1.1,,,False,547.0,554,-7.0,260.0,267,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1.1,Direct,django,3.1.1,,,False,330.0,332,-2.0,289.0,290,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1.1,Direct,django,3.1.1,,,False,491.0,490,0.0,450.0,449,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,django,3.1,Direct,django,3.1,,,False,199.0,195,3.0,199.0,195,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,django,3.1,Direct,django,3.1,,,False,244.0,245,-1.0,244.0,245,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1,Direct,django,3.1,,,False,273.0,274,-2.0,273.0,274,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,django,3.1,Direct,django,3.1,,,False,274.0,275,-1.0,274.0,275,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,django,3.1,Direct,django,3.1,,,False,181.0,181,-1.0,181.0,181,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,django,3.1,Direct,django,3.1,,,False,4033.0,4039,-7.0,302.0,308,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,django,3.1,Direct,django,3.1,,,False,547.0,554,-7.0,302.0,308,False
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,django,3.1,Direct,django,3.1,,,False,330.0,332,-2.0,330.0,332,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,django,3.1,Direct,django,3.1,,,False,491.0,490,0.0,491.0,490,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1,Direct,django,3.1,,,False,41.0,28,13.0,41.0,28,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,django,3.1,Direct,django,3.1,,,False,41.0,28,13.0,41.0,28,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.14,Direct,django,3.0.14,,,False,4033.0,4039,-7.0,57.0,63,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.14,Direct,django,3.0.14,,,False,547.0,554,-7.0,57.0,63,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.13,Direct,django,3.0.13,,,False,490.0,491,-1.0,45.0,46,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.13,Direct,django,3.0.13,,,False,4033.0,4039,-7.0,102.0,109,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.13,Direct,django,3.0.13,,,False,547.0,554,-7.0,102.0,109,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.12,Direct,django,3.0.12,,,False,444.0,441,3.0,17.0,14,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.12,Direct,django,3.0.12,,,False,490.0,491,-1.0,63.0,64,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.12,Direct,django,3.0.12,,,False,4033.0,4039,-7.0,120.0,127,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.12,Direct,django,3.0.12,,,False,547.0,554,-7.0,120.0,127,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.11,Direct,django,3.0.11,,,False,444.0,441,3.0,109.0,105,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.11,Direct,django,3.0.11,,,False,490.0,491,-1.0,154.0,155,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.11,Direct,django,3.0.11,,,False,426.0,427,-1.0,91.0,91,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.11,Direct,django,3.0.11,,,False,4033.0,4039,-7.0,212.0,218,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.11,Direct,django,3.0.11,,,False,547.0,554,-7.0,212.0,218,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.10,Direct,django,3.0.10,,,False,444.0,441,3.0,157.0,153,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.10,Direct,django,3.0.10,,,False,490.0,491,-1.0,203.0,203,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.10,Direct,django,3.0.10,,,False,426.0,427,-1.0,139.0,140,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.10,Direct,django,3.0.10,,,False,4033.0,4039,-7.0,260.0,267,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.10,Direct,django,3.0.10,,,False,547.0,554,-7.0,260.0,267,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.9,Direct,django,3.0.9,,,False,444.0,441,3.0,200.0,196,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.9,Direct,django,3.0.9,,,False,490.0,491,-1.0,246.0,246,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.9,Direct,django,3.0.9,,,False,426.0,427,-1.0,182.0,182,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.9,Direct,django,3.0.9,,,False,4033.0,4039,-7.0,303.0,309,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.9,Direct,django,3.0.9,,,False,547.0,554,-7.0,303.0,309,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.9,Direct,django,3.0.9,,,False,287.0,274,13.0,42.0,29,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.9,Direct,django,3.0.9,,,False,287.0,274,13.0,42.0,29,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.8,Direct,django,3.0.8,,,False,444.0,441,3.0,233.0,229,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.8,Direct,django,3.0.8,,,False,490.0,491,-1.0,279.0,279,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.8,Direct,django,3.0.8,,,False,426.0,427,-1.0,215.0,216,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.8,Direct,django,3.0.8,,,False,4033.0,4039,-7.0,336.0,342,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.8,Direct,django,3.0.8,,,False,547.0,554,-7.0,336.0,342,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.8,Direct,django,3.0.8,,,False,287.0,274,13.0,75.0,62,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.8,Direct,django,3.0.8,,,False,287.0,274,13.0,75.0,62,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.7,Direct,django,3.0.7,,,False,444.0,441,3.0,260.0,257,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.7,Direct,django,3.0.7,,,False,490.0,491,-1.0,306.0,307,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.7,Direct,django,3.0.7,,,False,426.0,427,-1.0,242.0,243,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.7,Direct,django,3.0.7,,,False,4033.0,4039,-7.0,363.0,370,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.7,Direct,django,3.0.7,,,False,547.0,554,-7.0,363.0,370,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.7,Direct,django,3.0.7,,,False,287.0,274,13.0,103.0,90,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.7,Direct,django,3.0.7,,,False,287.0,274,13.0,103.0,90,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.6,Direct,django,3.0.6,,,False,444.0,441,3.0,280.0,277,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.6,Direct,django,3.0.6,,,False,490.0,491,-1.0,326.0,327,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.6,Direct,django,3.0.6,,,False,426.0,427,-1.0,262.0,263,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.6,Direct,django,3.0.6,,,False,4033.0,4039,-7.0,383.0,390,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.6,Direct,django,3.0.6,,,False,547.0,554,-7.0,383.0,390,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,django,3.0.6,Direct,django,3.0.6,,,False,183.0,184,-1.0,19.0,20,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,django,3.0.6,Direct,django,3.0.6,,,False,183.0,184,-1.0,19.0,20,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.6,Direct,django,3.0.6,,,False,287.0,274,13.0,123.0,110,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.6,Direct,django,3.0.6,,,False,287.0,274,13.0,123.0,110,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.5,Direct,django,3.0.5,,,False,444.0,441,3.0,324.0,320,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.5,Direct,django,3.0.5,,,False,490.0,491,-1.0,369.0,370,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.5,Direct,django,3.0.5,,,False,426.0,427,-1.0,306.0,306,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.5,Direct,django,3.0.5,,,False,4033.0,4039,-7.0,427.0,433,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.5,Direct,django,3.0.5,,,False,547.0,554,-7.0,427.0,433,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,django,3.0.5,Direct,django,3.0.5,,,False,183.0,184,-1.0,63.0,63,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,django,3.0.5,Direct,django,3.0.5,,,False,183.0,184,-1.0,63.0,63,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.5,Direct,django,3.0.5,,,False,287.0,274,13.0,166.0,153,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.5,Direct,django,3.0.5,,,False,287.0,274,13.0,166.0,153,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.4,Direct,django,3.0.4,,,False,444.0,441,3.0,351.0,348,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.4,Direct,django,3.0.4,,,False,490.0,491,-1.0,397.0,398,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.4,Direct,django,3.0.4,,,False,426.0,427,-1.0,333.0,334,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.4,Direct,django,3.0.4,,,False,4033.0,4039,-7.0,454.0,461,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.4,Direct,django,3.0.4,,,False,547.0,554,-7.0,454.0,461,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,django,3.0.4,Direct,django,3.0.4,,,False,183.0,184,-1.0,90.0,91,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,django,3.0.4,Direct,django,3.0.4,,,False,183.0,184,-1.0,90.0,91,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.4,Direct,django,3.0.4,,,False,287.0,274,13.0,194.0,181,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.4,Direct,django,3.0.4,,,False,287.0,274,13.0,194.0,181,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,444.0,441,3.0,381.0,378,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,490.0,491,-1.0,427.0,428,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,426.0,427,-1.0,363.0,364,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,4033.0,4039,-7.0,484.0,491,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,547.0,554,-7.0,484.0,491,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,183.0,184,-1.0,120.0,121,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,183.0,184,-1.0,120.0,121,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,287.0,274,13.0,224.0,211,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,287.0,274,13.0,224.0,211,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,0,django,3.0.3,Direct,django,3.0.3,,,False,92.0,94,-2.0,29.0,31,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,444.0,441,3.0,414.0,410,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,490.0,491,-1.0,460.0,460,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,426.0,427,-1.0,396.0,396,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,4033.0,4039,-7.0,517.0,523,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,547.0,554,-7.0,517.0,523,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,183.0,184,-1.0,153.0,153,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,183.0,184,-1.0,153.0,153,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,287.0,274,13.0,256.0,243,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,287.0,274,13.0,256.0,243,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,62.0,63,-1.0,32.0,32,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,0,django,3.0.2,Direct,django,3.0.2,,,False,92.0,94,-2.0,62.0,63,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,444.0,441,3.0,429.0,425,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,490.0,491,-1.0,474.0,475,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,426.0,427,-1.0,411.0,411,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,4033.0,4039,-7.0,531.0,538,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,547.0,554,-7.0,531.0,538,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,183.0,184,-1.0,168.0,168,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,183.0,184,-1.0,168.0,168,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,287.0,274,13.0,271.0,258,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,287.0,274,13.0,271.0,258,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,62.0,63,-1.0,47.0,47,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,0,django,3.0.1,Direct,django,3.0.1,,,False,92.0,94,-2.0,77.0,78,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,django,3.0,Direct,django,3.0,,,False,444.0,441,3.0,444.0,441,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,django,3.0,Direct,django,3.0,,,False,490.0,491,-1.0,490.0,491,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,django,3.0,Direct,django,3.0,,,False,426.0,427,-1.0,426.0,427,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,django,3.0,Direct,django,3.0,,,False,4033.0,4039,-7.0,547.0,554,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,django,3.0,Direct,django,3.0,,,False,547.0,554,-7.0,547.0,554,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,django,3.0,Direct,django,3.0,,,False,183.0,184,-1.0,183.0,184,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,django,3.0,Direct,django,3.0,,,False,183.0,184,-1.0,183.0,184,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0,Direct,django,3.0,,,False,287.0,274,13.0,287.0,274,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,django,3.0,Direct,django,3.0,,,False,287.0,274,13.0,287.0,274,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,0,django,3.0,Direct,django,3.0,,,False,62.0,63,-1.0,62.0,63,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,0,django,3.0,Direct,django,3.0,,,False,92.0,94,-2.0,92.0,94,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,0,django,3.0,Direct,django,3.0,,,False,15.0,16,-1.0,15.0,16,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.27,Direct,django,2.2.27,,,False,1104.0,1105,-1.0,68.0,69,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.27,Direct,django,2.2.27,,,False,1104.0,1105,-1.0,68.0,69,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.26,Direct,django,2.2.26,,,False,1035.0,1037,-2.0,27.0,29,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.26,Direct,django,2.2.26,,,False,1035.0,1037,-2.0,27.0,29,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.26,Direct,django,2.2.26,,,False,1104.0,1105,-1.0,96.0,97,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.26,Direct,django,2.2.26,,,False,1104.0,1105,-1.0,96.0,97,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.25,Direct,django,2.2.25,,,False,1035.0,1037,-2.0,54.0,56,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.25,Direct,django,2.2.25,,,False,1035.0,1037,-2.0,54.0,56,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.25,Direct,django,2.2.25,,,False,1104.0,1105,-1.0,123.0,124,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.25,Direct,django,2.2.25,,,False,1104.0,1105,-1.0,123.0,124,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.25,Direct,django,2.2.25,,,False,1007.0,1008,-1.0,26.0,27,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.25,Direct,django,2.2.25,,,False,1007.0,1008,-1.0,26.0,27,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.25,Direct,django,2.2.25,,,False,1007.0,1008,-1.0,26.0,27,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.24,Direct,django,2.2.24,,,False,1035.0,1037,-2.0,243.0,245,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.24,Direct,django,2.2.24,,,False,1035.0,1037,-2.0,243.0,245,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.24,Direct,django,2.2.24,,,False,1104.0,1105,-1.0,312.0,313,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.24,Direct,django,2.2.24,,,False,1104.0,1105,-1.0,312.0,313,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.24,Direct,django,2.2.24,,,False,980.0,980,0.0,189.0,188,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.24,Direct,django,2.2.24,,,False,1007.0,1008,-1.0,216.0,216,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.24,Direct,django,2.2.24,,,False,1007.0,1008,-1.0,216.0,216,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.24,Direct,django,2.2.24,,,False,1007.0,1008,-1.0,216.0,216,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.23,Direct,django,2.2.23,,,False,1035.0,1037,-2.0,264.0,265,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.23,Direct,django,2.2.23,,,False,1035.0,1037,-2.0,264.0,265,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.23,Direct,django,2.2.23,,,False,1104.0,1105,-1.0,333.0,333,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.23,Direct,django,2.2.23,,,False,1104.0,1105,-1.0,333.0,333,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.23,Direct,django,2.2.23,,,False,4033.0,4039,-7.0,20.0,26,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.23,Direct,django,2.2.23,,,False,791.0,797,-7.0,20.0,26,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.23,Direct,django,2.2.23,,,False,980.0,980,0.0,209.0,208,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.23,Direct,django,2.2.23,,,False,1007.0,1008,-1.0,236.0,236,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.23,Direct,django,2.2.23,,,False,1007.0,1008,-1.0,236.0,236,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.23,Direct,django,2.2.23,,,False,1007.0,1008,-1.0,236.0,236,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.22,Direct,django,2.2.22,,,False,1035.0,1037,-2.0,271.0,272,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.22,Direct,django,2.2.22,,,False,1035.0,1037,-2.0,271.0,272,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.22,Direct,django,2.2.22,,,False,1104.0,1105,-1.0,340.0,340,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.22,Direct,django,2.2.22,,,False,1104.0,1105,-1.0,340.0,340,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.22,Direct,django,2.2.22,,,False,4033.0,4039,-7.0,27.0,33,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.22,Direct,django,2.2.22,,,False,791.0,797,-7.0,27.0,33,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.22,Direct,django,2.2.22,,,False,980.0,980,0.0,216.0,215,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.22,Direct,django,2.2.22,,,False,1007.0,1008,-1.0,243.0,243,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.22,Direct,django,2.2.22,,,False,1007.0,1008,-1.0,243.0,243,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.22,Direct,django,2.2.22,,,False,1007.0,1008,-1.0,243.0,243,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.21,Direct,django,2.2.21,,,False,1035.0,1037,-2.0,272.0,274,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.21,Direct,django,2.2.21,,,False,1035.0,1037,-2.0,272.0,274,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.21,Direct,django,2.2.21,,,False,1104.0,1105,-1.0,341.0,342,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.21,Direct,django,2.2.21,,,False,1104.0,1105,-1.0,341.0,342,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.21,Direct,django,2.2.21,,,False,764.0,764,-1.0,1.0,2,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.21,Direct,django,2.2.21,,,False,4033.0,4039,-7.0,29.0,35,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.21,Direct,django,2.2.21,,,False,791.0,797,-7.0,29.0,35,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.21,Direct,django,2.2.21,,,False,980.0,980,0.0,218.0,217,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.21,Direct,django,2.2.21,,,False,1007.0,1008,-1.0,245.0,245,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.21,Direct,django,2.2.21,,,False,1007.0,1008,-1.0,245.0,245,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.21,Direct,django,2.2.21,,,False,1007.0,1008,-1.0,245.0,245,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,1035.0,1037,-2.0,301.0,302,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,1035.0,1037,-2.0,301.0,302,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,1104.0,1105,-1.0,370.0,370,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,1104.0,1105,-1.0,370.0,370,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,762.0,763,-2.0,28.0,29,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,764.0,764,-1.0,30.0,30,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,4033.0,4039,-7.0,57.0,63,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,791.0,797,-7.0,57.0,63,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.20,Direct,django,2.2.20,,,False,980.0,980,0.0,246.0,245,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.20,Direct,django,2.2.20,,,False,1007.0,1008,-1.0,273.0,273,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,1007.0,1008,-1.0,273.0,273,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.20,Direct,django,2.2.20,,,False,1007.0,1008,-1.0,273.0,273,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,1035.0,1037,-2.0,346.0,348,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,1035.0,1037,-2.0,346.0,348,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,1104.0,1105,-1.0,415.0,416,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,1104.0,1105,-1.0,415.0,416,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,734.0,734,-1.0,45.0,46,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,762.0,763,-2.0,73.0,75,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,764.0,764,-1.0,75.0,76,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,4033.0,4039,-7.0,102.0,109,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,791.0,797,-7.0,102.0,109,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.19,Direct,django,2.2.19,,,False,980.0,980,0.0,292.0,291,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.19,Direct,django,2.2.19,,,False,1007.0,1008,-1.0,319.0,319,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,1007.0,1008,-1.0,319.0,319,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.19,Direct,django,2.2.19,,,False,1007.0,1008,-1.0,319.0,319,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,1035.0,1037,-2.0,364.0,366,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,1035.0,1037,-2.0,364.0,366,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,1104.0,1105,-1.0,433.0,434,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,1104.0,1105,-1.0,433.0,434,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,688.0,684,3.0,17.0,14,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,734.0,734,-1.0,63.0,64,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,762.0,763,-2.0,91.0,93,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,764.0,764,-1.0,93.0,94,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,4033.0,4039,-7.0,120.0,127,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,791.0,797,-7.0,120.0,127,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.18,Direct,django,2.2.18,,,False,980.0,980,0.0,310.0,309,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.18,Direct,django,2.2.18,,,False,1007.0,1008,-1.0,337.0,337,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,1007.0,1008,-1.0,337.0,337,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.18,Direct,django,2.2.18,,,False,1007.0,1008,-1.0,337.0,337,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,1035.0,1037,-2.0,455.0,457,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,1035.0,1037,-2.0,455.0,457,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,1104.0,1105,-1.0,524.0,525,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,1104.0,1105,-1.0,524.0,525,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,688.0,684,3.0,109.0,105,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,734.0,734,-1.0,154.0,155,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,762.0,763,-2.0,183.0,184,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,764.0,764,-1.0,184.0,185,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,670.0,671,-1.0,91.0,91,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,4033.0,4039,-7.0,212.0,218,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,791.0,797,-7.0,212.0,218,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.17,Direct,django,2.2.17,,,False,980.0,980,0.0,401.0,400,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.17,Direct,django,2.2.17,,,False,1007.0,1008,-1.0,428.0,428,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,1007.0,1008,-1.0,428.0,428,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.17,Direct,django,2.2.17,,,False,1007.0,1008,-1.0,428.0,428,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,1035.0,1037,-2.0,504.0,506,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,1035.0,1037,-2.0,504.0,506,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,1104.0,1105,-1.0,573.0,574,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,1104.0,1105,-1.0,573.0,574,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,688.0,684,3.0,157.0,153,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,734.0,734,-1.0,203.0,203,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,762.0,763,-2.0,231.0,232,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,764.0,764,-1.0,233.0,233,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,670.0,671,-1.0,139.0,140,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,4033.0,4039,-7.0,260.0,267,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,791.0,797,-7.0,260.0,267,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.16,Direct,django,2.2.16,,,False,980.0,980,0.0,450.0,449,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.16,Direct,django,2.2.16,,,False,1007.0,1008,-1.0,476.0,477,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,1007.0,1008,-1.0,476.0,477,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.16,Direct,django,2.2.16,,,False,1007.0,1008,-1.0,476.0,477,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,1035.0,1037,-2.0,547.0,548,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,1035.0,1037,-2.0,547.0,548,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,1104.0,1105,-1.0,616.0,616,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,1104.0,1105,-1.0,616.0,616,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,688.0,684,3.0,200.0,196,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,734.0,734,-1.0,246.0,246,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,762.0,763,-2.0,274.0,275,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,764.0,764,-1.0,276.0,276,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,670.0,671,-1.0,182.0,182,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,4033.0,4039,-7.0,303.0,309,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,791.0,797,-7.0,303.0,309,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.15,Direct,django,2.2.15,,,False,980.0,980,0.0,492.0,491,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.15,Direct,django,2.2.15,,,False,1007.0,1008,-1.0,519.0,519,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,1007.0,1008,-1.0,519.0,519,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,1007.0,1008,-1.0,519.0,519,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,530.0,517,13.0,42.0,29,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.15,Direct,django,2.2.15,,,False,530.0,517,13.0,42.0,29,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,1035.0,1037,-2.0,580.0,581,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,1035.0,1037,-2.0,580.0,581,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,1104.0,1105,-1.0,649.0,650,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,1104.0,1105,-1.0,649.0,650,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,688.0,684,3.0,233.0,229,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,734.0,734,-1.0,279.0,279,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,762.0,763,-2.0,307.0,308,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,764.0,764,-1.0,309.0,309,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,670.0,671,-1.0,215.0,216,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,4033.0,4039,-7.0,336.0,342,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,791.0,797,-7.0,336.0,342,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.14,Direct,django,2.2.14,,,False,980.0,980,0.0,525.0,524,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.14,Direct,django,2.2.14,,,False,1007.0,1008,-1.0,552.0,552,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,1007.0,1008,-1.0,552.0,552,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,1007.0,1008,-1.0,552.0,552,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,530.0,517,13.0,75.0,62,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.14,Direct,django,2.2.14,,,False,530.0,517,13.0,75.0,62,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,1035.0,1037,-2.0,607.0,609,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,1035.0,1037,-2.0,607.0,609,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,1104.0,1105,-1.0,676.0,677,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,1104.0,1105,-1.0,676.0,677,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,688.0,684,3.0,260.0,257,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,734.0,734,-1.0,306.0,307,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,762.0,763,-2.0,334.0,336,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,764.0,764,-1.0,336.0,337,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,670.0,671,-1.0,242.0,243,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,4033.0,4039,-7.0,363.0,370,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,791.0,797,-7.0,363.0,370,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.13,Direct,django,2.2.13,,,False,980.0,980,0.0,553.0,552,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.13,Direct,django,2.2.13,,,False,1007.0,1008,-1.0,580.0,580,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,1007.0,1008,-1.0,580.0,580,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,1007.0,1008,-1.0,580.0,580,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,530.0,517,13.0,103.0,90,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.13,Direct,django,2.2.13,,,False,530.0,517,13.0,103.0,90,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,1035.0,1037,-2.0,670.0,672,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,1035.0,1037,-2.0,670.0,672,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,1104.0,1105,-1.0,739.0,740,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,1104.0,1105,-1.0,739.0,740,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,688.0,684,3.0,324.0,320,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,734.0,734,-1.0,369.0,370,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,762.0,763,-2.0,398.0,399,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,764.0,764,-1.0,399.0,400,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,670.0,671,-1.0,306.0,306,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,4033.0,4039,-7.0,427.0,433,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,791.0,797,-7.0,427.0,433,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.12,Direct,django,2.2.12,,,False,980.0,980,0.0,616.0,615,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.12,Direct,django,2.2.12,,,False,1007.0,1008,-1.0,643.0,643,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,1007.0,1008,-1.0,643.0,643,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,1007.0,1008,-1.0,643.0,643,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,427.0,427,-1.0,63.0,63,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,427.0,427,-1.0,63.0,63,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,530.0,517,13.0,166.0,153,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.12,Direct,django,2.2.12,,,False,530.0,517,13.0,166.0,153,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,1035.0,1037,-2.0,698.0,700,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,1035.0,1037,-2.0,698.0,700,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,1104.0,1105,-1.0,767.0,768,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,1104.0,1105,-1.0,767.0,768,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,688.0,684,3.0,351.0,348,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,734.0,734,-1.0,397.0,398,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,762.0,763,-2.0,425.0,427,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,764.0,764,-1.0,427.0,428,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,670.0,671,-1.0,333.0,334,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,4033.0,4039,-7.0,454.0,461,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,791.0,797,-7.0,454.0,461,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.11,Direct,django,2.2.11,,,False,980.0,980,0.0,644.0,643,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.11,Direct,django,2.2.11,,,False,1007.0,1008,-1.0,671.0,671,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,1007.0,1008,-1.0,671.0,671,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,1007.0,1008,-1.0,671.0,671,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,427.0,427,-1.0,90.0,91,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,427.0,427,-1.0,90.0,91,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,530.0,517,13.0,194.0,181,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.11,Direct,django,2.2.11,,,False,530.0,517,13.0,194.0,181,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,1035.0,1037,-2.0,728.0,730,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,1035.0,1037,-2.0,728.0,730,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,1104.0,1105,-1.0,797.0,798,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,1104.0,1105,-1.0,797.0,798,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,688.0,684,3.0,381.0,378,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,734.0,734,-1.0,427.0,428,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,762.0,763,-2.0,455.0,457,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,764.0,764,-1.0,457.0,458,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,670.0,671,-1.0,363.0,364,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,4033.0,4039,-7.0,484.0,491,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,791.0,797,-7.0,484.0,491,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.10,Direct,django,2.2.10,,,False,980.0,980,0.0,674.0,673,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.10,Direct,django,2.2.10,,,False,1007.0,1008,-1.0,701.0,701,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,1007.0,1008,-1.0,701.0,701,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,1007.0,1008,-1.0,701.0,701,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,427.0,427,-1.0,120.0,121,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,427.0,427,-1.0,120.0,121,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,530.0,517,13.0,224.0,211,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,530.0,517,13.0,224.0,211,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.10,Direct,django,2.2.10,,,False,336.0,337,-2.0,29.0,31,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,1035.0,1037,-2.0,775.0,777,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,1035.0,1037,-2.0,775.0,777,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,1104.0,1105,-1.0,844.0,845,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,1104.0,1105,-1.0,844.0,845,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,688.0,684,3.0,429.0,425,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,734.0,734,-1.0,474.0,475,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,762.0,763,-2.0,502.0,504,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,764.0,764,-1.0,504.0,505,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,670.0,671,-1.0,411.0,411,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,4033.0,4039,-7.0,531.0,538,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,791.0,797,-7.0,531.0,538,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.9,Direct,django,2.2.9,,,False,980.0,980,0.0,721.0,720,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.9,Direct,django,2.2.9,,,False,1007.0,1008,-1.0,748.0,748,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,1007.0,1008,-1.0,748.0,748,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,1007.0,1008,-1.0,748.0,748,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,427.0,427,-1.0,168.0,168,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,427.0,427,-1.0,168.0,168,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,530.0,517,13.0,271.0,258,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,530.0,517,13.0,271.0,258,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,306.0,306,-1.0,47.0,47,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.9,Direct,django,2.2.9,,,False,336.0,337,-2.0,77.0,78,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,1035.0,1037,-2.0,791.0,793,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,1035.0,1037,-2.0,791.0,793,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,1104.0,1105,-1.0,860.0,861,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,1104.0,1105,-1.0,860.0,861,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,688.0,684,3.0,445.0,441,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,734.0,734,-1.0,490.0,491,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,762.0,763,-2.0,518.0,520,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,764.0,764,-1.0,520.0,521,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,670.0,671,-1.0,427.0,427,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,4033.0,4039,-7.0,547.0,554,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,791.0,797,-7.0,547.0,554,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.8,Direct,django,2.2.8,,,False,980.0,980,0.0,737.0,736,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.8,Direct,django,2.2.8,,,False,1007.0,1008,-1.0,764.0,764,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,1007.0,1008,-1.0,764.0,764,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,1007.0,1008,-1.0,764.0,764,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,427.0,427,-1.0,184.0,184,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,427.0,427,-1.0,184.0,184,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,530.0,517,13.0,287.0,274,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,530.0,517,13.0,287.0,274,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,306.0,306,-1.0,63.0,63,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,336.0,337,-2.0,93.0,94,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.8,Direct,django,2.2.8,,,False,259.0,259,-1.0,16.0,16,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,1035.0,1037,-2.0,819.0,821,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,1035.0,1037,-2.0,819.0,821,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,1104.0,1105,-1.0,888.0,889,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,1104.0,1105,-1.0,888.0,889,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,688.0,684,3.0,473.0,469,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,734.0,734,-1.0,518.0,519,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,762.0,763,-2.0,547.0,548,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,764.0,764,-1.0,548.0,549,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,670.0,671,-1.0,455.0,455,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,4033.0,4039,-7.0,576.0,582,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,791.0,797,-7.0,576.0,582,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.7,Direct,django,2.2.7,,,False,980.0,980,0.0,765.0,764,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.7,Direct,django,2.2.7,,,False,1007.0,1008,-1.0,792.0,792,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,1007.0,1008,-1.0,792.0,792,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,1007.0,1008,-1.0,792.0,792,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,427.0,427,-1.0,212.0,212,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,427.0,427,-1.0,212.0,212,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,530.0,517,13.0,315.0,302,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,530.0,517,13.0,315.0,302,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,306.0,306,-1.0,91.0,91,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,336.0,337,-2.0,121.0,122,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,243.0,243,-1.0,28.0,28,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.7,Direct,django,2.2.7,,,False,259.0,259,-1.0,44.0,44,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,1035.0,1037,-2.0,819.0,821,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,1035.0,1037,-2.0,819.0,821,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,1104.0,1105,-1.0,888.0,889,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,1104.0,1105,-1.0,888.0,889,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,688.0,684,3.0,473.0,469,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,734.0,734,-1.0,518.0,519,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,762.0,763,-2.0,547.0,548,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,764.0,764,-1.0,548.0,549,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,670.0,671,-1.0,455.0,455,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,4033.0,4039,-7.0,576.0,582,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,791.0,797,-7.0,576.0,582,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.6,Direct,django,2.2.6,,,False,980.0,980,0.0,765.0,764,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.6,Direct,django,2.2.6,,,False,1007.0,1008,-1.0,792.0,792,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,1007.0,1008,-1.0,792.0,792,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,1007.0,1008,-1.0,792.0,792,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,427.0,427,-1.0,212.0,212,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,427.0,427,-1.0,212.0,212,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,530.0,517,13.0,315.0,302,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,530.0,517,13.0,315.0,302,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,306.0,306,-1.0,91.0,91,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,336.0,337,-2.0,121.0,122,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,243.0,243,-1.0,28.0,28,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.6,Direct,django,2.2.6,,,False,259.0,259,-1.0,44.0,44,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,1035.0,1037,-2.0,882.0,884,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,1035.0,1037,-2.0,882.0,884,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,1104.0,1105,-1.0,951.0,952,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,1104.0,1105,-1.0,951.0,952,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,688.0,684,3.0,535.0,531,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,734.0,734,-1.0,581.0,581,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,762.0,763,-2.0,609.0,610,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,764.0,764,-1.0,611.0,611,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,670.0,671,-1.0,517.0,518,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,4033.0,4039,-7.0,638.0,644,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,791.0,797,-7.0,638.0,644,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.5,Direct,django,2.2.5,,,False,980.0,980,0.0,827.0,827,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.5,Direct,django,2.2.5,,,False,1007.0,1008,-1.0,854.0,855,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,1007.0,1008,-1.0,854.0,855,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,1007.0,1008,-1.0,854.0,855,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,427.0,427,-1.0,274.0,274,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,427.0,427,-1.0,274.0,274,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,530.0,517,13.0,377.0,364,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,530.0,517,13.0,377.0,364,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,306.0,306,-1.0,153.0,153,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,336.0,337,-2.0,183.0,184,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,243.0,243,-1.0,90.0,90,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.5,Direct,django,2.2.5,,,False,259.0,259,-1.0,106.0,106,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,1035.0,1037,-2.0,914.0,916,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,1035.0,1037,-2.0,914.0,916,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,1104.0,1105,-1.0,983.0,984,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,1104.0,1105,-1.0,983.0,984,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,688.0,684,3.0,568.0,564,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,734.0,734,-1.0,613.0,614,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,762.0,763,-2.0,641.0,643,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,764.0,764,-1.0,643.0,644,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,670.0,671,-1.0,550.0,550,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,4033.0,4039,-7.0,670.0,677,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,791.0,797,-7.0,670.0,677,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.4,Direct,django,2.2.4,,,False,980.0,980,0.0,860.0,859,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.4,Direct,django,2.2.4,,,False,1007.0,1008,-1.0,887.0,887,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,1007.0,1008,-1.0,887.0,887,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,1007.0,1008,-1.0,887.0,887,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,427.0,427,-1.0,307.0,307,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,427.0,427,-1.0,307.0,307,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,530.0,517,13.0,410.0,397,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,530.0,517,13.0,410.0,397,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,306.0,306,-1.0,186.0,186,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,336.0,337,-2.0,216.0,217,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,243.0,243,-1.0,122.0,123,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.4,Direct,django,2.2.4,,,False,259.0,259,-1.0,138.0,139,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,1035.0,1037,-2.0,946.0,947,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,1035.0,1037,-2.0,946.0,947,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,1104.0,1105,-1.0,1015.0,1015,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,1104.0,1105,-1.0,1015.0,1015,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,688.0,684,3.0,599.0,595,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,734.0,734,-1.0,645.0,645,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,762.0,763,-2.0,673.0,674,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,764.0,764,-1.0,675.0,675,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,670.0,671,-1.0,581.0,581,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,4033.0,4039,-7.0,702.0,708,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,791.0,797,-7.0,702.0,708,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.3,Direct,django,2.2.3,,,False,980.0,980,0.0,891.0,890,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.3,Direct,django,2.2.3,,,False,1007.0,1008,-1.0,918.0,918,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,1007.0,1008,-1.0,918.0,918,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,1007.0,1008,-1.0,918.0,918,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,427.0,427,-1.0,338.0,338,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,427.0,427,-1.0,338.0,338,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,530.0,517,13.0,441.0,428,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,530.0,517,13.0,441.0,428,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,306.0,306,-1.0,217.0,217,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,336.0,337,-2.0,247.0,248,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,120.0,121,-2.0,31.0,32,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,120.0,121,-2.0,31.0,32,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,120.0,128,-9.0,31.0,39,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,120.0,121,-2.0,31.0,32,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,243.0,243,-1.0,154.0,154,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.3,Direct,django,2.2.3,,,False,259.0,259,-1.0,170.0,170,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,1035.0,1037,-2.0,971.0,973,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,1035.0,1037,-2.0,971.0,973,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,1104.0,1105,-1.0,1040.0,1041,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,1104.0,1105,-1.0,1040.0,1041,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,688.0,684,3.0,624.0,620,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,734.0,734,-1.0,670.0,671,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,762.0,763,-2.0,698.0,700,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,764.0,764,-1.0,700.0,701,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,670.0,671,-1.0,606.0,607,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,4033.0,4039,-7.0,727.0,734,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,791.0,797,-7.0,727.0,734,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.2,Direct,django,2.2.2,,,False,980.0,980,0.0,917.0,916,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.2,Direct,django,2.2.2,,,False,1007.0,1008,-1.0,943.0,944,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,1007.0,1008,-1.0,943.0,944,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,1007.0,1008,-1.0,943.0,944,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,427.0,427,-1.0,363.0,364,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,427.0,427,-1.0,363.0,364,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,530.0,517,13.0,467.0,453,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,530.0,517,13.0,467.0,453,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,306.0,306,-1.0,242.0,242,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,336.0,337,-2.0,272.0,274,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,89.0,89,-1.0,25.0,26,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,120.0,121,-2.0,56.0,58,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,120.0,121,-2.0,56.0,58,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,120.0,128,-9.0,56.0,64,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,120.0,121,-2.0,56.0,58,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,243.0,243,-1.0,179.0,180,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.2,Direct,django,2.2.2,,,False,259.0,259,-1.0,195.0,196,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,1035.0,1037,-2.0,1006.0,1008,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,1035.0,1037,-2.0,1006.0,1008,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,1104.0,1105,-1.0,1075.0,1076,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,1104.0,1105,-1.0,1075.0,1076,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,688.0,684,3.0,660.0,656,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,734.0,734,-1.0,705.0,706,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,762.0,763,-2.0,734.0,735,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,764.0,764,-1.0,735.0,736,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,670.0,671,-1.0,642.0,642,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,4033.0,4039,-7.0,763.0,769,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,791.0,797,-7.0,763.0,769,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2.1,Direct,django,2.2.1,,,False,980.0,980,0.0,952.0,951,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2.1,Direct,django,2.2.1,,,False,1007.0,1008,-1.0,979.0,979,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,1007.0,1008,-1.0,979.0,979,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,1007.0,1008,-1.0,979.0,979,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,427.0,427,-1.0,399.0,399,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,427.0,427,-1.0,399.0,399,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,530.0,517,13.0,502.0,489,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,530.0,517,13.0,502.0,489,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,306.0,306,-1.0,278.0,278,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,336.0,337,-2.0,308.0,309,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,63.0,61,1.0,35.0,33,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,89.0,89,-1.0,60.0,61,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,120.0,121,-2.0,92.0,93,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,120.0,121,-2.0,92.0,93,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,120.0,128,-9.0,92.0,100,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,120.0,121,-2.0,92.0,93,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,243.0,243,-1.0,215.0,215,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2.1,Direct,django,2.2.1,,,False,259.0,259,-1.0,231.0,231,False
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,1035.0,1037,-2.0,1035.0,1037,False
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,1035.0,1037,-2.0,1035.0,1037,False
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2,Direct,django,2.2,,,False,1104.0,1105,-1.0,1104.0,1105,False
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2,Direct,django,2.2,,,False,1104.0,1105,-1.0,1104.0,1105,False
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,688.0,684,3.0,688.0,684,False
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,734.0,734,-1.0,734.0,734,False
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,762.0,763,-2.0,762.0,763,False
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,764.0,764,-1.0,764.0,764,False
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,670.0,671,-1.0,670.0,671,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,4033.0,4039,-7.0,791.0,797,False
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,791.0,797,-7.0,791.0,797,False
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,django,2.2,Direct,django,2.2,,,False,980.0,980,0.0,980.0,980,False
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,django,2.2,Direct,django,2.2,,,False,1007.0,1008,-1.0,1007.0,1008,False
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,1007.0,1008,-1.0,1007.0,1008,False
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,1007.0,1008,-1.0,1007.0,1008,False
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,427.0,427,-1.0,427.0,427,False
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,427.0,427,-1.0,427.0,427,False
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,530.0,517,13.0,530.0,517,False
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,530.0,517,13.0,530.0,517,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2,Direct,django,2.2,,,False,306.0,306,-1.0,306.0,306,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,336.0,337,-2.0,336.0,337,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,63.0,61,1.0,63.0,61,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,89.0,89,-1.0,89.0,89,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,120.0,121,-2.0,120.0,121,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,120.0,121,-2.0,120.0,121,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2,Direct,django,2.2,,,False,120.0,128,-9.0,120.0,128,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,django,2.2,Direct,django,2.2,,,False,120.0,121,-2.0,120.0,121,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,django,2.2,Direct,django,2.2,,,False,243.0,243,-1.0,243.0,243,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,django,2.2,Direct,django,2.2,,,False,259.0,259,-1.0,259.0,259,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.15,Direct,django,2.1.15,,,False,4033.0,4039,-7.0,547.0,554,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.14,Direct,django,2.1.14,,,False,4033.0,4039,-7.0,576.0,582,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.14,Direct,django,2.1.14,,,False,487.0,487,-1.0,28.0,28,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.13,Direct,django,2.1.13,,,False,4033.0,4039,-7.0,576.0,582,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.13,Direct,django,2.1.13,,,False,487.0,487,-1.0,28.0,28,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.12,Direct,django,2.1.12,,,False,4033.0,4039,-7.0,638.0,644,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.12,Direct,django,2.1.12,,,False,487.0,487,-1.0,90.0,90,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.11,Direct,django,2.1.11,,,False,4033.0,4039,-7.0,670.0,677,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.11,Direct,django,2.1.11,,,False,487.0,487,-1.0,122.0,123,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.10,Direct,django,2.1.10,,,False,4033.0,4039,-7.0,702.0,708,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.10,Direct,django,2.1.10,,,False,364.0,366,-2.0,31.0,32,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.10,Direct,django,2.1.10,,,False,364.0,366,-2.0,31.0,32,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1.10,Direct,django,2.1.10,,,False,364.0,372,-9.0,31.0,39,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.10,Direct,django,2.1.10,,,False,364.0,366,-2.0,31.0,32,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.10,Direct,django,2.1.10,,,False,487.0,487,-1.0,154.0,154,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.9,Direct,django,2.1.9,,,False,4033.0,4039,-7.0,727.0,734,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,django,2.1.9,Direct,django,2.1.9,,,False,333.0,333,-1.0,25.0,26,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.9,Direct,django,2.1.9,,,False,364.0,366,-2.0,56.0,58,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.9,Direct,django,2.1.9,,,False,364.0,366,-2.0,56.0,58,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1.9,Direct,django,2.1.9,,,False,364.0,372,-9.0,56.0,64,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.9,Direct,django,2.1.9,,,False,364.0,366,-2.0,56.0,58,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.9,Direct,django,2.1.9,,,False,487.0,487,-1.0,179.0,180,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.8,Direct,django,2.1.8,,,False,4033.0,4039,-7.0,792.0,799,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,django,2.1.8,Direct,django,2.1.8,,,False,307.0,306,1.0,65.0,63,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,django,2.1.8,Direct,django,2.1.8,,,False,333.0,333,-1.0,90.0,91,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.8,Direct,django,2.1.8,,,False,364.0,366,-2.0,121.0,123,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.8,Direct,django,2.1.8,,,False,364.0,366,-2.0,121.0,123,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1.8,Direct,django,2.1.8,,,False,364.0,372,-9.0,121.0,130,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.8,Direct,django,2.1.8,,,False,364.0,366,-2.0,121.0,123,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.8,Direct,django,2.1.8,,,False,487.0,487,-1.0,244.0,245,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.7,Direct,django,2.1.7,,,False,4033.0,4039,-7.0,792.0,799,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,django,2.1.7,Direct,django,2.1.7,,,False,307.0,306,1.0,65.0,63,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,django,2.1.7,Direct,django,2.1.7,,,False,333.0,333,-1.0,90.0,91,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.7,Direct,django,2.1.7,,,False,364.0,366,-2.0,121.0,123,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.7,Direct,django,2.1.7,,,False,364.0,366,-2.0,121.0,123,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1.7,Direct,django,2.1.7,,,False,364.0,372,-9.0,121.0,130,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.7,Direct,django,2.1.7,,,False,364.0,366,-2.0,121.0,123,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.7,Direct,django,2.1.7,,,False,487.0,487,-1.0,244.0,245,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.5,Direct,django,2.1.5,,,False,4033.0,4039,-7.0,879.0,886,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,django,2.1.5,Direct,django,2.1.5,,,False,307.0,306,1.0,151.0,150,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,django,2.1.5,Direct,django,2.1.5,,,False,333.0,333,-1.0,177.0,178,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.5,Direct,django,2.1.5,,,False,364.0,366,-2.0,208.0,210,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.5,Direct,django,2.1.5,,,False,364.0,366,-2.0,208.0,210,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1.5,Direct,django,2.1.5,,,False,364.0,372,-9.0,208.0,216,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.5,Direct,django,2.1.5,,,False,364.0,366,-2.0,208.0,210,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.5,Direct,django,2.1.5,,,False,487.0,487,-1.0,331.0,332,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.5,Direct,django,2.1.5,,,False,,3191,,,37,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,4033.0,4039,-7.0,911.0,918,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,307.0,306,1.0,183.0,182,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,333.0,333,-1.0,209.0,209,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,364.0,366,-2.0,240.0,241,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,364.0,366,-2.0,240.0,241,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,364.0,372,-9.0,240.0,248,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,364.0,366,-2.0,240.0,241,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,487.0,487,-1.0,363.0,363,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,155.0,161,-6.0,31.0,37,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.4,Direct,django,2.1.4,,,False,,3191,,,69,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,4033.0,4039,-7.0,943.0,950,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,307.0,306,1.0,215.0,214,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,333.0,333,-1.0,241.0,241,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,364.0,366,-2.0,272.0,274,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,364.0,366,-2.0,272.0,274,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,364.0,372,-9.0,272.0,280,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,364.0,366,-2.0,272.0,274,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,487.0,487,-1.0,395.0,395,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,155.0,161,-6.0,63.0,69,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.3,Direct,django,2.1.3,,,False,,3191,,,101,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,4033.0,4039,-7.0,974.0,981,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,307.0,306,1.0,247.0,245,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,333.0,333,-1.0,272.0,273,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,364.0,366,-2.0,303.0,305,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,364.0,366,-2.0,303.0,305,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,364.0,372,-9.0,303.0,312,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,364.0,366,-2.0,303.0,305,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,487.0,487,-1.0,426.0,427,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,155.0,161,-6.0,95.0,100,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.2,Direct,django,2.1.2,,,False,,3191,,,133,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,4033.0,4039,-7.0,1006.0,1012,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,307.0,306,1.0,278.0,276,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,333.0,333,-1.0,303.0,304,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,364.0,366,-2.0,335.0,336,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,364.0,366,-2.0,335.0,336,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,364.0,372,-9.0,335.0,343,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,364.0,366,-2.0,335.0,336,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,487.0,487,-1.0,458.0,458,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,155.0,161,-6.0,126.0,131,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,,3191,,,164,False
113314,CVE-2018-16984,"An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the ""view"" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",2018-10-02 18:29:00,2019-10-03 00:03:00,2024-03-19 16:35:54.588561,3.0,1.2,3.6,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1.1,Direct,django,2.1.1,,,False,60.0,62,-2.0,31.0,32,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1,Direct,django,2.1,,,False,4033.0,4039,-7.0,1035.0,1042,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,django,2.1,Direct,django,2.1,,,False,307.0,306,1.0,307.0,306,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,django,2.1,Direct,django,2.1,,,False,333.0,333,-1.0,333.0,333,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1,Direct,django,2.1,,,False,364.0,366,-2.0,364.0,366,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1,Direct,django,2.1,,,False,364.0,366,-2.0,364.0,366,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,django,2.1,Direct,django,2.1,,,False,364.0,372,-9.0,364.0,372,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1,Direct,django,2.1,,,False,364.0,366,-2.0,364.0,366,False
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1,Direct,django,2.1,,,False,487.0,487,-1.0,487.0,487,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,django,2.1,Direct,django,2.1,,,False,155.0,161,-6.0,155.0,161,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,django,2.1,Direct,django,2.1,,,False,,3191,,,193,False
113314,CVE-2018-16984,"An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the ""view"" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",2018-10-02 18:29:00,2019-10-03 00:03:00,2024-03-19 16:35:54.588561,3.0,1.2,3.6,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,django,2.1,Direct,django,2.1,,,False,60.0,62,-2.0,60.0,62,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.13,Direct,django,2.0.13,,,False,4033.0,4039,-7.0,792.0,799,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.12,Direct,django,2.0.12,,,False,4033.0,4039,-7.0,792.0,799,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.10,Direct,django,2.0.10,,,False,4033.0,4039,-7.0,879.0,886,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.10,Direct,django,2.0.10,,,False,,3191,,,37,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.9,Direct,django,2.0.9,,,False,4033.0,4039,-7.0,974.0,981,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0.9,Direct,django,2.0.9,,,False,397.0,403,-6.0,95.0,100,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.9,Direct,django,2.0.9,,,False,,3191,,,133,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.8,Direct,django,2.0.8,,,False,4033.0,4039,-7.0,1035.0,1042,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0.8,Direct,django,2.0.8,,,False,397.0,403,-6.0,156.0,161,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.8,Direct,django,2.0.8,,,False,,3191,,,193,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.7,Direct,django,2.0.7,,,False,4033.0,4039,-7.0,1065.0,1072,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0.7,Direct,django,2.0.7,,,False,397.0,403,-6.0,186.0,191,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.7,Direct,django,2.0.7,,,False,,3191,,,224,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,django,2.0.7,Direct,django,2.0.7,,,False,241.0,244,-3.0,30.0,32,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.6,Direct,django,2.0.6,,,False,4033.0,4039,-7.0,1096.0,1103,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0.6,Direct,django,2.0.6,,,False,397.0,403,-6.0,216.0,222,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.6,Direct,django,2.0.6,,,False,,3191,,,254,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,django,2.0.6,Direct,django,2.0.6,,,False,241.0,244,-3.0,60.0,63,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.5,Direct,django,2.0.5,,,False,4033.0,4039,-7.0,1127.0,1133,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0.5,Direct,django,2.0.5,,,False,397.0,403,-6.0,247.0,252,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.5,Direct,django,2.0.5,,,False,,3191,,,285,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,django,2.0.5,Direct,django,2.0.5,,,False,241.0,244,-3.0,91.0,93,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.4,Direct,django,2.0.4,,,False,4033.0,4039,-7.0,1156.0,1162,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0.4,Direct,django,2.0.4,,,False,397.0,403,-6.0,276.0,281,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.4,Direct,django,2.0.4,,,False,,3191,,,314,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,django,2.0.4,Direct,django,2.0.4,,,False,241.0,244,-3.0,120.0,122,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.3,Direct,django,2.0.3,,,False,4033.0,4039,-7.0,1183.0,1190,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0.3,Direct,django,2.0.3,,,False,397.0,403,-6.0,304.0,309,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.3,Direct,django,2.0.3,,,False,,3191,,,341,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,django,2.0.3,Direct,django,2.0.3,,,False,241.0,244,-3.0,147.0,150,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.2,Direct,django,2.0.2,,,False,4033.0,4039,-7.0,1216.0,1223,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0.2,Direct,django,2.0.2,,,False,397.0,403,-6.0,337.0,342,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.2,Direct,django,2.0.2,,,False,,3191,,,374,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,django,2.0.2,Direct,django,2.0.2,,,False,241.0,244,-3.0,180.0,183,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,django,2.0.2,Direct,django,2.0.2,,,False,93.0,97,-4.0,32.0,36,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,django,2.0.2,Direct,django,2.0.2,,,False,93.0,97,-4.0,32.0,36,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0.1,Direct,django,2.0.1,,,False,4033.0,4039,-7.0,1247.0,1253,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0.1,Direct,django,2.0.1,,,False,397.0,403,-6.0,367.0,372,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0.1,Direct,django,2.0.1,,,False,,3191,,,405,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,django,2.0.1,Direct,django,2.0.1,,,False,241.0,244,-3.0,211.0,213,False
119588,CVE-2018-6188,"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",2018-02-05 03:29:00,2019-03-12 17:54:00,2024-03-19 16:38:30.653600,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,django,2.0.1,Direct,django,2.0.1,,,False,60.0,64,-4.0,30.0,34,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,django,2.0.1,Direct,django,2.0.1,,,False,93.0,97,-4.0,63.0,66,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,django,2.0.1,Direct,django,2.0.1,,,False,93.0,97,-4.0,63.0,66,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,django,2.0,Direct,django,2.0,,,False,4033.0,4039,-7.0,1277.0,1284,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,django,2.0,Direct,django,2.0,,,False,397.0,403,-6.0,397.0,403,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,django,2.0,Direct,django,2.0,,,False,,3191,,,435,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,django,2.0,Direct,django,2.0,,,False,241.0,244,-3.0,241.0,244,False
119588,CVE-2018-6188,"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",2018-02-05 03:29:00,2019-03-12 17:54:00,2024-03-19 16:38:30.653600,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,django,2.0,Direct,django,2.0,,,False,60.0,64,-4.0,60.0,64,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,django,2.0,Direct,django,2.0,,,False,93.0,97,-4.0,93.0,97,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,django,2.0,Direct,django,2.0,,,False,93.0,97,-4.0,93.0,97,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.29,Direct,django,1.11.29,,,False,4033.0,4039,-7.0,454.0,461,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.28,Direct,django,1.11.28,,,False,4033.0,4039,-7.0,484.0,491,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.28,Direct,django,1.11.28,,,False,1064.0,1065,-2.0,29.0,31,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.27,Direct,django,1.11.27,,,False,4033.0,4039,-7.0,531.0,538,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.27,Direct,django,1.11.27,,,False,1034.0,1034,-1.0,47.0,47,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.27,Direct,django,1.11.27,,,False,1064.0,1065,-2.0,77.0,78,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.26,Direct,django,1.11.26,,,False,4033.0,4039,-7.0,576.0,582,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.26,Direct,django,1.11.26,,,False,1034.0,1034,-1.0,91.0,91,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.26,Direct,django,1.11.26,,,False,1064.0,1065,-2.0,121.0,122,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.26,Direct,django,1.11.26,,,False,3501.0,3501,-1.0,44.0,44,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.25,Direct,django,1.11.25,,,False,4033.0,4039,-7.0,576.0,582,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.25,Direct,django,1.11.25,,,False,1034.0,1034,-1.0,91.0,91,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.25,Direct,django,1.11.25,,,False,1064.0,1065,-2.0,121.0,122,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.25,Direct,django,1.11.25,,,False,3501.0,3501,-1.0,44.0,44,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.24,Direct,django,1.11.24,,,False,4033.0,4039,-7.0,638.0,644,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.24,Direct,django,1.11.24,,,False,1034.0,1034,-1.0,153.0,153,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.24,Direct,django,1.11.24,,,False,1064.0,1065,-2.0,183.0,184,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.24,Direct,django,1.11.24,,,False,3501.0,3501,-1.0,106.0,106,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.23,Direct,django,1.11.23,,,False,4033.0,4039,-7.0,670.0,677,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.23,Direct,django,1.11.23,,,False,1034.0,1034,-1.0,186.0,186,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.23,Direct,django,1.11.23,,,False,1064.0,1065,-2.0,216.0,217,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.23,Direct,django,1.11.23,,,False,3501.0,3501,-1.0,138.0,139,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.22,Direct,django,1.11.22,,,False,4033.0,4039,-7.0,702.0,708,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.22,Direct,django,1.11.22,,,False,1034.0,1034,-1.0,217.0,217,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.22,Direct,django,1.11.22,,,False,1064.0,1065,-2.0,247.0,248,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.22,Direct,django,1.11.22,,,False,848.0,849,-2.0,31.0,32,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.22,Direct,django,1.11.22,,,False,848.0,849,-2.0,31.0,32,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.22,Direct,django,1.11.22,,,False,848.0,856,-9.0,31.0,39,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.22,Direct,django,1.11.22,,,False,848.0,849,-2.0,31.0,32,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.22,Direct,django,1.11.22,,,False,3501.0,3501,-1.0,170.0,170,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.21,Direct,django,1.11.21,,,False,4033.0,4039,-7.0,727.0,734,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.21,Direct,django,1.11.21,,,False,1034.0,1034,-1.0,242.0,242,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.21,Direct,django,1.11.21,,,False,1064.0,1065,-2.0,272.0,274,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.21,Direct,django,1.11.21,,,False,817.0,817,-1.0,25.0,26,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.21,Direct,django,1.11.21,,,False,848.0,849,-2.0,56.0,58,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.21,Direct,django,1.11.21,,,False,848.0,849,-2.0,56.0,58,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.21,Direct,django,1.11.21,,,False,848.0,856,-9.0,56.0,64,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.21,Direct,django,1.11.21,,,False,848.0,849,-2.0,56.0,58,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.21,Direct,django,1.11.21,,,False,3501.0,3501,-1.0,195.0,196,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,4033.0,4039,-7.0,792.0,799,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,1034.0,1034,-1.0,308.0,308,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,1064.0,1065,-2.0,338.0,339,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,791.0,790,1.0,65.0,63,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,817.0,817,-1.0,90.0,91,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,848.0,849,-2.0,121.0,123,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,848.0,849,-2.0,121.0,123,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,848.0,856,-9.0,121.0,130,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,848.0,849,-2.0,121.0,123,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.20,Direct,django,1.11.20,,,False,3501.0,3501,-1.0,260.0,261,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,4033.0,4039,-7.0,879.0,886,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,1034.0,1034,-1.0,394.0,394,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,1064.0,1065,-2.0,424.0,426,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,791.0,790,1.0,151.0,150,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,817.0,817,-1.0,177.0,177,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,848.0,849,-2.0,208.0,210,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,848.0,849,-2.0,208.0,210,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,848.0,856,-9.0,208.0,216,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,848.0,849,-2.0,208.0,210,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,3501.0,3501,-1.0,347.0,348,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.18,Direct,django,1.11.18,,,False,,3191,,,37,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,4033.0,4039,-7.0,911.0,918,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,1034.0,1034,-1.0,426.0,426,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,1064.0,1065,-2.0,456.0,457,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,791.0,790,1.0,183.0,182,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,817.0,817,-1.0,209.0,209,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,848.0,849,-2.0,240.0,241,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,848.0,849,-2.0,240.0,241,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,848.0,856,-9.0,240.0,248,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,848.0,849,-2.0,240.0,241,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,3501.0,3501,-1.0,379.0,380,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,639.0,645,-6.0,31.0,37,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.17,Direct,django,1.11.17,,,False,,3191,,,69,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,4033.0,4039,-7.0,974.0,981,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,1034.0,1034,-1.0,490.0,490,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,1064.0,1065,-2.0,520.0,521,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,791.0,790,1.0,247.0,245,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,817.0,817,-1.0,272.0,273,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,848.0,849,-2.0,303.0,305,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,848.0,849,-2.0,303.0,305,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,848.0,856,-9.0,303.0,312,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,848.0,849,-2.0,303.0,305,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,3501.0,3501,-1.0,442.0,443,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,639.0,645,-6.0,95.0,100,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.16,Direct,django,1.11.16,,,False,,3191,,,133,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,4033.0,4039,-7.0,1035.0,1042,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,1034.0,1034,-1.0,550.0,550,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,1064.0,1065,-2.0,580.0,582,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,791.0,790,1.0,307.0,306,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,817.0,817,-1.0,333.0,334,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,848.0,849,-2.0,364.0,366,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,848.0,849,-2.0,364.0,366,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,848.0,856,-9.0,364.0,372,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,848.0,849,-2.0,364.0,366,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,3501.0,3501,-1.0,503.0,504,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,639.0,645,-6.0,156.0,161,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.15,Direct,django,1.11.15,,,False,,3191,,,193,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,4033.0,4039,-7.0,1065.0,1072,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,1034.0,1034,-1.0,581.0,581,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,1064.0,1065,-2.0,611.0,612,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,791.0,790,1.0,338.0,336,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,817.0,817,-1.0,363.0,364,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,848.0,849,-2.0,395.0,396,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,848.0,849,-2.0,395.0,396,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,848.0,856,-9.0,395.0,403,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,848.0,849,-2.0,395.0,396,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,3501.0,3501,-1.0,533.0,534,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,639.0,645,-6.0,186.0,191,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,,3191,,,224,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.14,Direct,django,1.11.14,,,False,483.0,486,-3.0,30.0,32,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,4033.0,4039,-7.0,1127.0,1133,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,1034.0,1034,-1.0,642.0,642,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,1064.0,1065,-2.0,672.0,673,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,791.0,790,1.0,399.0,397,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,817.0,817,-1.0,425.0,425,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,848.0,849,-2.0,456.0,457,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,848.0,849,-2.0,456.0,457,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,848.0,856,-9.0,456.0,464,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,848.0,849,-2.0,456.0,457,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,3501.0,3501,-1.0,595.0,595,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,639.0,645,-6.0,247.0,252,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,,3191,,,285,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.13,Direct,django,1.11.13,,,False,483.0,486,-3.0,91.0,93,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,4033.0,4039,-7.0,1156.0,1162,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,1034.0,1034,-1.0,671.0,671,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,1064.0,1065,-2.0,701.0,702,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,791.0,790,1.0,428.0,426,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,817.0,817,-1.0,454.0,454,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,848.0,849,-2.0,485.0,486,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,848.0,849,-2.0,485.0,486,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,848.0,856,-9.0,485.0,493,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,848.0,849,-2.0,485.0,486,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,3501.0,3501,-1.0,624.0,624,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,639.0,645,-6.0,276.0,281,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,,3191,,,314,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.12,Direct,django,1.11.12,,,False,483.0,486,-3.0,120.0,122,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,4033.0,4039,-7.0,1183.0,1190,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,1034.0,1034,-1.0,698.0,698,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,1064.0,1065,-2.0,728.0,730,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,791.0,790,1.0,455.0,454,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,817.0,817,-1.0,481.0,481,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,848.0,849,-2.0,512.0,514,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,848.0,849,-2.0,512.0,514,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,848.0,856,-9.0,512.0,520,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,848.0,849,-2.0,512.0,514,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,3501.0,3501,-1.0,651.0,652,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,639.0,645,-6.0,304.0,309,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,,3191,,,341,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.11,Direct,django,1.11.11,,,False,483.0,486,-3.0,147.0,150,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,4033.0,4039,-7.0,1216.0,1223,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,1034.0,1034,-1.0,731.0,731,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,1064.0,1065,-2.0,761.0,762,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,791.0,790,1.0,488.0,487,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,817.0,817,-1.0,514.0,514,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,848.0,849,-2.0,545.0,546,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,848.0,849,-2.0,545.0,546,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,848.0,856,-9.0,545.0,553,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,848.0,849,-2.0,545.0,546,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,3501.0,3501,-1.0,684.0,685,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,639.0,645,-6.0,336.0,342,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,,3191,,,374,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,483.0,486,-3.0,180.0,183,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,335.0,339,-4.0,32.0,36,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.10,Direct,django,1.11.10,,,False,335.0,339,-4.0,32.0,36,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,4033.0,4039,-7.0,1247.0,1253,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,1034.0,1034,-1.0,762.0,762,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,1064.0,1065,-2.0,792.0,793,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,791.0,790,1.0,519.0,517,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,817.0,817,-1.0,545.0,545,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,848.0,849,-2.0,576.0,577,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,848.0,849,-2.0,576.0,577,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,848.0,856,-9.0,576.0,584,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,848.0,849,-2.0,576.0,577,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,3501.0,3501,-1.0,715.0,715,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,639.0,645,-6.0,367.0,372,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,,3191,,,405,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,483.0,486,-3.0,211.0,213,False
119588,CVE-2018-6188,"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",2018-02-05 03:29:00,2019-03-12 17:54:00,2024-03-19 16:38:30.653600,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,61.0,64,-4.0,30.0,34,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,335.0,339,-4.0,63.0,66,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.9,Direct,django,1.11.9,,,False,335.0,339,-4.0,63.0,66,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,4033.0,4039,-7.0,1277.0,1284,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,1034.0,1034,-1.0,792.0,792,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,1064.0,1065,-2.0,822.0,824,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,791.0,790,1.0,549.0,548,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,817.0,817,-1.0,575.0,575,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,848.0,849,-2.0,606.0,608,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,848.0,849,-2.0,606.0,608,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,848.0,856,-9.0,606.0,614,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,848.0,849,-2.0,606.0,608,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,3501.0,3501,-1.0,745.0,746,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,639.0,645,-6.0,398.0,403,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,,3191,,,435,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,483.0,486,-3.0,241.0,244,False
119588,CVE-2018-6188,"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",2018-02-05 03:29:00,2019-03-12 17:54:00,2024-03-19 16:38:30.653600,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,61.0,64,-4.0,61.0,64,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,335.0,339,-4.0,93.0,97,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.8,Direct,django,1.11.8,,,False,335.0,339,-4.0,93.0,97,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,4033.0,4039,-7.0,1308.0,1314,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,1034.0,1034,-1.0,823.0,823,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,1064.0,1065,-2.0,853.0,854,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,791.0,790,1.0,580.0,578,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,817.0,817,-1.0,606.0,606,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,848.0,849,-2.0,637.0,638,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,848.0,849,-2.0,637.0,638,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,848.0,856,-9.0,637.0,645,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,848.0,849,-2.0,637.0,638,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,3501.0,3501,-1.0,776.0,776,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,639.0,645,-6.0,428.0,433,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,,3191,,,466,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,483.0,486,-3.0,272.0,274,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,335.0,339,-4.0,124.0,127,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.7,Direct,django,1.11.7,,,False,335.0,339,-4.0,124.0,127,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,4033.0,4039,-7.0,1335.0,1341,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,1034.0,1034,-1.0,850.0,850,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,1064.0,1065,-2.0,880.0,881,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,791.0,790,1.0,607.0,605,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,817.0,817,-1.0,633.0,633,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,848.0,849,-2.0,664.0,665,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,848.0,849,-2.0,664.0,665,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,848.0,856,-9.0,664.0,672,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,848.0,849,-2.0,664.0,665,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,3501.0,3501,-1.0,803.0,803,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,639.0,645,-6.0,455.0,461,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,,3191,,,493,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,483.0,486,-3.0,299.0,301,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,335.0,339,-4.0,151.0,155,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.6,Direct,django,1.11.6,,,False,335.0,339,-4.0,151.0,155,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,4033.0,4039,-7.0,1365.0,1372,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,1034.0,1034,-1.0,880.0,880,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,1064.0,1065,-2.0,910.0,911,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,791.0,790,1.0,637.0,636,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,817.0,817,-1.0,663.0,663,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,848.0,849,-2.0,694.0,695,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,848.0,849,-2.0,694.0,695,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,848.0,856,-9.0,694.0,702,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,848.0,849,-2.0,694.0,695,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,3501.0,3501,-1.0,833.0,834,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,639.0,645,-6.0,485.0,491,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,,3191,,,523,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,483.0,486,-3.0,329.0,332,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,335.0,339,-4.0,181.0,185,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.5,Direct,django,1.11.5,,,False,335.0,339,-4.0,181.0,185,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,4033.0,4039,-7.0,1400.0,1407,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,1034.0,1034,-1.0,915.0,915,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,1064.0,1065,-2.0,945.0,947,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,791.0,790,1.0,673.0,671,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,817.0,817,-1.0,698.0,699,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,848.0,849,-2.0,729.0,731,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,848.0,849,-2.0,729.0,731,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,848.0,856,-9.0,729.0,738,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,848.0,849,-2.0,729.0,731,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,3501.0,3501,-1.0,868.0,869,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,639.0,645,-6.0,521.0,526,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,,3191,,,559,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,483.0,486,-3.0,365.0,367,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,335.0,339,-4.0,217.0,220,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,335.0,339,-4.0,217.0,220,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.4,Direct,django,1.11.4,,,False,122.0,123,-2.0,35.0,37,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,4033.0,4039,-7.0,1431.0,1437,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,1034.0,1034,-1.0,946.0,946,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,1064.0,1065,-2.0,976.0,977,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,791.0,790,1.0,703.0,701,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,817.0,817,-1.0,729.0,729,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,848.0,849,-2.0,760.0,761,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,848.0,849,-2.0,760.0,761,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,848.0,856,-9.0,760.0,768,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,848.0,849,-2.0,760.0,761,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,3501.0,3501,-1.0,899.0,899,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,639.0,645,-6.0,551.0,556,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,,3191,,,589,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,483.0,486,-3.0,395.0,397,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,335.0,339,-4.0,247.0,250,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,335.0,339,-4.0,247.0,250,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.3,Direct,django,1.11.3,,,False,122.0,123,-2.0,65.0,67,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,4033.0,4039,-7.0,1461.0,1468,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,1034.0,1034,-1.0,976.0,976,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,1064.0,1065,-2.0,1006.0,1007,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,791.0,790,1.0,733.0,732,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,817.0,817,-1.0,759.0,759,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,848.0,849,-2.0,790.0,791,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,848.0,849,-2.0,790.0,791,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,848.0,856,-9.0,790.0,798,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,848.0,849,-2.0,790.0,791,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,3501.0,3501,-1.0,929.0,930,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,639.0,645,-6.0,581.0,587,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,,3191,,,619,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,483.0,486,-3.0,425.0,428,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,335.0,339,-4.0,277.0,281,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,335.0,339,-4.0,277.0,281,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.2,Direct,django,1.11.2,,,False,122.0,123,-2.0,95.0,97,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,4033.0,4039,-7.0,1487.0,1494,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,1034.0,1034,-1.0,1002.0,1002,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,1064.0,1065,-2.0,1032.0,1034,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,791.0,790,1.0,759.0,758,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,817.0,817,-1.0,785.0,786,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,848.0,849,-2.0,816.0,818,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,848.0,849,-2.0,816.0,818,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,848.0,856,-9.0,816.0,824,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,848.0,849,-2.0,816.0,818,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,3501.0,3501,-1.0,955.0,956,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,639.0,645,-6.0,608.0,613,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,,3191,,,645,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,483.0,486,-3.0,452.0,454,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,335.0,339,-4.0,304.0,307,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,335.0,339,-4.0,304.0,307,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11.1,Direct,django,1.11.1,,,False,122.0,123,-2.0,122.0,123,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,django,1.11,Direct,django,1.11,,,False,4033.0,4039,-7.0,1519.0,1526,False
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11,Direct,django,1.11,,,False,1034.0,1034,-1.0,1034.0,1034,False
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,django,1.11,Direct,django,1.11,,,False,1064.0,1065,-2.0,1064.0,1065,False
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11,Direct,django,1.11,,,False,791.0,790,1.0,791.0,790,False
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,django,1.11,Direct,django,1.11,,,False,817.0,817,-1.0,817.0,817,False
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11,Direct,django,1.11,,,False,848.0,849,-2.0,848.0,849,False
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11,Direct,django,1.11,,,False,848.0,849,-2.0,848.0,849,False
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11,Direct,django,1.11,,,False,848.0,856,-9.0,848.0,856,False
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11,Direct,django,1.11,,,False,848.0,849,-2.0,848.0,849,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,django,1.11,Direct,django,1.11,,,False,3501.0,3501,-1.0,987.0,988,False
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,django,1.11,Direct,django,1.11,,,False,639.0,645,-6.0,639.0,645,False
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,django,1.11,Direct,django,1.11,,,False,,3191,,,677,False
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,django,1.11,Direct,django,1.11,,,False,483.0,486,-3.0,483.0,486,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11,Direct,django,1.11,,,False,335.0,339,-4.0,335.0,339,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,django,1.11,Direct,django,1.11,,,False,335.0,339,-4.0,335.0,339,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,django,1.10.8,Direct,django,1.10.8,,,False,4033.0,4039,-7.0,1365.0,1372,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.8,Direct,django,1.10.8,,,False,3501.0,3501,-1.0,833.0,834,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,django,1.10.7,Direct,django,1.10.7,,,False,4033.0,4039,-7.0,1519.0,1526,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.7,Direct,django,1.10.7,,,False,3501.0,3501,-1.0,987.0,988,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.7,Direct,django,1.10.7,,,False,368.0,370,-2.0,154.0,155,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,django,1.10.6,Direct,django,1.10.6,,,False,4033.0,4039,-7.0,1533.0,1539,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.6,Direct,django,1.10.6,,,False,3501.0,3501,-1.0,1001.0,1001,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.6,Direct,django,1.10.6,,,False,368.0,370,-2.0,167.0,169,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.6,Direct,django,1.10.6,,,False,214.0,214,-1.0,13.0,13,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.6,Direct,django,1.10.6,,,False,214.0,214,-1.0,13.0,13,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,django,1.10.5,Direct,django,1.10.5,,,False,4033.0,4039,-7.0,1533.0,1539,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.5,Direct,django,1.10.5,,,False,3501.0,3501,-1.0,1001.0,1001,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.5,Direct,django,1.10.5,,,False,368.0,370,-2.0,167.0,169,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.5,Direct,django,1.10.5,,,False,214.0,214,-1.0,13.0,13,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.5,Direct,django,1.10.5,,,False,214.0,214,-1.0,13.0,13,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,django,1.10.4,Direct,django,1.10.4,,,False,4033.0,4039,-7.0,1643.0,1649,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.4,Direct,django,1.10.4,,,False,3501.0,3501,-1.0,1111.0,1111,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.4,Direct,django,1.10.4,,,False,368.0,370,-2.0,277.0,279,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.4,Direct,django,1.10.4,,,False,214.0,214,-1.0,123.0,123,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.4,Direct,django,1.10.4,,,False,214.0,214,-1.0,123.0,123,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,django,1.10.3,Direct,django,1.10.3,,,False,4033.0,4039,-7.0,1673.0,1680,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.3,Direct,django,1.10.3,,,False,3501.0,3501,-1.0,1141.0,1142,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.3,Direct,django,1.10.3,,,False,368.0,370,-2.0,308.0,309,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.3,Direct,django,1.10.3,,,False,214.0,214,-1.0,154.0,154,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.3,Direct,django,1.10.3,,,False,214.0,214,-1.0,154.0,154,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,django,1.10.2,Direct,django,1.10.2,,,False,4033.0,4039,-7.0,1704.0,1710,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.2,Direct,django,1.10.2,,,False,3501.0,3501,-1.0,1172.0,1172,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.2,Direct,django,1.10.2,,,False,368.0,370,-2.0,338.0,340,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.2,Direct,django,1.10.2,,,False,214.0,214,-1.0,184.0,184,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.2,Direct,django,1.10.2,,,False,214.0,214,-1.0,184.0,184,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.2,Direct,django,1.10.2,,,False,91.0,130,-39.0,30.0,69,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,10,django,1.10.2,Direct,django,1.10.2,,,False,91.0,130,-39.0,30.0,69,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,django,1.10.1,Direct,django,1.10.1,,,False,4033.0,4039,-7.0,1733.0,1740,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.1,Direct,django,1.10.1,,,False,3501.0,3501,-1.0,1201.0,1202,False
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.1,Direct,django,1.10.1,,,False,368.0,370,-2.0,368.0,370,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.1,Direct,django,1.10.1,,,False,214.0,214,-1.0,214.0,214,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10.1,Direct,django,1.10.1,,,False,214.0,214,-1.0,214.0,214,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10.1,Direct,django,1.10.1,,,False,91.0,130,-39.0,60.0,98,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,10,django,1.10.1,Direct,django,1.10.1,,,False,91.0,130,-39.0,60.0,98,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,django,1.10,Direct,django,1.10,,,False,4033.0,4039,-7.0,1765.0,1771,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10,Direct,django,1.10,,,False,3501.0,3501,-1.0,1233.0,1234,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,django,1.10,Direct,django,1.10,,,False,31.0,3,27.0,31.0,3,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,django,1.10,Direct,django,1.10,,,False,91.0,130,-39.0,91.0,130,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,10,django,1.10,Direct,django,1.10,,,False,91.0,130,-39.0,91.0,130,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.13,Direct,django,1.9.13,,,False,4033.0,4039,-7.0,1519.0,1526,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.13,Direct,django,1.9.13,,,False,3501.0,3501,-1.0,987.0,988,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.12,Direct,django,1.9.12,,,False,4033.0,4039,-7.0,1643.0,1649,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.12,Direct,django,1.9.12,,,False,3501.0,3501,-1.0,1111.0,1111,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.12,Direct,django,1.9.12,,,False,489.0,489,-1.0,123.0,123,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.12,Direct,django,1.9.12,,,False,489.0,489,-1.0,123.0,123,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.11,Direct,django,1.9.11,,,False,4033.0,4039,-7.0,1673.0,1680,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.11,Direct,django,1.9.11,,,False,3501.0,3501,-1.0,1141.0,1142,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.11,Direct,django,1.9.11,,,False,489.0,489,-1.0,154.0,154,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.11,Direct,django,1.9.11,,,False,489.0,489,-1.0,154.0,154,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.10,Direct,django,1.9.10,,,False,4033.0,4039,-7.0,1709.0,1715,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.10,Direct,django,1.9.10,,,False,3501.0,3501,-1.0,1177.0,1178,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.10,Direct,django,1.9.10,,,False,489.0,489,-1.0,189.0,189,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.10,Direct,django,1.9.10,,,False,489.0,489,-1.0,189.0,189,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.10,Direct,django,1.9.10,,,False,335.0,373,-39.0,35.0,74,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.10,Direct,django,1.9.10,,,False,335.0,373,-39.0,35.0,74,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.9,Direct,django,1.9.9,,,False,4033.0,4039,-7.0,1765.0,1772,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.9,Direct,django,1.9.9,,,False,3501.0,3501,-1.0,1233.0,1234,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.9,Direct,django,1.9.9,,,False,489.0,489,-1.0,245.0,245,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.9,Direct,django,1.9.9,,,False,489.0,489,-1.0,245.0,245,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,django,1.9.9,Direct,django,1.9.9,,,False,268.0,275,-8.0,56.0,63,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.9,Direct,django,1.9.9,,,False,335.0,373,-39.0,91.0,130,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.9,Direct,django,1.9.9,,,False,335.0,373,-39.0,91.0,130,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.8,Direct,django,1.9.8,,,False,4033.0,4039,-7.0,1779.0,1785,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.8,Direct,django,1.9.8,,,False,3501.0,3501,-1.0,1247.0,1248,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.8,Direct,django,1.9.8,,,False,489.0,489,-1.0,259.0,259,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.8,Direct,django,1.9.8,,,False,489.0,489,-1.0,259.0,259,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,django,1.9.8,Direct,django,1.9.8,,,False,268.0,275,-8.0,70.0,77,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.8,Direct,django,1.9.8,,,False,335.0,373,-39.0,105.0,144,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.8,Direct,django,1.9.8,,,False,335.0,373,-39.0,105.0,144,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.7,Direct,django,1.9.7,,,False,4033.0,4039,-7.0,1823.0,1829,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.7,Direct,django,1.9.7,,,False,3501.0,3501,-1.0,1291.0,1291,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.7,Direct,django,1.9.7,,,False,489.0,489,-1.0,303.0,303,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.7,Direct,django,1.9.7,,,False,489.0,489,-1.0,303.0,303,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.7,Direct,django,1.9.7,,,False,2253.0,2271,-18.0,43.0,61,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,django,1.9.7,Direct,django,1.9.7,,,False,268.0,275,-8.0,113.0,120,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.7,Direct,django,1.9.7,,,False,335.0,373,-39.0,149.0,187,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.7,Direct,django,1.9.7,,,False,335.0,373,-39.0,149.0,187,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.6,Direct,django,1.9.6,,,False,4033.0,4039,-7.0,1856.0,1862,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.6,Direct,django,1.9.6,,,False,3501.0,3501,-1.0,1324.0,1324,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.6,Direct,django,1.9.6,,,False,489.0,489,-1.0,336.0,336,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.6,Direct,django,1.9.6,,,False,489.0,489,-1.0,336.0,336,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.6,Direct,django,1.9.6,,,False,2253.0,2271,-18.0,76.0,94,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,django,1.9.6,Direct,django,1.9.6,,,False,268.0,275,-8.0,146.0,153,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.6,Direct,django,1.9.6,,,False,335.0,373,-39.0,182.0,220,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.6,Direct,django,1.9.6,,,False,335.0,373,-39.0,182.0,220,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.5,Direct,django,1.9.5,,,False,4033.0,4039,-7.0,1887.0,1894,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.5,Direct,django,1.9.5,,,False,3501.0,3501,-1.0,1355.0,1356,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.5,Direct,django,1.9.5,,,False,489.0,489,-1.0,367.0,368,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.5,Direct,django,1.9.5,,,False,489.0,489,-1.0,367.0,368,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.5,Direct,django,1.9.5,,,False,2253.0,2271,-18.0,108.0,125,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,django,1.9.5,Direct,django,1.9.5,,,False,268.0,275,-8.0,178.0,185,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.5,Direct,django,1.9.5,,,False,335.0,373,-39.0,213.0,252,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.5,Direct,django,1.9.5,,,False,335.0,373,-39.0,213.0,252,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.4,Direct,django,1.9.4,,,False,4033.0,4039,-7.0,1914.0,1921,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.4,Direct,django,1.9.4,,,False,3501.0,3501,-1.0,1382.0,1383,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.4,Direct,django,1.9.4,,,False,489.0,489,-1.0,394.0,395,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.4,Direct,django,1.9.4,,,False,489.0,489,-1.0,394.0,395,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.4,Direct,django,1.9.4,,,False,2253.0,2271,-18.0,135.0,153,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,django,1.9.4,Direct,django,1.9.4,,,False,268.0,275,-8.0,205.0,212,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.4,Direct,django,1.9.4,,,False,335.0,373,-39.0,240.0,279,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.4,Direct,django,1.9.4,,,False,335.0,373,-39.0,240.0,279,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.3,Direct,django,1.9.3,,,False,4033.0,4039,-7.0,1918.0,1925,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.3,Direct,django,1.9.3,,,False,3501.0,3501,-1.0,1386.0,1387,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.3,Direct,django,1.9.3,,,False,489.0,489,-1.0,398.0,399,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.3,Direct,django,1.9.3,,,False,489.0,489,-1.0,398.0,399,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.3,Direct,django,1.9.3,,,False,2253.0,2271,-18.0,139.0,156,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,django,1.9.3,Direct,django,1.9.3,,,False,268.0,275,-8.0,209.0,216,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.3,Direct,django,1.9.3,,,False,335.0,373,-39.0,244.0,283,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.3,Direct,django,1.9.3,,,False,335.0,373,-39.0,244.0,283,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,4033.0,4039,-7.0,1947.0,1954,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,3501.0,3501,-1.0,1415.0,1416,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,489.0,489,-1.0,427.0,428,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,489.0,489,-1.0,427.0,428,False
140115,CVE-2016-2512,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.420635,3.0,2.8,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,NONE,HIGH,NONE,7.4,HIGH,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,90.0,128,-38.0,28.0,66,False
140116,CVE-2016-2513,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.439159,3.0,1.6,1.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,LOW,NONE,NONE,3.1,LOW,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,90.0,128,-38.0,28.0,66,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,2253.0,2271,-18.0,168.0,185,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,268.0,275,-8.0,238.0,245,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,335.0,373,-39.0,273.0,312,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.2,Direct,django,1.9.2,,,False,335.0,373,-39.0,273.0,312,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,4033.0,4039,-7.0,1977.0,1984,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,3501.0,3501,-1.0,1445.0,1446,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,489.0,489,-1.0,458.0,458,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,489.0,489,-1.0,458.0,458,False
139730,CVE-2016-2048,"Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the ""Save as New"" option when editing objects and leveraging the ""change"" permission.",2016-02-08 19:59:00,2016-11-28 20:02:00,2024-03-19 16:47:34.817796,3.0,1.2,4.2,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,LOW,HIGH,NONE,5.5,MEDIUM,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,61.0,68,-8.0,30.0,37,False
140115,CVE-2016-2512,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.420635,3.0,2.8,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,NONE,HIGH,NONE,7.4,HIGH,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,90.0,128,-38.0,59.0,97,False
140116,CVE-2016-2513,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.439159,3.0,1.6,1.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,LOW,NONE,NONE,3.1,LOW,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,90.0,128,-38.0,59.0,97,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,2253.0,2271,-18.0,198.0,216,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,268.0,275,-8.0,268.0,275,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,335.0,373,-39.0,303.0,342,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9.1,Direct,django,1.9.1,,,False,335.0,373,-39.0,303.0,342,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,django,1.9,Direct,django,1.9,,,False,4033.0,4039,-7.0,2009.0,2015,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9,Direct,django,1.9,,,False,3501.0,3501,-1.0,1477.0,1477,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9,Direct,django,1.9,,,False,489.0,489,-1.0,489.0,489,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9,Direct,django,1.9,,,False,489.0,489,-1.0,489.0,489,False
139730,CVE-2016-2048,"Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the ""Save as New"" option when editing objects and leveraging the ""change"" permission.",2016-02-08 19:59:00,2016-11-28 20:02:00,2024-03-19 16:47:34.817796,3.0,1.2,4.2,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,LOW,HIGH,NONE,5.5,MEDIUM,True,1,9,django,1.9,Direct,django,1.9,,,False,61.0,68,-8.0,61.0,68,False
140115,CVE-2016-2512,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.420635,3.0,2.8,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,NONE,HIGH,NONE,7.4,HIGH,True,1,9,django,1.9,Direct,django,1.9,,,False,90.0,128,-38.0,90.0,128,False
140116,CVE-2016-2513,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.439159,3.0,1.6,1.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,LOW,NONE,NONE,3.1,LOW,True,1,9,django,1.9,Direct,django,1.9,,,False,90.0,128,-38.0,90.0,128,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,django,1.9,Direct,django,1.9,,,False,2253.0,2271,-18.0,229.0,247,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,django,1.9,Direct,django,1.9,,,False,335.0,373,-39.0,335.0,373,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,django,1.9,Direct,django,1.9,,,False,335.0,373,-39.0,335.0,373,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.19,Direct,django,1.8.19,,,False,4033.0,4039,-7.0,1183.0,1190,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.19,Direct,django,1.8.19,,,False,3501.0,3501,-1.0,651.0,652,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.18,Direct,django,1.8.18,,,False,4033.0,4039,-7.0,1519.0,1526,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.18,Direct,django,1.8.18,,,False,3501.0,3501,-1.0,987.0,988,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.18,Direct,django,1.8.18,,,False,1069.0,1073,-4.0,336.0,339,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.18,Direct,django,1.8.18,,,False,1069.0,1073,-4.0,336.0,339,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.17,Direct,django,1.8.17,,,False,4033.0,4039,-7.0,1643.0,1649,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.17,Direct,django,1.8.17,,,False,3501.0,3501,-1.0,1111.0,1111,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.17,Direct,django,1.8.17,,,False,1069.0,1073,-4.0,459.0,462,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.17,Direct,django,1.8.17,,,False,1069.0,1073,-4.0,459.0,462,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.17,Direct,django,1.8.17,,,False,703.0,703,-1.0,123.0,123,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.17,Direct,django,1.8.17,,,False,703.0,703,-1.0,123.0,123,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.16,Direct,django,1.8.16,,,False,4033.0,4039,-7.0,1673.0,1680,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.16,Direct,django,1.8.16,,,False,3501.0,3501,-1.0,1141.0,1142,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.16,Direct,django,1.8.16,,,False,1069.0,1073,-4.0,490.0,493,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.16,Direct,django,1.8.16,,,False,1069.0,1073,-4.0,490.0,493,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.16,Direct,django,1.8.16,,,False,703.0,703,-1.0,153.0,154,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.16,Direct,django,1.8.16,,,False,703.0,703,-1.0,153.0,154,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.15,Direct,django,1.8.15,,,False,4033.0,4039,-7.0,1709.0,1715,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.15,Direct,django,1.8.15,,,False,3501.0,3501,-1.0,1177.0,1178,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.15,Direct,django,1.8.15,,,False,1069.0,1073,-4.0,525.0,529,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.15,Direct,django,1.8.15,,,False,1069.0,1073,-4.0,525.0,529,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.15,Direct,django,1.8.15,,,False,703.0,703,-1.0,189.0,189,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.15,Direct,django,1.8.15,,,False,703.0,703,-1.0,189.0,189,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.15,Direct,django,1.8.15,,,False,579.0,618,-39.0,35.0,74,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.15,Direct,django,1.8.15,,,False,579.0,618,-39.0,35.0,74,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.14,Direct,django,1.8.14,,,False,4033.0,4039,-7.0,1779.0,1785,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.14,Direct,django,1.8.14,,,False,3501.0,3501,-1.0,1247.0,1248,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.14,Direct,django,1.8.14,,,False,1069.0,1073,-4.0,595.0,599,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.14,Direct,django,1.8.14,,,False,1069.0,1073,-4.0,595.0,599,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.14,Direct,django,1.8.14,,,False,703.0,703,-1.0,259.0,259,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.14,Direct,django,1.8.14,,,False,703.0,703,-1.0,259.0,259,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.14,Direct,django,1.8.14,,,False,2323.0,2330,-8.0,69.0,77,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.14,Direct,django,1.8.14,,,False,579.0,618,-39.0,105.0,144,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.14,Direct,django,1.8.14,,,False,579.0,618,-39.0,105.0,144,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,4033.0,4039,-7.0,1856.0,1862,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,3501.0,3501,-1.0,1324.0,1324,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,1069.0,1073,-4.0,672.0,675,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,1069.0,1073,-4.0,672.0,675,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,703.0,703,-1.0,336.0,336,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,703.0,703,-1.0,336.0,336,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,2253.0,2271,-18.0,76.0,94,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,2323.0,2330,-8.0,146.0,153,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,579.0,618,-39.0,182.0,220,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.13,Direct,django,1.8.13,,,False,579.0,618,-39.0,182.0,220,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,4033.0,4039,-7.0,1887.0,1894,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,3501.0,3501,-1.0,1355.0,1356,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,1069.0,1073,-4.0,703.0,707,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,1069.0,1073,-4.0,703.0,707,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,703.0,703,-1.0,367.0,367,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,703.0,703,-1.0,367.0,367,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,2253.0,2271,-18.0,108.0,125,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,2323.0,2330,-8.0,178.0,185,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,579.0,618,-39.0,213.0,252,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.12,Direct,django,1.8.12,,,False,579.0,618,-39.0,213.0,252,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,4033.0,4039,-7.0,1914.0,1920,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,3501.0,3501,-1.0,1382.0,1383,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,1069.0,1073,-4.0,730.0,734,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,1069.0,1073,-4.0,730.0,734,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,703.0,703,-1.0,394.0,394,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,703.0,703,-1.0,394.0,394,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,2253.0,2271,-18.0,135.0,152,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,2323.0,2330,-8.0,204.0,212,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,579.0,618,-39.0,240.0,279,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.11,Direct,django,1.8.11,,,False,579.0,618,-39.0,240.0,279,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,4033.0,4039,-7.0,1918.0,1925,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,3501.0,3501,-1.0,1386.0,1387,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,1069.0,1073,-4.0,734.0,738,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,1069.0,1073,-4.0,734.0,738,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,703.0,703,-1.0,398.0,399,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,703.0,703,-1.0,398.0,399,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,2253.0,2271,-18.0,139.0,156,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,2323.0,2330,-8.0,209.0,216,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,579.0,618,-39.0,244.0,283,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.10,Direct,django,1.8.10,,,False,579.0,618,-39.0,244.0,283,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,4033.0,4039,-7.0,1947.0,1954,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,3501.0,3501,-1.0,1415.0,1416,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,1069.0,1073,-4.0,763.0,767,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,1069.0,1073,-4.0,763.0,767,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,703.0,703,-1.0,427.0,428,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,703.0,703,-1.0,427.0,428,False
140115,CVE-2016-2512,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.420635,3.0,2.8,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,NONE,HIGH,NONE,7.4,HIGH,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,28.0,66,-38.0,28.0,66,False
140116,CVE-2016-2513,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.439159,3.0,1.6,1.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,LOW,NONE,NONE,3.1,LOW,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,28.0,66,-38.0,28.0,66,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,2253.0,2271,-18.0,168.0,185,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,2323.0,2330,-8.0,238.0,245,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,579.0,618,-39.0,273.0,312,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.9,Direct,django,1.8.9,,,False,579.0,618,-39.0,273.0,312,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,4033.0,4039,-7.0,1977.0,1984,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,3501.0,3501,-1.0,1445.0,1446,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,1069.0,1073,-4.0,794.0,797,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,1069.0,1073,-4.0,794.0,797,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,703.0,703,-1.0,457.0,458,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,703.0,703,-1.0,457.0,458,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,2253.0,2271,-18.0,198.0,216,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,2323.0,2330,-8.0,268.0,275,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,579.0,618,-39.0,303.0,342,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.8,Direct,django,1.8.8,,,False,579.0,618,-39.0,303.0,342,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,4033.0,4039,-7.0,2016.0,2023,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,3501.0,3501,-1.0,1484.0,1485,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,1069.0,1073,-4.0,832.0,836,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,1069.0,1073,-4.0,832.0,836,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,703.0,703,-1.0,496.0,497,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,703.0,703,-1.0,496.0,497,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,2253.0,2271,-18.0,237.0,254,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,2323.0,2330,-8.0,307.0,314,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,579.0,618,-39.0,342.0,381,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.7,Direct,django,1.8.7,,,False,579.0,618,-39.0,342.0,381,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,4033.0,4039,-7.0,2036.0,2043,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,3501.0,3501,-1.0,1504.0,1505,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,1069.0,1073,-4.0,852.0,856,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,1069.0,1073,-4.0,852.0,856,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,703.0,703,-1.0,516.0,517,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,703.0,703,-1.0,516.0,517,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,2253.0,2271,-18.0,257.0,274,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,2323.0,2330,-8.0,327.0,334,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,579.0,618,-39.0,362.0,401,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,579.0,618,-39.0,362.0,401,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,django,1.8.6,Direct,django,1.8.6,,,False,206.0,220,-14.0,20.0,33,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,4033.0,4039,-7.0,2068.0,2074,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,3501.0,3501,-1.0,1536.0,1536,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,1069.0,1073,-4.0,884.0,887,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,1069.0,1073,-4.0,884.0,887,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,703.0,703,-1.0,548.0,548,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,703.0,703,-1.0,548.0,548,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,2253.0,2271,-18.0,288.0,306,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,2323.0,2330,-8.0,358.0,365,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,579.0,618,-39.0,394.0,432,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,579.0,618,-39.0,394.0,432,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,django,1.8.5,Direct,django,1.8.5,,,False,206.0,220,-14.0,51.0,64,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,4033.0,4039,-7.0,2114.0,2121,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,3501.0,3501,-1.0,1582.0,1583,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,1069.0,1073,-4.0,930.0,934,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,1069.0,1073,-4.0,930.0,934,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,703.0,703,-1.0,594.0,595,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,703.0,703,-1.0,594.0,595,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,2253.0,2271,-18.0,335.0,352,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,2323.0,2330,-8.0,405.0,412,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,579.0,618,-39.0,440.0,479,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,579.0,618,-39.0,440.0,479,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,django,1.8.4,Direct,django,1.8.4,,,False,206.0,220,-14.0,98.0,111,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,4033.0,4039,-7.0,2155.0,2161,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,3501.0,3501,-1.0,1623.0,1623,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,1069.0,1073,-4.0,971.0,975,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,1069.0,1073,-4.0,971.0,975,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,703.0,703,-1.0,635.0,635,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,703.0,703,-1.0,635.0,635,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,2253.0,2271,-18.0,375.0,393,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,2323.0,2330,-8.0,445.0,452,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,579.0,618,-39.0,481.0,520,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,579.0,618,-39.0,481.0,520,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,138.0,144,-6.0,40.0,46,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,138.0,144,-6.0,40.0,46,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,django,1.8.3,Direct,django,1.8.3,,,False,206.0,220,-14.0,138.0,152,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,4033.0,4039,-7.0,2204.0,2211,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,3501.0,3501,-1.0,1672.0,1673,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,1069.0,1073,-4.0,1020.0,1024,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,1069.0,1073,-4.0,1020.0,1024,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,703.0,703,-1.0,684.0,684,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,703.0,703,-1.0,684.0,684,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,2253.0,2271,-18.0,425.0,442,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,2323.0,2330,-8.0,495.0,502,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,579.0,618,-39.0,530.0,569,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,579.0,618,-39.0,530.0,569,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,67.0,73,-6.0,49.0,54,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,97.0,103,-6.0,49.0,54,False
150410,CVE-2015-5145,validators.URLValidator in Django 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (CPU consumption) via unspecified vectors.,2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.704988,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,67.0,73,-6.0,49.0,54,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,138.0,144,-6.0,89.0,95,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,138.0,144,-6.0,89.0,95,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,django,1.8.2,Direct,django,1.8.2,,,False,206.0,220,-14.0,187.0,201,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,4033.0,4039,-7.0,2223.0,2229,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,3501.0,3501,-1.0,1691.0,1691,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,1069.0,1073,-4.0,1039.0,1042,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,1069.0,1073,-4.0,1039.0,1042,False
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,703.0,703,-1.0,703.0,703,False
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,703.0,703,-1.0,703.0,703,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,2253.0,2271,-18.0,443.0,461,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,2323.0,2330,-8.0,513.0,520,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,579.0,618,-39.0,549.0,588,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,579.0,618,-39.0,549.0,588,False
149464,CVE-2015-3982,"The session.flush function in the cached_db backend in Django 1.8.x before 1.8.2 does not properly flush the session, which allows remote attackers to hijack user sessions via an empty string in the session key.",2015-06-02 14:59:00,2016-12-06 03:01:00,2024-03-19 16:51:57.176319,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,False,1,8,django,1.8.1,Direct,django,1.8.1,,,False,18.0,31,-13.0,18.0,31,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,67.0,73,-6.0,67.0,73,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,97.0,103,-6.0,67.0,73,False
150410,CVE-2015-5145,validators.URLValidator in Django 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (CPU consumption) via unspecified vectors.,2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.704988,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,67.0,73,-6.0,67.0,73,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,138.0,144,-6.0,108.0,114,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,138.0,144,-6.0,108.0,114,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,django,1.8.1,Direct,django,1.8.1,,,False,206.0,220,-14.0,206.0,220,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,django,1.8,Direct,django,1.8,,,False,4033.0,4039,-7.0,2253.0,2259,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8,Direct,django,1.8,,,False,3501.0,3501,-1.0,1721.0,1721,False
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8,Direct,django,1.8,,,False,1069.0,1073,-4.0,1069.0,1073,False
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,django,1.8,Direct,django,1.8,,,False,1069.0,1073,-4.0,1069.0,1073,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,django,1.8,Direct,django,1.8,,,False,2253.0,2271,-18.0,473.0,491,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,django,1.8,Direct,django,1.8,,,False,2323.0,2330,-8.0,543.0,550,False
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,django,1.8,Direct,django,1.8,,,False,579.0,618,-39.0,579.0,618,False
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,django,1.8,Direct,django,1.8,,,False,579.0,618,-39.0,579.0,618,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,8,django,1.8,Direct,django,1.8,,,False,30.0,-21,50.0,30.0,-21,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,8,django,1.8,Direct,django,1.8,,,False,97.0,103,-6.0,97.0,103,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,django,1.8,Direct,django,1.8,,,False,138.0,144,-6.0,138.0,144,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,django,1.8,Direct,django,1.8,,,False,138.0,144,-6.0,138.0,144,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.11,Direct,django,1.7.11,,,False,4033.0,4039,-7.0,2016.0,2023,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.11,Direct,django,1.7.11,,,False,3501.0,3501,-1.0,1484.0,1485,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.11,Direct,django,1.7.11,,,False,2253.0,2271,-18.0,237.0,254,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.11,Direct,django,1.7.11,,,False,2323.0,2330,-8.0,307.0,314,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.10,Direct,django,1.7.10,,,False,4033.0,4039,-7.0,2114.0,2121,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.10,Direct,django,1.7.10,,,False,3501.0,3501,-1.0,1582.0,1583,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.10,Direct,django,1.7.10,,,False,2253.0,2271,-18.0,335.0,352,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.10,Direct,django,1.7.10,,,False,2323.0,2330,-8.0,405.0,412,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.10,Direct,django,1.7.10,,,False,2016.0,2030,-14.0,98.0,111,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.9,Direct,django,1.7.9,,,False,4033.0,4039,-7.0,2155.0,2161,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.9,Direct,django,1.7.9,,,False,3501.0,3501,-1.0,1623.0,1623,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.9,Direct,django,1.7.9,,,False,2253.0,2271,-18.0,375.0,393,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.9,Direct,django,1.7.9,,,False,2323.0,2330,-8.0,445.0,452,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7.9,Direct,django,1.7.9,,,False,349.0,314,34.0,40.0,5,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.9,Direct,django,1.7.9,,,False,349.0,314,34.0,40.0,5,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.9,Direct,django,1.7.9,,,False,349.0,355,-6.0,40.0,46,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.9,Direct,django,1.7.9,,,False,349.0,355,-6.0,40.0,46,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.9,Direct,django,1.7.9,,,False,2016.0,2030,-14.0,138.0,151,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.8,Direct,django,1.7.8,,,False,4033.0,4039,-7.0,2223.0,2229,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.8,Direct,django,1.7.8,,,False,3501.0,3501,-1.0,1691.0,1691,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.8,Direct,django,1.7.8,,,False,2253.0,2271,-18.0,443.0,461,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.8,Direct,django,1.7.8,,,False,2323.0,2330,-8.0,513.0,520,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7.8,Direct,django,1.7.8,,,False,349.0,314,34.0,108.0,73,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.8,Direct,django,1.7.8,,,False,349.0,314,34.0,108.0,73,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.8,Direct,django,1.7.8,,,False,349.0,355,-6.0,108.0,114,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.8,Direct,django,1.7.8,,,False,349.0,355,-6.0,108.0,114,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.8,Direct,django,1.7.8,,,False,2016.0,2030,-14.0,206.0,220,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.7,Direct,django,1.7.7,,,False,4033.0,4039,-7.0,2267.0,2273,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.7,Direct,django,1.7.7,,,False,3501.0,3501,-1.0,1735.0,1735,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.7,Direct,django,1.7.7,,,False,2253.0,2271,-18.0,487.0,505,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.7,Direct,django,1.7.7,,,False,2323.0,2330,-8.0,557.0,564,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7.7,Direct,django,1.7.7,,,False,349.0,314,34.0,152.0,117,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.7,Direct,django,1.7.7,,,False,349.0,314,34.0,152.0,117,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.7,Direct,django,1.7.7,,,False,349.0,355,-6.0,152.0,158,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.7,Direct,django,1.7.7,,,False,349.0,355,-6.0,152.0,158,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.7,Direct,django,1.7.7,,,False,2016.0,2030,-14.0,250.0,263,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,4033.0,4039,-7.0,2276.0,2283,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,3501.0,3501,-1.0,1744.0,1745,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,2253.0,2271,-18.0,497.0,515,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,2323.0,2330,-8.0,567.0,574,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,197.0,203,-7.0,9.0,15,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,197.0,203,-7.0,9.0,15,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,349.0,314,34.0,162.0,127,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,349.0,314,34.0,162.0,127,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,349.0,355,-6.0,162.0,167,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,349.0,355,-6.0,162.0,167,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.6,Direct,django,1.7.6,,,False,2016.0,2030,-14.0,260.0,273,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,4033.0,4039,-7.0,2288.0,2295,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,3501.0,3501,-1.0,1756.0,1757,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,2253.0,2271,-18.0,509.0,527,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,2323.0,2330,-8.0,579.0,586,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,1756.0,1759,-3.0,12.0,15,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,197.0,203,-7.0,21.0,28,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,197.0,203,-7.0,21.0,28,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,349.0,314,34.0,174.0,139,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,349.0,314,34.0,174.0,139,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,349.0,355,-6.0,174.0,180,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,349.0,355,-6.0,174.0,180,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.5,Direct,django,1.7.5,,,False,2016.0,2030,-14.0,272.0,285,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,4033.0,4039,-7.0,2317.0,2324,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,3501.0,3501,-1.0,1785.0,1786,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,2253.0,2271,-18.0,538.0,555,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,2323.0,2330,-8.0,608.0,615,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,1756.0,1759,-3.0,40.0,43,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,197.0,203,-7.0,50.0,56,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,197.0,203,-7.0,50.0,56,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,349.0,314,34.0,202.0,168,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,349.0,314,34.0,202.0,168,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,349.0,355,-6.0,202.0,208,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,349.0,355,-6.0,202.0,208,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.4,Direct,django,1.7.4,,,False,2016.0,2030,-14.0,300.0,314,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,4033.0,4039,-7.0,2331.0,2337,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,3501.0,3501,-1.0,1799.0,1800,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,2253.0,2271,-18.0,552.0,569,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,2323.0,2330,-8.0,621.0,629,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,1756.0,1759,-3.0,54.0,57,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,197.0,203,-7.0,64.0,70,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,197.0,203,-7.0,64.0,70,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,349.0,314,34.0,216.0,181,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,349.0,314,34.0,216.0,181,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,349.0,355,-6.0,216.0,222,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,349.0,355,-6.0,216.0,222,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.3,Direct,django,1.7.3,,,False,2016.0,2030,-14.0,314.0,328,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,4033.0,4039,-7.0,2342.0,2348,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,3501.0,3501,-1.0,1810.0,1810,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,2253.0,2271,-18.0,562.0,580,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,2323.0,2330,-8.0,632.0,639,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,132.0,135,-3.0,10.0,13,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,132.0,135,-3.0,10.0,13,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,132.0,135,-3.0,10.0,13,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,132.0,135,-3.0,10.0,13,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,1756.0,1759,-3.0,65.0,68,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,197.0,203,-7.0,74.0,81,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,197.0,203,-7.0,74.0,81,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,349.0,314,34.0,227.0,192,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,349.0,314,34.0,227.0,192,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,349.0,355,-6.0,227.0,233,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,349.0,355,-6.0,227.0,233,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.2,Direct,django,1.7.2,,,False,2016.0,2030,-14.0,325.0,338,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,4033.0,4039,-7.0,2414.0,2421,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,3501.0,3501,-1.0,1882.0,1883,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,2253.0,2271,-18.0,635.0,652,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,2323.0,2330,-8.0,705.0,712,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,132.0,135,-3.0,83.0,86,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,132.0,135,-3.0,83.0,86,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,132.0,135,-3.0,83.0,86,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,132.0,135,-3.0,83.0,86,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,1756.0,1759,-3.0,137.0,140,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,197.0,203,-7.0,147.0,153,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,197.0,203,-7.0,147.0,153,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,349.0,314,34.0,300.0,265,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,349.0,314,34.0,300.0,265,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,349.0,355,-6.0,300.0,305,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,349.0,355,-6.0,300.0,305,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7.1,Direct,django,1.7.1,,,False,2016.0,2030,-14.0,398.0,411,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,django,1.7,Direct,django,1.7,,,False,4033.0,4039,-7.0,2464.0,2470,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,django,1.7,Direct,django,1.7,,,False,3501.0,3501,-1.0,1932.0,1932,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,django,1.7,Direct,django,1.7,,,False,2253.0,2271,-18.0,684.0,702,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,django,1.7,Direct,django,1.7,,,False,2323.0,2330,-8.0,754.0,761,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,132.0,135,-3.0,132.0,135,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7,Direct,django,1.7,,,False,132.0,135,-3.0,132.0,135,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,132.0,135,-3.0,132.0,135,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,132.0,135,-3.0,132.0,135,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7,Direct,django,1.7,,,False,1756.0,1759,-3.0,187.0,190,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,197.0,203,-7.0,197.0,203,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7,Direct,django,1.7,,,False,197.0,203,-7.0,197.0,203,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,django,1.7,Direct,django,1.7,,,False,349.0,314,34.0,349.0,314,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7,Direct,django,1.7,,,False,349.0,314,34.0,349.0,314,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,349.0,355,-6.0,349.0,355,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,349.0,355,-6.0,349.0,355,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,2016.0,2030,-14.0,447.0,460,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,7,django,1.7,Direct,django,1.7,,,False,49.0,-133,182.0,49.0,-133,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,49.0,-133,182.0,49.0,-133,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,49.0,-133,182.0,49.0,-133,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,7,django,1.7,Direct,django,1.7,,,False,49.0,-8,57.0,49.0,-8,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,7,django,1.7,Direct,django,1.7,,,False,49.0,-8,57.0,49.0,-8,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,7,django,1.7,Direct,django,1.7,,,False,49.0,-8,57.0,49.0,-8,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,7,django,1.7,Direct,django,1.7,,,False,49.0,-8,57.0,49.0,-8,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,7,django,1.7,Direct,django,1.7,,,False,49.0,-110,159.0,49.0,-110,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,django,1.7,Direct,django,1.7,,,False,49.0,-110,159.0,49.0,-110,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.11,Direct,django,1.6.11,,,False,4033.0,4039,-7.0,2267.0,2273,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.11,Direct,django,1.6.11,,,False,3501.0,3501,-1.0,1735.0,1735,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.11,Direct,django,1.6.11,,,False,2253.0,2271,-18.0,487.0,505,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.11,Direct,django,1.6.11,,,False,2323.0,2330,-8.0,557.0,564,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.11,Direct,django,1.6.11,,,False,1756.0,1759,-3.0,-10.0,-7,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.11,Direct,django,1.6.11,,,False,2016.0,2030,-14.0,250.0,263,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,4033.0,4039,-7.0,2331.0,2337,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,3501.0,3501,-1.0,1799.0,1800,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,2253.0,2271,-18.0,551.0,569,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,2323.0,2330,-8.0,621.0,629,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,1756.0,1759,-3.0,54.0,57,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,497.0,503,-7.0,64.0,70,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,750.0,756,-7.0,64.0,70,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,750.0,867,-118.0,64.0,181,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,750.0,867,-118.0,64.0,181,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.10,Direct,django,1.6.10,,,False,2016.0,2030,-14.0,314.0,328,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,4033.0,4039,-7.0,2342.0,2348,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,3501.0,3501,-1.0,1810.0,1810,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,2253.0,2271,-18.0,562.0,580,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,2323.0,2330,-8.0,632.0,639,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,433.0,436,-3.0,10.0,13,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,433.0,436,-3.0,10.0,13,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,433.0,436,-3.0,10.0,13,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,433.0,436,-3.0,10.0,13,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,1756.0,1759,-3.0,65.0,68,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,497.0,503,-7.0,74.0,81,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,750.0,756,-7.0,74.0,81,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,750.0,867,-118.0,74.0,192,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,750.0,867,-118.0,74.0,192,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.9,Direct,django,1.6.9,,,False,2016.0,2030,-14.0,325.0,338,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,4033.0,4039,-7.0,2414.0,2421,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,3501.0,3501,-1.0,1882.0,1883,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,2253.0,2271,-18.0,635.0,652,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,2323.0,2330,-8.0,705.0,712,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,433.0,436,-3.0,83.0,86,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,433.0,436,-3.0,83.0,86,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,433.0,436,-3.0,83.0,86,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,433.0,436,-3.0,83.0,86,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,1756.0,1759,-3.0,137.0,140,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,497.0,503,-7.0,147.0,153,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,750.0,756,-7.0,147.0,153,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,750.0,867,-118.0,147.0,265,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,750.0,867,-118.0,147.0,265,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.8,Direct,django,1.6.8,,,False,2016.0,2030,-14.0,398.0,411,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,4033.0,4039,-7.0,2464.0,2470,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,3501.0,3501,-1.0,1932.0,1932,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,2253.0,2271,-18.0,684.0,702,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,2323.0,2330,-8.0,754.0,761,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,433.0,436,-3.0,132.0,135,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,433.0,436,-3.0,132.0,135,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,433.0,436,-3.0,132.0,135,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,433.0,436,-3.0,132.0,135,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,1756.0,1759,-3.0,187.0,190,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,497.0,503,-7.0,197.0,203,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,750.0,756,-7.0,197.0,203,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,750.0,867,-118.0,197.0,314,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,750.0,867,-118.0,197.0,314,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.7,Direct,django,1.6.7,,,False,2016.0,2030,-14.0,447.0,461,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,4033.0,4039,-7.0,2477.0,2483,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,3501.0,3501,-1.0,1945.0,1945,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,2253.0,2271,-18.0,697.0,715,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,2323.0,2330,-8.0,767.0,774,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,433.0,436,-3.0,145.0,148,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,433.0,436,-3.0,145.0,148,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,433.0,436,-3.0,145.0,148,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,433.0,436,-3.0,145.0,148,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,1756.0,1759,-3.0,200.0,203,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,497.0,503,-7.0,210.0,216,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,750.0,756,-7.0,210.0,216,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,750.0,867,-118.0,210.0,327,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,750.0,867,-118.0,210.0,327,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.6,Direct,django,1.6.6,,,False,2016.0,2030,-14.0,460.0,474,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,4033.0,4039,-7.0,2575.0,2581,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,3501.0,3501,-1.0,2043.0,2044,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,2253.0,2271,-18.0,796.0,813,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,2323.0,2330,-8.0,866.0,873,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,433.0,436,-3.0,244.0,246,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,433.0,436,-3.0,244.0,246,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,433.0,436,-3.0,244.0,246,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,433.0,436,-3.0,244.0,246,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,1756.0,1759,-3.0,298.0,301,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,497.0,503,-7.0,308.0,314,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,750.0,756,-7.0,308.0,314,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,750.0,867,-118.0,308.0,425,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,750.0,867,-118.0,308.0,425,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,2016.0,2030,-14.0,558.0,572,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,287.0,292,-6.0,98.0,103,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,287.0,292,-6.0,98.0,103,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,287.0,292,-6.0,98.0,103,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,django,1.6.5,Direct,django,1.6.5,,,False,287.0,292,-6.0,98.0,103,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,4033.0,4039,-7.0,2591.0,2597,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,3501.0,3501,-1.0,2059.0,2059,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,2253.0,2271,-18.0,811.0,829,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,2323.0,2330,-8.0,881.0,888,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,433.0,436,-3.0,259.0,262,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,433.0,436,-3.0,259.0,262,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,433.0,436,-3.0,259.0,262,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,433.0,436,-3.0,259.0,262,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,1756.0,1759,-3.0,314.0,317,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,497.0,503,-7.0,324.0,330,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,750.0,756,-7.0,324.0,330,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,750.0,867,-118.0,324.0,441,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,750.0,867,-118.0,324.0,441,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,2016.0,2030,-14.0,574.0,588,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,287.0,292,-6.0,113.0,119,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,287.0,292,-6.0,113.0,119,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,287.0,292,-6.0,113.0,119,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,287.0,292,-6.0,113.0,119,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,django,1.6.4,Direct,django,1.6.4,,,False,189.0,191,-2.0,15.0,17,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.4,Direct,django,1.6.4,,,False,189.0,191,-2.0,15.0,17,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,4033.0,4039,-7.0,2598.0,2604,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,3501.0,3501,-1.0,2066.0,2066,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,2253.0,2271,-18.0,818.0,836,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,2323.0,2330,-8.0,888.0,895,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,433.0,436,-3.0,266.0,269,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,433.0,436,-3.0,266.0,269,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,433.0,436,-3.0,266.0,269,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,433.0,436,-3.0,266.0,269,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,1756.0,1759,-3.0,321.0,324,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,497.0,503,-7.0,331.0,337,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,750.0,756,-7.0,331.0,337,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,750.0,867,-118.0,331.0,448,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,750.0,867,-118.0,331.0,448,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,2016.0,2030,-14.0,581.0,594,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,287.0,292,-6.0,120.0,126,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,287.0,292,-6.0,120.0,126,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,287.0,292,-6.0,120.0,126,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,287.0,292,-6.0,120.0,126,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,django,1.6.3,Direct,django,1.6.3,,,False,189.0,191,-2.0,22.0,24,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.3,Direct,django,1.6.3,,,False,189.0,191,-2.0,22.0,24,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,4033.0,4039,-7.0,2672.0,2678,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,3501.0,3501,-1.0,2140.0,2140,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,2253.0,2271,-18.0,892.0,910,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,2323.0,2330,-8.0,962.0,969,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,433.0,436,-3.0,340.0,343,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,433.0,436,-3.0,340.0,343,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,433.0,436,-3.0,340.0,343,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,433.0,436,-3.0,340.0,343,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,1756.0,1759,-3.0,395.0,398,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,497.0,503,-7.0,405.0,411,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,750.0,756,-7.0,405.0,411,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,750.0,867,-118.0,405.0,522,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,750.0,867,-118.0,405.0,522,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,2016.0,2030,-14.0,655.0,668,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,166.0,168,-2.0,74.0,75,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,166.0,168,-2.0,74.0,75,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,166.0,168,-2.0,74.0,75,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,287.0,292,-6.0,194.0,200,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,287.0,292,-6.0,194.0,200,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,287.0,292,-6.0,194.0,200,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,287.0,292,-6.0,194.0,200,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,django,1.6.2,Direct,django,1.6.2,,,False,189.0,191,-2.0,96.0,98,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.2,Direct,django,1.6.2,,,False,189.0,191,-2.0,96.0,98,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,4033.0,4039,-7.0,2728.0,2734,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,3501.0,3501,-1.0,2196.0,2196,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,2253.0,2271,-18.0,948.0,966,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,2323.0,2330,-8.0,1018.0,1025,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,433.0,436,-3.0,396.0,399,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,433.0,436,-3.0,396.0,399,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,433.0,436,-3.0,396.0,399,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,433.0,436,-3.0,396.0,399,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,1756.0,1759,-3.0,451.0,454,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,497.0,503,-7.0,461.0,467,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,750.0,756,-7.0,461.0,467,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,750.0,867,-118.0,461.0,578,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,750.0,867,-118.0,461.0,578,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,2016.0,2030,-14.0,711.0,725,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,166.0,168,-2.0,130.0,131,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,166.0,168,-2.0,130.0,131,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,166.0,168,-2.0,130.0,131,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,287.0,292,-6.0,251.0,256,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,287.0,292,-6.0,251.0,256,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,287.0,292,-6.0,251.0,256,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,287.0,292,-6.0,251.0,256,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,django,1.6.1,Direct,django,1.6.1,,,False,189.0,191,-2.0,152.0,154,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6.1,Direct,django,1.6.1,,,False,189.0,191,-2.0,152.0,154,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,django,1.6,Direct,django,1.6,,,False,4033.0,4039,-7.0,2764.0,2771,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,django,1.6,Direct,django,1.6,,,False,3501.0,3501,-1.0,2232.0,2233,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,django,1.6,Direct,django,1.6,,,False,2253.0,2271,-18.0,985.0,1003,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,django,1.6,Direct,django,1.6,,,False,2323.0,2330,-8.0,1055.0,1062,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,433.0,436,-3.0,433.0,436,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6,Direct,django,1.6,,,False,433.0,436,-3.0,433.0,436,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,433.0,436,-3.0,433.0,436,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,433.0,436,-3.0,433.0,436,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6,Direct,django,1.6,,,False,1756.0,1759,-3.0,488.0,490,False
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,497.0,503,-7.0,497.0,503,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6,Direct,django,1.6,,,False,750.0,756,-7.0,497.0,503,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,django,1.6,Direct,django,1.6,,,False,750.0,867,-118.0,497.0,615,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6,Direct,django,1.6,,,False,750.0,867,-118.0,497.0,615,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,2016.0,2030,-14.0,748.0,761,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,6,django,1.6,Direct,django,1.6,,,False,166.0,168,-2.0,166.0,168,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,166.0,168,-2.0,166.0,168,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,166.0,168,-2.0,166.0,168,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,django,1.6,Direct,django,1.6,,,False,287.0,292,-6.0,287.0,292,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,django,1.6,Direct,django,1.6,,,False,287.0,292,-6.0,287.0,292,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,287.0,292,-6.0,287.0,292,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,django,1.6,Direct,django,1.6,,,False,287.0,292,-6.0,287.0,292,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,django,1.6,Direct,django,1.6,,,False,189.0,191,-2.0,189.0,191,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6,Direct,django,1.6,,,False,189.0,191,-2.0,189.0,191,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,36.0,-44,79.0,36.0,-44,False
166181,CVE-2013-4249,Cross-site scripting (XSS) vulnerability in the AdminURLFieldWidget widget in contrib/admin/widgets.py in Django 1.5.x before 1.5.2 and 1.6.x before 1.6 beta 2 allows remote attackers to inject arbitrary web script or HTML via a URLField.,2013-10-04 17:55:00,2017-08-29 01:33:00,2024-03-19 17:58:01.742120,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6,Direct,django,1.6,,,False,36.0,-33,69.0,36.0,-33,False
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,django,1.6,Direct,django,1.6,,,False,36.0,-51,87.0,36.0,-51,False
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,django,1.6,Direct,django,1.6,,,False,36.0,-33,69.0,36.0,-33,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.12,Direct,django,1.5.12,,,False,4033.0,4039,-7.0,2342.0,2348,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.12,Direct,django,1.5.12,,,False,3501.0,3501,-1.0,1810.0,1810,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.12,Direct,django,1.5.12,,,False,2253.0,2271,-18.0,562.0,580,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.12,Direct,django,1.5.12,,,False,2323.0,2330,-8.0,632.0,639,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.12,Direct,django,1.5.12,,,False,1756.0,1759,-3.0,65.0,68,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.12,Direct,django,1.5.12,,,False,750.0,756,-7.0,74.0,81,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.12,Direct,django,1.5.12,,,False,750.0,867,-118.0,74.0,192,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.12,Direct,django,1.5.12,,,False,750.0,867,-118.0,74.0,192,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.12,Direct,django,1.5.12,,,False,2016.0,2030,-14.0,325.0,338,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.11,Direct,django,1.5.11,,,False,4033.0,4039,-7.0,2414.0,2421,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.11,Direct,django,1.5.11,,,False,3501.0,3501,-1.0,1882.0,1883,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.11,Direct,django,1.5.11,,,False,2253.0,2271,-18.0,635.0,652,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.11,Direct,django,1.5.11,,,False,2323.0,2330,-8.0,705.0,712,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.11,Direct,django,1.5.11,,,False,1756.0,1759,-3.0,137.0,140,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.11,Direct,django,1.5.11,,,False,750.0,756,-7.0,147.0,153,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.11,Direct,django,1.5.11,,,False,750.0,867,-118.0,147.0,265,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.11,Direct,django,1.5.11,,,False,750.0,867,-118.0,147.0,265,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.11,Direct,django,1.5.11,,,False,2016.0,2030,-14.0,398.0,411,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.10,Direct,django,1.5.10,,,False,4033.0,4039,-7.0,2464.0,2470,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.10,Direct,django,1.5.10,,,False,3501.0,3501,-1.0,1932.0,1932,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.10,Direct,django,1.5.10,,,False,2253.0,2271,-18.0,684.0,702,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.10,Direct,django,1.5.10,,,False,2323.0,2330,-8.0,754.0,761,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.10,Direct,django,1.5.10,,,False,1756.0,1759,-3.0,187.0,190,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.10,Direct,django,1.5.10,,,False,750.0,756,-7.0,197.0,203,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.10,Direct,django,1.5.10,,,False,750.0,867,-118.0,197.0,314,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.10,Direct,django,1.5.10,,,False,750.0,867,-118.0,197.0,314,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.10,Direct,django,1.5.10,,,False,2016.0,2030,-14.0,447.0,461,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.9,Direct,django,1.5.9,,,False,4033.0,4039,-7.0,2477.0,2483,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.9,Direct,django,1.5.9,,,False,3501.0,3501,-1.0,1945.0,1945,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.9,Direct,django,1.5.9,,,False,2253.0,2271,-18.0,697.0,715,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.9,Direct,django,1.5.9,,,False,2323.0,2330,-8.0,767.0,774,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.9,Direct,django,1.5.9,,,False,1756.0,1759,-3.0,200.0,203,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.9,Direct,django,1.5.9,,,False,750.0,756,-7.0,210.0,216,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.9,Direct,django,1.5.9,,,False,750.0,867,-118.0,210.0,327,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.9,Direct,django,1.5.9,,,False,750.0,867,-118.0,210.0,327,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.9,Direct,django,1.5.9,,,False,2016.0,2030,-14.0,460.0,474,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,4033.0,4039,-7.0,2575.0,2581,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,3501.0,3501,-1.0,2043.0,2044,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,2253.0,2271,-18.0,796.0,813,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,2323.0,2330,-8.0,866.0,873,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,1756.0,1759,-3.0,298.0,301,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,750.0,756,-7.0,308.0,314,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,750.0,867,-118.0,308.0,425,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,750.0,867,-118.0,308.0,425,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,2016.0,2030,-14.0,558.0,572,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,540.0,545,-6.0,98.0,103,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,540.0,545,-6.0,98.0,103,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,540.0,545,-6.0,98.0,103,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,django,1.5.8,Direct,django,1.5.8,,,False,540.0,545,-6.0,98.0,103,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,4033.0,4039,-7.0,2591.0,2597,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,3501.0,3501,-1.0,2059.0,2059,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,2253.0,2271,-18.0,811.0,829,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,2323.0,2330,-8.0,881.0,888,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,1756.0,1759,-3.0,314.0,317,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,750.0,756,-7.0,324.0,330,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,750.0,867,-118.0,324.0,441,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,750.0,867,-118.0,324.0,441,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,2016.0,2030,-14.0,574.0,588,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,540.0,545,-6.0,113.0,119,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,540.0,545,-6.0,113.0,119,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,540.0,545,-6.0,113.0,119,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,540.0,545,-6.0,113.0,119,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,django,1.5.7,Direct,django,1.5.7,,,False,441.0,443,-2.0,15.0,17,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.7,Direct,django,1.5.7,,,False,441.0,443,-2.0,15.0,17,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,4033.0,4039,-7.0,2598.0,2604,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,3501.0,3501,-1.0,2066.0,2066,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,2253.0,2271,-18.0,818.0,836,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,2323.0,2330,-8.0,888.0,895,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,1756.0,1759,-3.0,321.0,324,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,750.0,756,-7.0,331.0,337,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,750.0,867,-118.0,331.0,448,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,750.0,867,-118.0,331.0,448,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,2016.0,2030,-14.0,581.0,594,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,540.0,545,-6.0,120.0,126,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,540.0,545,-6.0,120.0,126,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,540.0,545,-6.0,120.0,126,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,540.0,545,-6.0,120.0,126,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,django,1.5.6,Direct,django,1.5.6,,,False,441.0,443,-2.0,22.0,24,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.6,Direct,django,1.5.6,,,False,441.0,443,-2.0,22.0,24,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,4033.0,4039,-7.0,2777.0,2783,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,3501.0,3501,-1.0,2245.0,2245,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,2253.0,2271,-18.0,997.0,1015,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,2323.0,2330,-8.0,1067.0,1074,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,1756.0,1759,-3.0,500.0,503,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,750.0,756,-7.0,509.0,516,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,750.0,867,-118.0,509.0,627,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,750.0,867,-118.0,509.0,627,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,2016.0,2030,-14.0,760.0,773,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,419.0,420,-2.0,178.0,180,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,419.0,420,-2.0,178.0,180,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,419.0,420,-2.0,178.0,180,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,540.0,545,-6.0,299.0,305,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,540.0,545,-6.0,299.0,305,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,540.0,545,-6.0,299.0,305,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,540.0,545,-6.0,299.0,305,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,django,1.5.5,Direct,django,1.5.5,,,False,441.0,443,-2.0,201.0,203,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.5,Direct,django,1.5.5,,,False,441.0,443,-2.0,201.0,203,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,4033.0,4039,-7.0,2817.0,2823,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,3501.0,3501,-1.0,2285.0,2285,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,2253.0,2271,-18.0,1037.0,1055,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,2323.0,2330,-8.0,1107.0,1114,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,1756.0,1759,-3.0,540.0,543,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,750.0,756,-7.0,549.0,556,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,750.0,867,-118.0,549.0,667,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,750.0,867,-118.0,549.0,667,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,2016.0,2030,-14.0,800.0,813,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,419.0,420,-2.0,218.0,220,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,419.0,420,-2.0,218.0,220,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,419.0,420,-2.0,218.0,220,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,540.0,545,-6.0,339.0,345,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,540.0,545,-6.0,339.0,345,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,540.0,545,-6.0,339.0,345,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,540.0,545,-6.0,339.0,345,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,django,1.5.4,Direct,django,1.5.4,,,False,441.0,443,-2.0,241.0,243,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.4,Direct,django,1.5.4,,,False,441.0,443,-2.0,241.0,243,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,4033.0,4039,-7.0,2821.0,2827,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,3501.0,3501,-1.0,2289.0,2289,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,2253.0,2271,-18.0,1041.0,1059,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,2323.0,2330,-8.0,1111.0,1118,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,1756.0,1759,-3.0,544.0,547,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,750.0,756,-7.0,553.0,560,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,750.0,867,-118.0,553.0,671,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,750.0,867,-118.0,553.0,671,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,2016.0,2030,-14.0,804.0,817,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,419.0,420,-2.0,222.0,224,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,419.0,420,-2.0,222.0,224,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,419.0,420,-2.0,222.0,224,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,540.0,545,-6.0,343.0,349,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,540.0,545,-6.0,343.0,349,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,540.0,545,-6.0,343.0,349,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,540.0,545,-6.0,343.0,349,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,django,1.5.3,Direct,django,1.5.3,,,False,441.0,443,-2.0,245.0,247,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,441.0,443,-2.0,245.0,247,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,django,1.5.3,Direct,django,1.5.3,,,False,200.0,209,-9.0,4.0,12,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,4033.0,4039,-7.0,2849.0,2856,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,3501.0,3501,-1.0,2317.0,2318,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,2253.0,2271,-18.0,1070.0,1087,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,2323.0,2330,-8.0,1140.0,1147,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,1756.0,1759,-3.0,572.0,575,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,750.0,756,-7.0,582.0,588,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,750.0,867,-118.0,582.0,700,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,750.0,867,-118.0,582.0,700,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,2016.0,2030,-14.0,833.0,846,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,419.0,420,-2.0,251.0,252,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,419.0,420,-2.0,251.0,252,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,419.0,420,-2.0,251.0,252,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,540.0,545,-6.0,372.0,377,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,540.0,545,-6.0,372.0,377,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,540.0,545,-6.0,372.0,377,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,540.0,545,-6.0,372.0,377,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,django,1.5.2,Direct,django,1.5.2,,,False,441.0,443,-2.0,274.0,275,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,441.0,443,-2.0,274.0,275,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,django,1.5.2,Direct,django,1.5.2,,,False,200.0,209,-9.0,32.0,41,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,4033.0,4039,-7.0,2987.0,2993,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,3501.0,3501,-1.0,2455.0,2455,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,2253.0,2271,-18.0,1207.0,1225,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,2323.0,2330,-8.0,1277.0,1284,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,1756.0,1759,-3.0,710.0,713,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,750.0,756,-7.0,720.0,726,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,750.0,867,-118.0,720.0,837,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,750.0,867,-118.0,720.0,837,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,2016.0,2030,-14.0,970.0,984,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,419.0,420,-2.0,389.0,390,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,419.0,420,-2.0,389.0,390,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,419.0,420,-2.0,389.0,390,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,540.0,545,-6.0,509.0,515,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,540.0,545,-6.0,509.0,515,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,540.0,545,-6.0,509.0,515,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,540.0,545,-6.0,509.0,515,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,django,1.5.1,Direct,django,1.5.1,,,False,441.0,443,-2.0,411.0,413,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,441.0,443,-2.0,411.0,413,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,200.0,209,-9.0,170.0,178,False
166181,CVE-2013-4249,Cross-site scripting (XSS) vulnerability in the AdminURLFieldWidget widget in contrib/admin/widgets.py in Django 1.5.x before 1.5.2 and 1.6.x before 1.6 beta 2 allows remote attackers to inject arbitrary web script or HTML via a URLField.,2013-10-04 17:55:00,2017-08-29 01:33:00,2024-03-19 17:58:01.742120,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,167.0,219,-53.0,137.0,189,False
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,167.0,201,-35.0,137.0,171,False
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5.1,Direct,django,1.5.1,,,False,167.0,219,-53.0,137.0,189,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,django,1.5,Direct,django,1.5,,,False,4033.0,4039,-7.0,3017.0,3023,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,django,1.5,Direct,django,1.5,,,False,3501.0,3501,-1.0,2485.0,2485,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,django,1.5,Direct,django,1.5,,,False,2253.0,2271,-18.0,1237.0,1255,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,django,1.5,Direct,django,1.5,,,False,2323.0,2330,-8.0,1307.0,1314,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5,Direct,django,1.5,,,False,1756.0,1759,-3.0,740.0,743,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5,Direct,django,1.5,,,False,750.0,756,-7.0,750.0,756,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,django,1.5,Direct,django,1.5,,,False,750.0,867,-118.0,750.0,867,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5,Direct,django,1.5,,,False,750.0,867,-118.0,750.0,867,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5,Direct,django,1.5,,,False,2016.0,2030,-14.0,1000.0,1014,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,django,1.5,Direct,django,1.5,,,False,419.0,420,-2.0,419.0,420,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5,Direct,django,1.5,,,False,419.0,420,-2.0,419.0,420,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,django,1.5,Direct,django,1.5,,,False,419.0,420,-2.0,419.0,420,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,django,1.5,Direct,django,1.5,,,False,540.0,545,-6.0,540.0,545,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,django,1.5,Direct,django,1.5,,,False,540.0,545,-6.0,540.0,545,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,django,1.5,Direct,django,1.5,,,False,540.0,545,-6.0,540.0,545,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,django,1.5,Direct,django,1.5,,,False,540.0,545,-6.0,540.0,545,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,django,1.5,Direct,django,1.5,,,False,441.0,443,-2.0,441.0,443,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5,Direct,django,1.5,,,False,441.0,443,-2.0,441.0,443,False
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,5,django,1.5,Direct,django,1.5,,,False,30.0,64,-35.0,30.0,64,False
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,django,1.5,Direct,django,1.5,,,False,30.0,64,-35.0,30.0,64,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,django,1.5,Direct,django,1.5,,,False,200.0,209,-9.0,200.0,209,False
166181,CVE-2013-4249,Cross-site scripting (XSS) vulnerability in the AdminURLFieldWidget widget in contrib/admin/widgets.py in Django 1.5.x before 1.5.2 and 1.6.x before 1.6 beta 2 allows remote attackers to inject arbitrary web script or HTML via a URLField.,2013-10-04 17:55:00,2017-08-29 01:33:00,2024-03-19 17:58:01.742120,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5,Direct,django,1.5,,,False,167.0,219,-53.0,167.0,219,False
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,django,1.5,Direct,django,1.5,,,False,167.0,201,-35.0,167.0,201,False
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,django,1.5,Direct,django,1.5,,,False,167.0,219,-53.0,167.0,219,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.22,Direct,django,1.4.22,,,False,4033.0,4039,-7.0,2114.0,2121,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.22,Direct,django,1.4.22,,,False,3501.0,3501,-1.0,1582.0,1583,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.22,Direct,django,1.4.22,,,False,2253.0,2271,-18.0,335.0,352,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.22,Direct,django,1.4.22,,,False,2323.0,2330,-8.0,405.0,412,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.22,Direct,django,1.4.22,,,False,1756.0,1759,-3.0,-163.0,-160,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.22,Direct,django,1.4.22,,,False,2016.0,2030,-14.0,97.0,111,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.21,Direct,django,1.4.21,,,False,4033.0,4039,-7.0,2155.0,2161,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.21,Direct,django,1.4.21,,,False,3501.0,3501,-1.0,1623.0,1623,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.21,Direct,django,1.4.21,,,False,2253.0,2271,-18.0,375.0,393,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.21,Direct,django,1.4.21,,,False,2323.0,2330,-8.0,445.0,452,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.21,Direct,django,1.4.21,,,False,1756.0,1759,-3.0,-122.0,-119,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.21,Direct,django,1.4.21,,,False,203.0,208,-6.0,40.0,46,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.21,Direct,django,1.4.21,,,False,203.0,208,-6.0,40.0,46,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.21,Direct,django,1.4.21,,,False,2016.0,2030,-14.0,138.0,152,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,4033.0,4039,-7.0,2267.0,2273,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,3501.0,3501,-1.0,1735.0,1735,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,2253.0,2271,-18.0,487.0,505,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,2323.0,2330,-8.0,557.0,564,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,1756.0,1759,-3.0,-10.0,-7,False
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,111.0,117,-6.0,111.0,117,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,1877.0,1883,-6.0,111.0,117,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,203.0,208,-6.0,152.0,158,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,203.0,208,-6.0,152.0,158,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.20,Direct,django,1.4.20,,,False,2016.0,2030,-14.0,250.0,263,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,4033.0,4039,-7.0,2317.0,2324,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,3501.0,3501,-1.0,1785.0,1786,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,2253.0,2271,-18.0,538.0,555,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,2323.0,2330,-8.0,608.0,615,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,1756.0,1759,-3.0,40.0,43,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,1766.0,1772,-7.0,50.0,56,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,1877.0,1883,-6.0,162.0,168,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,203.0,208,-6.0,203.0,208,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,203.0,208,-6.0,203.0,208,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.19,Direct,django,1.4.19,,,False,2016.0,2030,-14.0,301.0,314,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.18,Direct,django,1.4.18,,,False,4033.0,4039,-7.0,2331.0,2337,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.18,Direct,django,1.4.18,,,False,3501.0,3501,-1.0,1799.0,1800,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.18,Direct,django,1.4.18,,,False,2253.0,2271,-18.0,551.0,569,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.18,Direct,django,1.4.18,,,False,2323.0,2330,-8.0,621.0,629,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.18,Direct,django,1.4.18,,,False,1756.0,1759,-3.0,54.0,57,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.18,Direct,django,1.4.18,,,False,1766.0,1772,-7.0,64.0,70,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.18,Direct,django,1.4.18,,,False,1877.0,1883,-6.0,176.0,181,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.18,Direct,django,1.4.18,,,False,2016.0,2030,-14.0,314.0,328,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,4033.0,4039,-7.0,2342.0,2348,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,3501.0,3501,-1.0,1810.0,1810,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,2253.0,2271,-18.0,562.0,580,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,2323.0,2330,-8.0,632.0,639,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,1701.0,1704,-3.0,10.0,13,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,1701.0,1704,-3.0,10.0,13,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,1701.0,1704,-3.0,10.0,13,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,1701.0,1704,-3.0,10.0,13,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,1756.0,1759,-3.0,65.0,68,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,1766.0,1772,-7.0,74.0,81,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,1877.0,1883,-6.0,186.0,192,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,10.0,233,-223.0,10.0,233,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,10.0,233,-223.0,10.0,233,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.17,Direct,django,1.4.17,,,False,2016.0,2030,-14.0,325.0,338,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,4033.0,4039,-7.0,2414.0,2421,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,3501.0,3501,-1.0,1882.0,1883,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,2253.0,2271,-18.0,635.0,652,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,2323.0,2330,-8.0,705.0,712,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,1701.0,1704,-3.0,83.0,86,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,1701.0,1704,-3.0,83.0,86,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,1701.0,1704,-3.0,83.0,86,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,1701.0,1704,-3.0,83.0,86,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,1756.0,1759,-3.0,137.0,140,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,1766.0,1772,-7.0,147.0,153,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,1877.0,1883,-6.0,259.0,265,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.16,Direct,django,1.4.16,,,False,2016.0,2030,-14.0,398.0,411,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,4033.0,4039,-7.0,2464.0,2470,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,3501.0,3501,-1.0,1932.0,1932,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,2253.0,2271,-18.0,684.0,702,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,2323.0,2330,-8.0,754.0,761,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,1701.0,1704,-3.0,132.0,135,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,1701.0,1704,-3.0,132.0,135,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,1701.0,1704,-3.0,132.0,135,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,1701.0,1704,-3.0,132.0,135,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,1756.0,1759,-3.0,187.0,190,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,1766.0,1772,-7.0,197.0,203,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,1877.0,1883,-6.0,308.0,314,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.15,Direct,django,1.4.15,,,False,2016.0,2030,-14.0,447.0,461,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,4033.0,4039,-7.0,2477.0,2483,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,3501.0,3501,-1.0,1945.0,1945,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,2253.0,2271,-18.0,697.0,715,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,2323.0,2330,-8.0,767.0,774,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,1701.0,1704,-3.0,145.0,148,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,1701.0,1704,-3.0,145.0,148,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,1701.0,1704,-3.0,145.0,148,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,1701.0,1704,-3.0,145.0,148,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,1756.0,1759,-3.0,200.0,203,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,1766.0,1772,-7.0,210.0,216,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,1877.0,1883,-6.0,321.0,327,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,560.0,915,-356.0,13.0,368,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,560.0,915,-356.0,13.0,368,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.14,Direct,django,1.4.14,,,False,2016.0,2030,-14.0,460.0,474,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,4033.0,4039,-7.0,2575.0,2581,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,3501.0,3501,-1.0,2043.0,2044,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,2253.0,2271,-18.0,796.0,813,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,2323.0,2330,-8.0,866.0,873,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1701.0,1704,-3.0,244.0,246,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1701.0,1704,-3.0,244.0,246,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1701.0,1704,-3.0,244.0,246,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1701.0,1704,-3.0,244.0,246,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1756.0,1759,-3.0,298.0,301,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1766.0,1772,-7.0,308.0,314,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1877.0,1883,-6.0,420.0,425,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,560.0,915,-356.0,111.0,466,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,560.0,915,-356.0,111.0,466,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,2016.0,2030,-14.0,558.0,572,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1555.0,1561,-6.0,98.0,103,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1555.0,1561,-6.0,98.0,103,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1555.0,1561,-6.0,98.0,103,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.13,Direct,django,1.4.13,,,False,1555.0,1561,-6.0,98.0,103,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,4033.0,4039,-7.0,2591.0,2597,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,3501.0,3501,-1.0,2059.0,2059,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,2253.0,2271,-18.0,811.0,829,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,2323.0,2330,-8.0,881.0,888,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1701.0,1704,-3.0,259.0,262,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1701.0,1704,-3.0,259.0,262,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1701.0,1704,-3.0,259.0,262,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1701.0,1704,-3.0,259.0,262,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1756.0,1759,-3.0,314.0,317,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1766.0,1772,-7.0,324.0,330,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1877.0,1883,-6.0,435.0,441,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,560.0,915,-356.0,127.0,482,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,560.0,915,-356.0,127.0,482,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,2016.0,2030,-14.0,574.0,588,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1555.0,1561,-6.0,113.0,119,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1555.0,1561,-6.0,113.0,119,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1555.0,1561,-6.0,113.0,119,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,1555.0,1561,-6.0,113.0,119,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.12,Direct,django,1.4.12,,,False,448.0,450,-2.0,15.0,17,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.12,Direct,django,1.4.12,,,False,448.0,450,-2.0,15.0,17,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,4033.0,4039,-7.0,2598.0,2604,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,3501.0,3501,-1.0,2066.0,2066,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,2253.0,2271,-18.0,818.0,836,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,2323.0,2330,-8.0,888.0,895,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1701.0,1704,-3.0,266.0,269,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1701.0,1704,-3.0,266.0,269,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1701.0,1704,-3.0,266.0,269,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1701.0,1704,-3.0,266.0,269,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1756.0,1759,-3.0,321.0,324,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1766.0,1772,-7.0,331.0,337,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1877.0,1883,-6.0,442.0,448,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,560.0,915,-356.0,133.0,489,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,560.0,915,-356.0,133.0,489,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,2016.0,2030,-14.0,581.0,594,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1555.0,1561,-6.0,120.0,126,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1555.0,1561,-6.0,120.0,126,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1555.0,1561,-6.0,120.0,126,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,1555.0,1561,-6.0,120.0,126,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.11,Direct,django,1.4.11,,,False,448.0,450,-2.0,22.0,24,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.11,Direct,django,1.4.11,,,False,448.0,450,-2.0,22.0,24,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,4033.0,4039,-7.0,2764.0,2771,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,3501.0,3501,-1.0,2232.0,2233,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,2253.0,2271,-18.0,985.0,1003,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,2323.0,2330,-8.0,1055.0,1062,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1701.0,1704,-3.0,433.0,436,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1701.0,1704,-3.0,433.0,436,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1701.0,1704,-3.0,433.0,436,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1701.0,1704,-3.0,433.0,436,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1756.0,1759,-3.0,488.0,491,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1766.0,1772,-7.0,497.0,504,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1877.0,1883,-6.0,609.0,615,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,560.0,915,-356.0,300.0,656,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,560.0,915,-356.0,300.0,656,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,2016.0,2030,-14.0,748.0,761,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1435.0,1436,-2.0,166.0,168,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1435.0,1436,-2.0,166.0,168,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1435.0,1436,-2.0,166.0,168,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1555.0,1561,-6.0,287.0,293,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1555.0,1561,-6.0,287.0,293,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1555.0,1561,-6.0,287.0,293,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,1555.0,1561,-6.0,287.0,293,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.10,Direct,django,1.4.10,,,False,448.0,450,-2.0,189.0,191,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.10,Direct,django,1.4.10,,,False,448.0,450,-2.0,189.0,191,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,4033.0,4039,-7.0,2777.0,2783,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,3501.0,3501,-1.0,2245.0,2245,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,2253.0,2271,-18.0,997.0,1015,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,2323.0,2330,-8.0,1067.0,1074,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1701.0,1704,-3.0,445.0,448,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1701.0,1704,-3.0,445.0,448,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1701.0,1704,-3.0,445.0,448,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1701.0,1704,-3.0,445.0,448,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1756.0,1759,-3.0,500.0,503,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1766.0,1772,-7.0,509.0,516,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1877.0,1883,-6.0,621.0,627,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,560.0,915,-356.0,312.0,668,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,560.0,915,-356.0,312.0,668,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,2016.0,2030,-14.0,760.0,773,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1435.0,1436,-2.0,178.0,180,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1435.0,1436,-2.0,178.0,180,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1435.0,1436,-2.0,178.0,180,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1555.0,1561,-6.0,299.0,305,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1555.0,1561,-6.0,299.0,305,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1555.0,1561,-6.0,299.0,305,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,1555.0,1561,-6.0,299.0,305,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.9,Direct,django,1.4.9,,,False,448.0,450,-2.0,201.0,203,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.9,Direct,django,1.4.9,,,False,448.0,450,-2.0,201.0,203,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,4033.0,4039,-7.0,2817.0,2823,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,3501.0,3501,-1.0,2285.0,2285,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,2253.0,2271,-18.0,1037.0,1055,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,2323.0,2330,-8.0,1107.0,1114,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1701.0,1704,-3.0,485.0,488,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1701.0,1704,-3.0,485.0,488,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1701.0,1704,-3.0,485.0,488,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1701.0,1704,-3.0,485.0,488,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1756.0,1759,-3.0,540.0,543,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1766.0,1772,-7.0,549.0,556,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1877.0,1883,-6.0,661.0,667,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,560.0,915,-356.0,352.0,708,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,560.0,915,-356.0,352.0,708,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,2016.0,2030,-14.0,800.0,813,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1435.0,1436,-2.0,218.0,220,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1435.0,1436,-2.0,218.0,220,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1435.0,1436,-2.0,218.0,220,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1555.0,1561,-6.0,339.0,345,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1555.0,1561,-6.0,339.0,345,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1555.0,1561,-6.0,339.0,345,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,1555.0,1561,-6.0,339.0,345,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.8,Direct,django,1.4.8,,,False,448.0,450,-2.0,241.0,243,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.8,Direct,django,1.4.8,,,False,448.0,450,-2.0,241.0,243,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,4033.0,4039,-7.0,2821.0,2827,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,3501.0,3501,-1.0,2289.0,2289,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,2253.0,2271,-18.0,1041.0,1059,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,2323.0,2330,-8.0,1111.0,1118,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1701.0,1704,-3.0,489.0,492,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1701.0,1704,-3.0,489.0,492,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1701.0,1704,-3.0,489.0,492,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1701.0,1704,-3.0,489.0,492,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1756.0,1759,-3.0,544.0,547,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1766.0,1772,-7.0,553.0,560,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1877.0,1883,-6.0,665.0,671,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,560.0,915,-356.0,356.0,712,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,560.0,915,-356.0,356.0,712,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,2016.0,2030,-14.0,804.0,817,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1435.0,1436,-2.0,222.0,224,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1435.0,1436,-2.0,222.0,224,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1435.0,1436,-2.0,222.0,224,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1555.0,1561,-6.0,343.0,349,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1555.0,1561,-6.0,343.0,349,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1555.0,1561,-6.0,343.0,349,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,1555.0,1561,-6.0,343.0,349,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.7,Direct,django,1.4.7,,,False,448.0,450,-2.0,245.0,247,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,448.0,450,-2.0,245.0,247,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.7,Direct,django,1.4.7,,,False,207.0,216,-9.0,4.0,12,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,4033.0,4039,-7.0,2849.0,2856,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,3501.0,3501,-1.0,2317.0,2318,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,2253.0,2271,-18.0,1070.0,1087,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,2323.0,2330,-8.0,1140.0,1147,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1701.0,1704,-3.0,518.0,521,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1701.0,1704,-3.0,518.0,521,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1701.0,1704,-3.0,518.0,521,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1701.0,1704,-3.0,518.0,521,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1756.0,1759,-3.0,572.0,575,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1766.0,1772,-7.0,582.0,588,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1877.0,1883,-6.0,694.0,700,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,560.0,915,-356.0,385.0,740,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,560.0,915,-356.0,385.0,740,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,2016.0,2030,-14.0,833.0,846,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1435.0,1436,-2.0,251.0,252,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1435.0,1436,-2.0,251.0,252,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1435.0,1436,-2.0,251.0,252,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1555.0,1561,-6.0,372.0,377,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1555.0,1561,-6.0,372.0,377,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1555.0,1561,-6.0,372.0,377,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,1555.0,1561,-6.0,372.0,377,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.6,Direct,django,1.4.6,,,False,448.0,450,-2.0,274.0,275,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,448.0,450,-2.0,274.0,275,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,207.0,216,-9.0,32.0,41,False
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.6,Direct,django,1.4.6,,,False,203.0,208,-6.0,28.0,34,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,4033.0,4039,-7.0,3023.0,3029,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,3501.0,3501,-1.0,2491.0,2491,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,2253.0,2271,-18.0,1243.0,1261,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,2323.0,2330,-8.0,1313.0,1320,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1701.0,1704,-3.0,691.0,694,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1701.0,1704,-3.0,691.0,694,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1701.0,1704,-3.0,691.0,694,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1701.0,1704,-3.0,691.0,694,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1756.0,1759,-3.0,746.0,749,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1766.0,1772,-7.0,756.0,762,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1877.0,1883,-6.0,868.0,873,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,560.0,915,-356.0,559.0,914,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,560.0,915,-356.0,559.0,914,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,2016.0,2030,-14.0,1006.0,1020,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1435.0,1436,-2.0,425.0,426,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1435.0,1436,-2.0,425.0,426,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1435.0,1436,-2.0,425.0,426,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1555.0,1561,-6.0,546.0,551,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1555.0,1561,-6.0,546.0,551,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1555.0,1561,-6.0,546.0,551,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,1555.0,1561,-6.0,546.0,551,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.5,Direct,django,1.4.5,,,False,448.0,450,-2.0,447.0,449,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,448.0,450,-2.0,447.0,449,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,207.0,216,-9.0,206.0,215,False
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,203.0,208,-6.0,202.0,207,False
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.5,Direct,django,1.4.5,,,False,174.0,226,-53.0,173.0,225,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,4033.0,4039,-7.0,3024.0,3030,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,3501.0,3501,-1.0,2492.0,2492,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,2253.0,2271,-18.0,1244.0,1262,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,2323.0,2330,-8.0,1314.0,1321,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1701.0,1704,-3.0,692.0,695,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1701.0,1704,-3.0,692.0,695,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1701.0,1704,-3.0,692.0,695,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1701.0,1704,-3.0,692.0,695,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1756.0,1759,-3.0,747.0,750,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1766.0,1772,-7.0,757.0,763,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1877.0,1883,-6.0,868.0,874,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,560.0,915,-356.0,560.0,915,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,560.0,915,-356.0,560.0,915,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,2016.0,2030,-14.0,1007.0,1021,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1435.0,1436,-2.0,426.0,427,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1435.0,1436,-2.0,426.0,427,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1435.0,1436,-2.0,426.0,427,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1555.0,1561,-6.0,546.0,552,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1555.0,1561,-6.0,546.0,552,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1555.0,1561,-6.0,546.0,552,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,1555.0,1561,-6.0,546.0,552,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.4,Direct,django,1.4.4,,,False,448.0,450,-2.0,448.0,450,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,448.0,450,-2.0,448.0,450,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,207.0,216,-9.0,207.0,216,False
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,203.0,208,-6.0,203.0,208,False
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.4,Direct,django,1.4.4,,,False,174.0,226,-53.0,174.0,226,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,4033.0,4039,-7.0,3095.0,3101,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,3501.0,3501,-1.0,2563.0,2563,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,2253.0,2271,-18.0,1315.0,1333,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,2323.0,2330,-8.0,1385.0,1392,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1701.0,1704,-3.0,763.0,766,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1701.0,1704,-3.0,763.0,766,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1701.0,1704,-3.0,763.0,766,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1701.0,1704,-3.0,763.0,766,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1756.0,1759,-3.0,818.0,821,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1766.0,1772,-7.0,828.0,834,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1877.0,1883,-6.0,939.0,945,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,2016.0,2030,-14.0,1078.0,1091,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1435.0,1436,-2.0,497.0,498,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1435.0,1436,-2.0,497.0,498,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1435.0,1436,-2.0,497.0,498,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1555.0,1561,-6.0,617.0,623,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1555.0,1561,-6.0,617.0,623,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1555.0,1561,-6.0,617.0,623,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.3,Direct,django,1.4.3,,,False,1555.0,1561,-6.0,617.0,623,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,4033.0,4039,-7.0,3149.0,3155,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,3501.0,3501,-1.0,2617.0,2617,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,2253.0,2271,-18.0,1369.0,1387,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,2323.0,2330,-8.0,1439.0,1446,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1701.0,1704,-3.0,817.0,820,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1701.0,1704,-3.0,817.0,820,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1701.0,1704,-3.0,817.0,820,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1701.0,1704,-3.0,817.0,820,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1756.0,1759,-3.0,872.0,875,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1766.0,1772,-7.0,882.0,888,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1877.0,1883,-6.0,993.0,999,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,262.0,1248,-987.0,53.0,1040,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,262.0,1248,-987.0,53.0,1040,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,2016.0,2030,-14.0,1132.0,1145,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1435.0,1436,-2.0,551.0,552,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1435.0,1436,-2.0,551.0,552,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1435.0,1436,-2.0,551.0,552,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1555.0,1561,-6.0,671.0,677,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1555.0,1561,-6.0,671.0,677,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1555.0,1561,-6.0,671.0,677,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,1555.0,1561,-6.0,671.0,677,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.2,Direct,django,1.4.2,,,False,262.0,783,-522.0,53.0,575,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,262.0,783,-522.0,53.0,575,False
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,262.0,404,-143.0,53.0,196,False
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,262.0,404,-143.0,53.0,196,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,262.0,549,-287.0,53.0,340,False
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,262.0,542,-280.0,53.0,333,False
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.2,Direct,django,1.4.2,,,False,262.0,559,-298.0,53.0,351,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,4033.0,4039,-7.0,3228.0,3234,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,3501.0,3501,-1.0,2696.0,2696,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,2253.0,2271,-18.0,1448.0,1466,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,2323.0,2330,-8.0,1518.0,1525,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1701.0,1704,-3.0,896.0,899,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1701.0,1704,-3.0,896.0,899,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1701.0,1704,-3.0,896.0,899,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1701.0,1704,-3.0,896.0,899,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1756.0,1759,-3.0,951.0,954,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1766.0,1772,-7.0,961.0,967,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1877.0,1883,-6.0,1072.0,1078,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,262.0,1248,-987.0,132.0,1119,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,262.0,1248,-987.0,132.0,1119,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,2016.0,2030,-14.0,1211.0,1224,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1435.0,1436,-2.0,629.0,631,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1435.0,1436,-2.0,629.0,631,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1435.0,1436,-2.0,629.0,631,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1555.0,1561,-6.0,750.0,756,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1555.0,1561,-6.0,750.0,756,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1555.0,1561,-6.0,750.0,756,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,1555.0,1561,-6.0,750.0,756,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4.1,Direct,django,1.4.1,,,False,262.0,783,-522.0,132.0,654,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,262.0,783,-522.0,132.0,654,False
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,262.0,404,-143.0,132.0,275,False
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,262.0,404,-143.0,132.0,275,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,262.0,549,-287.0,132.0,419,False
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,262.0,542,-280.0,132.0,412,False
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,262.0,559,-298.0,132.0,430,False
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,4,django,1.4.1,Direct,django,1.4.1,,,False,208.0,240,-33.0,78.0,111,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,django,1.4,Direct,django,1.4,,,False,4033.0,4039,-7.0,3357.0,3364,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,django,1.4,Direct,django,1.4,,,False,3501.0,3501,-1.0,2825.0,2826,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,django,1.4,Direct,django,1.4,,,False,2253.0,2271,-18.0,1578.0,1595,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,django,1.4,Direct,django,1.4,,,False,2323.0,2330,-8.0,1648.0,1655,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,1701.0,1704,-3.0,1026.0,1028,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4,Direct,django,1.4,,,False,1701.0,1704,-3.0,1026.0,1028,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,1701.0,1704,-3.0,1026.0,1028,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,1701.0,1704,-3.0,1026.0,1028,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4,Direct,django,1.4,,,False,1756.0,1759,-3.0,1080.0,1083,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4,Direct,django,1.4,,,False,1766.0,1772,-7.0,1090.0,1096,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4,Direct,django,1.4,,,False,1877.0,1883,-6.0,1202.0,1207,False
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,262.0,1248,-987.0,262.0,1248,False
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,262.0,1248,-987.0,262.0,1248,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,2016.0,2030,-14.0,1340.0,1354,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,django,1.4,Direct,django,1.4,,,False,1435.0,1436,-2.0,759.0,760,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,1435.0,1436,-2.0,759.0,760,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,1435.0,1436,-2.0,759.0,760,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,django,1.4,Direct,django,1.4,,,False,1555.0,1561,-6.0,880.0,885,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,django,1.4,Direct,django,1.4,,,False,1555.0,1561,-6.0,880.0,885,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,1555.0,1561,-6.0,880.0,885,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,django,1.4,Direct,django,1.4,,,False,1555.0,1561,-6.0,880.0,885,False
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,django,1.4,Direct,django,1.4,,,False,262.0,783,-522.0,262.0,783,False
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4,Direct,django,1.4,,,False,262.0,783,-522.0,262.0,783,False
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,262.0,404,-143.0,262.0,404,False
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,262.0,404,-143.0,262.0,404,False
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,262.0,549,-287.0,262.0,549,False
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,262.0,542,-280.0,262.0,542,False
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4,Direct,django,1.4,,,False,262.0,559,-298.0,262.0,559,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,django,1.4,Direct,django,1.4,,,False,129.0,129,-1.0,129.0,129,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,129.0,129,-1.0,129.0,129,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,django,1.4,Direct,django,1.4,,,False,129.0,129,-1.0,129.0,129,False
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,4,django,1.4,Direct,django,1.4,,,False,208.0,240,-33.0,208.0,240,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,4033.0,4039,-7.0,3023.0,3029,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,3501.0,3501,-1.0,2491.0,2491,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,2253.0,2271,-18.0,1243.0,1261,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,2323.0,2330,-8.0,1313.0,1320,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1701.0,1704,-3.0,691.0,694,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1701.0,1704,-3.0,691.0,694,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1701.0,1704,-3.0,691.0,694,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1701.0,1704,-3.0,691.0,694,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1756.0,1759,-3.0,746.0,749,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1766.0,1772,-7.0,756.0,762,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1877.0,1883,-6.0,867.0,873,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,2016.0,2030,-14.0,1006.0,1020,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1435.0,1436,-2.0,425.0,426,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1435.0,1436,-2.0,425.0,426,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1435.0,1436,-2.0,425.0,426,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1555.0,1561,-6.0,545.0,551,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1555.0,1561,-6.0,545.0,551,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1555.0,1561,-6.0,545.0,551,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,django,1.3.7,Direct,django,1.3.7,,,False,1555.0,1561,-6.0,545.0,551,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,4033.0,4039,-7.0,3024.0,3030,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,3501.0,3501,-1.0,2492.0,2492,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,2253.0,2271,-18.0,1244.0,1262,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,2323.0,2330,-8.0,1314.0,1321,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1701.0,1704,-3.0,692.0,695,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1701.0,1704,-3.0,692.0,695,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1701.0,1704,-3.0,692.0,695,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1701.0,1704,-3.0,692.0,695,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1756.0,1759,-3.0,747.0,750,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1766.0,1772,-7.0,757.0,763,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1877.0,1883,-6.0,868.0,874,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,2016.0,2030,-14.0,1007.0,1021,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1435.0,1436,-2.0,426.0,427,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1435.0,1436,-2.0,426.0,427,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1435.0,1436,-2.0,426.0,427,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1555.0,1561,-6.0,546.0,552,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1555.0,1561,-6.0,546.0,552,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1555.0,1561,-6.0,546.0,552,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,django,1.3.6,Direct,django,1.3.6,,,False,1555.0,1561,-6.0,546.0,552,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,4033.0,4039,-7.0,3095.0,3101,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,3501.0,3501,-1.0,2563.0,2563,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,2253.0,2271,-18.0,1315.0,1333,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,2323.0,2330,-8.0,1385.0,1392,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1701.0,1704,-3.0,763.0,766,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1701.0,1704,-3.0,763.0,766,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1701.0,1704,-3.0,763.0,766,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1701.0,1704,-3.0,763.0,766,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1756.0,1759,-3.0,818.0,821,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1766.0,1772,-7.0,828.0,834,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1877.0,1883,-6.0,939.0,945,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,2016.0,2030,-14.0,1078.0,1091,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1435.0,1436,-2.0,497.0,498,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1435.0,1436,-2.0,497.0,498,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1435.0,1436,-2.0,497.0,498,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1555.0,1561,-6.0,617.0,623,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1555.0,1561,-6.0,617.0,623,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1555.0,1561,-6.0,617.0,623,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,django,1.3.5,Direct,django,1.3.5,,,False,1555.0,1561,-6.0,617.0,623,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,4033.0,4039,-7.0,3010.0,3016,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,3501.0,3501,-1.0,2478.0,2478,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,2253.0,2271,-18.0,1230.0,1248,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,2323.0,2330,-8.0,1300.0,1307,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1701.0,1704,-3.0,678.0,681,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1701.0,1704,-3.0,678.0,681,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1701.0,1704,-3.0,678.0,681,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1701.0,1704,-3.0,678.0,681,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1756.0,1759,-3.0,733.0,736,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1766.0,1772,-7.0,743.0,749,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1877.0,1883,-6.0,854.0,860,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,2016.0,2030,-14.0,993.0,1006,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1435.0,1436,-2.0,412.0,413,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1435.0,1436,-2.0,412.0,413,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1435.0,1436,-2.0,412.0,413,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1555.0,1561,-6.0,532.0,538,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1555.0,1561,-6.0,532.0,538,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1555.0,1561,-6.0,532.0,538,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,django,1.3.4,Direct,django,1.3.4,,,False,1555.0,1561,-6.0,532.0,538,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,4033.0,4039,-7.0,3226.0,3232,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,3501.0,3501,-1.0,2694.0,2694,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,2253.0,2271,-18.0,1446.0,1464,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,2323.0,2330,-8.0,1516.0,1523,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1701.0,1704,-3.0,894.0,897,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1701.0,1704,-3.0,894.0,897,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1701.0,1704,-3.0,894.0,897,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1701.0,1704,-3.0,894.0,897,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1756.0,1759,-3.0,949.0,952,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1766.0,1772,-7.0,959.0,965,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1877.0,1883,-6.0,1070.0,1076,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,2016.0,2030,-14.0,1209.0,1222,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1435.0,1436,-2.0,628.0,629,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1435.0,1436,-2.0,628.0,629,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1435.0,1436,-2.0,628.0,629,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1555.0,1561,-6.0,748.0,754,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1555.0,1561,-6.0,748.0,754,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1555.0,1561,-6.0,748.0,754,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,1555.0,1561,-6.0,748.0,754,False
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,713.0,771,-58.0,216.0,273,False
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,713.0,771,-58.0,216.0,273,False
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,3,django,1.3.3,Direct,django,1.3.3,,,False,713.0,606,106.0,216.0,109,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,4033.0,4039,-7.0,3228.0,3234,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,3501.0,3501,-1.0,2696.0,2696,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,2253.0,2271,-18.0,1448.0,1466,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,2323.0,2330,-8.0,1518.0,1525,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1701.0,1704,-3.0,896.0,899,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1701.0,1704,-3.0,896.0,899,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1701.0,1704,-3.0,896.0,899,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1701.0,1704,-3.0,896.0,899,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1756.0,1759,-3.0,951.0,954,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1766.0,1772,-7.0,961.0,967,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1877.0,1883,-6.0,1072.0,1078,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,2016.0,2030,-14.0,1211.0,1224,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1435.0,1436,-2.0,629.0,631,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1435.0,1436,-2.0,629.0,631,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1435.0,1436,-2.0,629.0,631,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1555.0,1561,-6.0,750.0,756,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1555.0,1561,-6.0,750.0,756,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1555.0,1561,-6.0,750.0,756,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,1555.0,1561,-6.0,750.0,756,False
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,713.0,771,-58.0,217.0,275,False
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,713.0,771,-58.0,217.0,275,False
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,3,django,1.3.2,Direct,django,1.3.2,,,False,713.0,606,106.0,217.0,111,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,4033.0,4039,-7.0,3553.0,3559,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,3501.0,3501,-1.0,3021.0,3021,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,2253.0,2271,-18.0,1773.0,1791,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,2323.0,2330,-8.0,1843.0,1850,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1701.0,1704,-3.0,1221.0,1224,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1701.0,1704,-3.0,1221.0,1224,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1701.0,1704,-3.0,1221.0,1224,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1701.0,1704,-3.0,1221.0,1224,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1756.0,1759,-3.0,1276.0,1279,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1766.0,1772,-7.0,1285.0,1292,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1877.0,1883,-6.0,1397.0,1403,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,2016.0,2030,-14.0,1536.0,1549,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1435.0,1436,-2.0,954.0,956,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1435.0,1436,-2.0,954.0,956,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1435.0,1436,-2.0,954.0,956,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1555.0,1561,-6.0,1075.0,1081,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1555.0,1561,-6.0,1075.0,1081,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1555.0,1561,-6.0,1075.0,1081,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,1555.0,1561,-6.0,1075.0,1081,False
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,713.0,771,-58.0,542.0,600,False
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,713.0,771,-58.0,542.0,600,False
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,3,django,1.3.1,Direct,django,1.3.1,,,False,713.0,606,106.0,542.0,435,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,django,1.3,Direct,django,1.3,,,False,4033.0,4039,-7.0,3724.0,3730,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,django,1.3,Direct,django,1.3,,,False,3501.0,3501,-1.0,3192.0,3192,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,django,1.3,Direct,django,1.3,,,False,2253.0,2271,-18.0,1944.0,1962,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,django,1.3,Direct,django,1.3,,,False,2323.0,2330,-8.0,2014.0,2021,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,1701.0,1704,-3.0,1392.0,1395,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3,Direct,django,1.3,,,False,1701.0,1704,-3.0,1392.0,1395,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,1701.0,1704,-3.0,1392.0,1395,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,1701.0,1704,-3.0,1392.0,1395,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3,Direct,django,1.3,,,False,1756.0,1759,-3.0,1447.0,1450,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3,Direct,django,1.3,,,False,1766.0,1772,-7.0,1456.0,1463,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3,Direct,django,1.3,,,False,1877.0,1883,-6.0,1568.0,1574,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,2016.0,2030,-14.0,1707.0,1720,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,django,1.3,Direct,django,1.3,,,False,1435.0,1436,-2.0,1125.0,1127,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,1435.0,1436,-2.0,1125.0,1127,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,1435.0,1436,-2.0,1125.0,1127,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,django,1.3,Direct,django,1.3,,,False,1555.0,1561,-6.0,1246.0,1252,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,django,1.3,Direct,django,1.3,,,False,1555.0,1561,-6.0,1246.0,1252,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,1555.0,1561,-6.0,1246.0,1252,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,django,1.3,Direct,django,1.3,,,False,1555.0,1561,-6.0,1246.0,1252,False
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,713.0,771,-58.0,713.0,771,False
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,713.0,771,-58.0,713.0,771,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,django,1.3,Direct,django,1.3,,,False,480.0,805,-326.0,170.0,496,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,480.0,805,-326.0,170.0,496,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,480.0,805,-326.0,170.0,496,False
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,3,django,1.3,Direct,django,1.3,,,False,713.0,606,106.0,713.0,606,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,3,django,1.3,Direct,django,1.3,,,False,170.0,210,-40.0,170.0,210,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,170.0,210,-40.0,170.0,210,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,170.0,210,-40.0,170.0,210,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,django,1.3,Direct,django,1.3,,,False,170.0,210,-40.0,170.0,210,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,3,django,1.3,Direct,django,1.3,,,False,170.0,210,-40.0,170.0,210,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,4033.0,4039,-7.0,3552.0,3558,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,3501.0,3501,-1.0,3020.0,3020,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,2253.0,2271,-18.0,1772.0,1790,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,2323.0,2330,-8.0,1842.0,1849,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1701.0,1704,-3.0,1220.0,1223,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1701.0,1704,-3.0,1220.0,1223,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1701.0,1704,-3.0,1220.0,1223,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1701.0,1704,-3.0,1220.0,1223,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1756.0,1759,-3.0,1275.0,1278,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1766.0,1772,-7.0,1284.0,1291,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1877.0,1883,-6.0,1396.0,1402,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,2016.0,2030,-14.0,1535.0,1548,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1435.0,1436,-2.0,953.0,955,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1435.0,1436,-2.0,953.0,955,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1435.0,1436,-2.0,953.0,955,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1555.0,1561,-6.0,1074.0,1080,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1555.0,1561,-6.0,1074.0,1080,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1555.0,1561,-6.0,1074.0,1080,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,1555.0,1561,-6.0,1074.0,1080,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,480.0,805,-326.0,-1.0,324,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,480.0,805,-326.0,-1.0,324,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.7,Direct,django,1.2.7,,,False,480.0,805,-326.0,-1.0,324,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,4033.0,4039,-7.0,3553.0,3559,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,3501.0,3501,-1.0,3021.0,3021,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,2253.0,2271,-18.0,1773.0,1791,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,2323.0,2330,-8.0,1843.0,1850,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1701.0,1704,-3.0,1221.0,1224,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1701.0,1704,-3.0,1221.0,1224,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1701.0,1704,-3.0,1221.0,1224,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1701.0,1704,-3.0,1221.0,1224,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1756.0,1759,-3.0,1276.0,1279,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1766.0,1772,-7.0,1285.0,1292,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1877.0,1883,-6.0,1397.0,1403,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,2016.0,2030,-14.0,1536.0,1549,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1435.0,1436,-2.0,954.0,956,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1435.0,1436,-2.0,954.0,956,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1435.0,1436,-2.0,954.0,956,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1555.0,1561,-6.0,1075.0,1081,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1555.0,1561,-6.0,1075.0,1081,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1555.0,1561,-6.0,1075.0,1081,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,1555.0,1561,-6.0,1075.0,1081,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,480.0,805,-326.0,-1.0,325,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,480.0,805,-326.0,-1.0,325,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,480.0,805,-326.0,-1.0,325,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,481.0,519,-39.0,0.0,39,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,481.0,519,-39.0,0.0,39,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,481.0,519,-39.0,0.0,39,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,481.0,519,-39.0,0.0,39,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.6,Direct,django,1.2.6,,,False,481.0,519,-39.0,0.0,39,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,4033.0,4039,-7.0,3766.0,3772,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,3501.0,3501,-1.0,3234.0,3234,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,2253.0,2271,-18.0,1986.0,2004,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,2323.0,2330,-8.0,2056.0,2063,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1701.0,1704,-3.0,1434.0,1437,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1701.0,1704,-3.0,1434.0,1437,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1701.0,1704,-3.0,1434.0,1437,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1701.0,1704,-3.0,1434.0,1437,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1756.0,1759,-3.0,1489.0,1492,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1766.0,1772,-7.0,1498.0,1505,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1877.0,1883,-6.0,1610.0,1616,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,2016.0,2030,-14.0,1749.0,1762,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1435.0,1436,-2.0,1167.0,1169,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1435.0,1436,-2.0,1167.0,1169,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1435.0,1436,-2.0,1167.0,1169,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1555.0,1561,-6.0,1288.0,1294,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1555.0,1561,-6.0,1288.0,1294,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1555.0,1561,-6.0,1288.0,1294,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,1555.0,1561,-6.0,1288.0,1294,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,480.0,805,-326.0,212.0,538,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,480.0,805,-326.0,212.0,538,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,480.0,805,-326.0,212.0,538,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,481.0,519,-39.0,213.0,252,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,481.0,519,-39.0,213.0,252,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,481.0,519,-39.0,213.0,252,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,481.0,519,-39.0,213.0,252,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.5,Direct,django,1.2.5,,,False,481.0,519,-39.0,213.0,252,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,4033.0,4039,-7.0,3814.0,3820,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,3501.0,3501,-1.0,3282.0,3282,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,2253.0,2271,-18.0,2034.0,2052,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,2323.0,2330,-8.0,2104.0,2111,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1701.0,1704,-3.0,1482.0,1485,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1701.0,1704,-3.0,1482.0,1485,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1701.0,1704,-3.0,1482.0,1485,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1701.0,1704,-3.0,1482.0,1485,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1756.0,1759,-3.0,1537.0,1540,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1766.0,1772,-7.0,1546.0,1553,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1877.0,1883,-6.0,1658.0,1664,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,2016.0,2030,-14.0,1797.0,1810,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1435.0,1436,-2.0,1215.0,1217,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1435.0,1436,-2.0,1215.0,1217,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1435.0,1436,-2.0,1215.0,1217,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1555.0,1561,-6.0,1336.0,1342,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1555.0,1561,-6.0,1336.0,1342,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1555.0,1561,-6.0,1336.0,1342,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,1555.0,1561,-6.0,1336.0,1342,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,480.0,805,-326.0,260.0,586,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,480.0,805,-326.0,260.0,586,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,480.0,805,-326.0,260.0,586,False
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,267.0,273,-6.0,47.0,53,False
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,267.0,273,-6.0,47.0,53,False
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,267.0,273,-6.0,47.0,53,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,481.0,519,-39.0,261.0,300,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,481.0,519,-39.0,261.0,300,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,481.0,519,-39.0,261.0,300,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,481.0,519,-39.0,261.0,300,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.4,Direct,django,1.2.4,,,False,481.0,519,-39.0,261.0,300,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,4033.0,4039,-7.0,3917.0,3923,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,3501.0,3501,-1.0,3385.0,3385,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,2253.0,2271,-18.0,2137.0,2155,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,2323.0,2330,-8.0,2207.0,2214,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1701.0,1704,-3.0,1585.0,1588,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1701.0,1704,-3.0,1585.0,1588,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1701.0,1704,-3.0,1585.0,1588,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1701.0,1704,-3.0,1585.0,1588,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1756.0,1759,-3.0,1640.0,1643,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1766.0,1772,-7.0,1649.0,1656,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1877.0,1883,-6.0,1761.0,1767,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,2016.0,2030,-14.0,1900.0,1913,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1435.0,1436,-2.0,1318.0,1320,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1435.0,1436,-2.0,1318.0,1320,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1435.0,1436,-2.0,1318.0,1320,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1555.0,1561,-6.0,1439.0,1445,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1555.0,1561,-6.0,1439.0,1445,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1555.0,1561,-6.0,1439.0,1445,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,1555.0,1561,-6.0,1439.0,1445,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,480.0,805,-326.0,363.0,689,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,480.0,805,-326.0,363.0,689,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,480.0,805,-326.0,363.0,689,False
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,267.0,273,-6.0,150.0,156,False
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,267.0,273,-6.0,150.0,156,False
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,267.0,273,-6.0,150.0,156,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,481.0,519,-39.0,364.0,403,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,481.0,519,-39.0,364.0,403,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,481.0,519,-39.0,364.0,403,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,481.0,519,-39.0,364.0,403,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.3,Direct,django,1.2.3,,,False,481.0,519,-39.0,364.0,403,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,4033.0,4039,-7.0,3919.0,3925,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,3501.0,3501,-1.0,3387.0,3387,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,2253.0,2271,-18.0,2139.0,2157,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,2323.0,2330,-8.0,2209.0,2216,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1701.0,1704,-3.0,1587.0,1590,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1701.0,1704,-3.0,1587.0,1590,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1701.0,1704,-3.0,1587.0,1590,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1701.0,1704,-3.0,1587.0,1590,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1756.0,1759,-3.0,1642.0,1645,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1766.0,1772,-7.0,1651.0,1658,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1877.0,1883,-6.0,1763.0,1769,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,2016.0,2030,-14.0,1902.0,1915,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1435.0,1436,-2.0,1320.0,1322,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1435.0,1436,-2.0,1320.0,1322,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1435.0,1436,-2.0,1320.0,1322,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1555.0,1561,-6.0,1441.0,1447,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1555.0,1561,-6.0,1441.0,1447,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1555.0,1561,-6.0,1441.0,1447,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,1555.0,1561,-6.0,1441.0,1447,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,480.0,805,-326.0,366.0,691,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,480.0,805,-326.0,366.0,691,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,480.0,805,-326.0,366.0,691,False
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,267.0,273,-6.0,153.0,158,False
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,267.0,273,-6.0,153.0,158,False
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,267.0,273,-6.0,153.0,158,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,481.0,519,-39.0,367.0,405,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,481.0,519,-39.0,367.0,405,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,481.0,519,-39.0,367.0,405,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,481.0,519,-39.0,367.0,405,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.2,Direct,django,1.2.2,,,False,481.0,519,-39.0,367.0,405,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,4033.0,4039,-7.0,4026.0,4032,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,3501.0,3501,-1.0,3494.0,3494,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,2253.0,2271,-18.0,2246.0,2264,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,2323.0,2330,-8.0,2316.0,2323,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1701.0,1704,-3.0,1694.0,1697,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1701.0,1704,-3.0,1694.0,1697,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1701.0,1704,-3.0,1694.0,1697,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1701.0,1704,-3.0,1694.0,1697,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1756.0,1759,-3.0,1749.0,1752,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1766.0,1772,-7.0,1759.0,1765,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1877.0,1883,-6.0,1870.0,1876,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,2016.0,2030,-14.0,2009.0,2022,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1435.0,1436,-2.0,1428.0,1429,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1435.0,1436,-2.0,1428.0,1429,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1435.0,1436,-2.0,1428.0,1429,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1555.0,1561,-6.0,1548.0,1554,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1555.0,1561,-6.0,1548.0,1554,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1555.0,1561,-6.0,1548.0,1554,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,1555.0,1561,-6.0,1548.0,1554,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,480.0,805,-326.0,473.0,798,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,480.0,805,-326.0,473.0,798,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,480.0,805,-326.0,473.0,798,False
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,267.0,273,-6.0,260.0,265,False
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,267.0,273,-6.0,260.0,265,False
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,267.0,273,-6.0,260.0,265,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,481.0,519,-39.0,474.0,512,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,481.0,519,-39.0,474.0,512,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,481.0,519,-39.0,474.0,512,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,481.0,519,-39.0,474.0,512,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2.1,Direct,django,1.2.1,,,False,481.0,519,-39.0,474.0,512,False
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,django,1.2,Direct,django,1.2,,,False,4033.0,4039,-7.0,4033.0,4039,False
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,django,1.2,Direct,django,1.2,,,False,3501.0,3501,-1.0,3501.0,3501,False
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,django,1.2,Direct,django,1.2,,,False,2253.0,2271,-18.0,2253.0,2271,False
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,django,1.2,Direct,django,1.2,,,False,2323.0,2330,-8.0,2323.0,2330,False
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,1701.0,1704,-3.0,1701.0,1704,False
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2,Direct,django,1.2,,,False,1701.0,1704,-3.0,1701.0,1704,False
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,1701.0,1704,-3.0,1701.0,1704,False
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,1701.0,1704,-3.0,1701.0,1704,False
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2,Direct,django,1.2,,,False,1756.0,1759,-3.0,1756.0,1759,False
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2,Direct,django,1.2,,,False,1766.0,1772,-7.0,1766.0,1772,False
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2,Direct,django,1.2,,,False,1877.0,1883,-6.0,1877.0,1883,False
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,2016.0,2030,-14.0,2016.0,2030,False
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,django,1.2,Direct,django,1.2,,,False,1435.0,1436,-2.0,1435.0,1436,False
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,1435.0,1436,-2.0,1435.0,1436,False
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,1435.0,1436,-2.0,1435.0,1436,False
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,django,1.2,Direct,django,1.2,,,False,1555.0,1561,-6.0,1555.0,1561,False
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,django,1.2,Direct,django,1.2,,,False,1555.0,1561,-6.0,1555.0,1561,False
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,1555.0,1561,-6.0,1555.0,1561,False
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,django,1.2,Direct,django,1.2,,,False,1555.0,1561,-6.0,1555.0,1561,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2,Direct,django,1.2,,,False,480.0,805,-326.0,480.0,805,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,480.0,805,-326.0,480.0,805,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,480.0,805,-326.0,480.0,805,False
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2,Direct,django,1.2,,,False,267.0,273,-6.0,267.0,273,False
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,django,1.2,Direct,django,1.2,,,False,267.0,273,-6.0,267.0,273,False
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,django,1.2,Direct,django,1.2,,,False,267.0,273,-6.0,267.0,273,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,django,1.2,Direct,django,1.2,,,False,481.0,519,-39.0,481.0,519,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,481.0,519,-39.0,481.0,519,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,481.0,519,-39.0,481.0,519,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,django,1.2,Direct,django,1.2,,,False,481.0,519,-39.0,481.0,519,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,django,1.2,Direct,django,1.2,,,False,481.0,519,-39.0,481.0,519,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,django,1.1.4,Direct,django,1.1.4,,,False,-4805.0,-4006,-799.0,-261.0,538,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1.4,Direct,django,1.1.4,,,False,-4805.0,-4006,-799.0,-261.0,538,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1.4,Direct,django,1.1.4,,,False,-4805.0,-4006,-799.0,-261.0,538,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4805.0,-4006,-799.0,-213.0,586,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4805.0,-4006,-799.0,-213.0,586,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4805.0,-4006,-799.0,-213.0,586,False
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4545.0,-4539,-6.0,47.0,53,False
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4545.0,-4539,-6.0,47.0,53,False
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4545.0,-4539,-6.0,47.0,53,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4545.0,-4293,-253.0,47.0,300,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4545.0,-4293,-253.0,47.0,300,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4545.0,-4293,-253.0,47.0,300,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4545.0,-4293,-253.0,47.0,300,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,1,django,1.1.3,Direct,django,1.1.3,,,False,-4545.0,-4293,-253.0,47.0,300,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4805.0,-4006,-799.0,-4805.0,-4006,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4805.0,-4006,-799.0,-4805.0,-4006,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4805.0,-4006,-799.0,-4805.0,-4006,False
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4545.0,-4539,-6.0,-4545.0,-4539,False
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4545.0,-4539,-6.0,-4545.0,-4539,False
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4545.0,-4539,-6.0,-4545.0,-4539,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4545.0,-4293,-253.0,-4545.0,-4293,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4545.0,-4293,-253.0,-4545.0,-4293,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4545.0,-4293,-253.0,-4545.0,-4293,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4545.0,-4293,-253.0,-4545.0,-4293,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,1,django,1.1.2,Direct,django,1.1.2,,,False,-4545.0,-4293,-253.0,-4545.0,-4293,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,django,1.1,Direct,django,1.1,,,False,0.0,-4006,4005.0,0.0,-4006,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1,Direct,django,1.1,,,False,0.0,-4006,4005.0,0.0,-4006,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1,Direct,django,1.1,,,False,0.0,-4006,4005.0,0.0,-4006,False
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,1,django,1.1,Direct,django,1.1,,,False,4811.0,273,4538.0,0.0,-4539,False
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,django,1.1,Direct,django,1.1,,,False,4811.0,273,4538.0,0.0,-4539,False
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,1,django,1.1,Direct,django,1.1,,,False,4811.0,273,4538.0,0.0,-4539,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,1,django,1.1,Direct,django,1.1,,,False,0.0,-4293,4292.0,0.0,-4293,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,django,1.1,Direct,django,1.1,,,False,0.0,-4293,4292.0,0.0,-4293,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,1,django,1.1,Direct,django,1.1,,,False,0.0,-4293,4292.0,0.0,-4293,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,1,django,1.1,Direct,django,1.1,,,False,0.0,-4293,4292.0,0.0,-4293,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,1,django,1.1,Direct,django,1.1,,,False,0.0,-4293,4292.0,0.0,-4293,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,0,django,1.0.2,Direct,django,1.0.2,,,False,4811.0,805,4005.0,0.0,-4006,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,0,django,1.0.2,Direct,django,1.0.2,,,False,4811.0,805,4005.0,0.0,-4006,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,0,django,1.0.2,Direct,django,1.0.2,,,False,4811.0,805,4005.0,0.0,-4006,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,0,django,1.0.2,Direct,django,1.0.2,,,False,4811.0,519,4292.0,0.0,-4293,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,0,django,1.0.2,Direct,django,1.0.2,,,False,4811.0,519,4292.0,0.0,-4293,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,0,django,1.0.2,Direct,django,1.0.2,,,False,4811.0,519,4292.0,0.0,-4293,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,0,django,1.0.2,Direct,django,1.0.2,,,False,4811.0,519,4292.0,0.0,-4293,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,0,django,1.0.2,Direct,django,1.0.2,,,False,4811.0,519,4292.0,0.0,-4293,False
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,0,django,1.0.1,Direct,django,1.0.1,,,False,4811.0,805,4005.0,582.0,-3424,False
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,0,django,1.0.1,Direct,django,1.0.1,,,False,4811.0,805,4005.0,582.0,-3424,False
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,0,django,1.0.1,Direct,django,1.0.1,,,False,4811.0,805,4005.0,582.0,-3424,False
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,0,django,1.0.1,Direct,django,1.0.1,,,False,4811.0,519,4292.0,582.0,-3711,False
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,0,django,1.0.1,Direct,django,1.0.1,,,False,4811.0,519,4292.0,582.0,-3711,False
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,0,django,1.0.1,Direct,django,1.0.1,,,False,4811.0,519,4292.0,582.0,-3711,False
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,0,django,1.0.1,Direct,django,1.0.1,,,False,4811.0,519,4292.0,582.0,-3711,False
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,0,django,1.0.1,Direct,django,1.0.1,,,False,4811.0,519,4292.0,582.0,-3711,False
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,flask,3.0.0,Indirect,jinja2,3.1.2,>=3.1.2,,False,5693.0,5693,-1.0,622.0,622,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,0,flask,3.0.0,Indirect,werkzeug,3.0.0,>=3.0.0,,False,24.0,25,-1.0,24.0,25,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,3,flask,2.3.3,Indirect,werkzeug,2.3.7,>=2.3.7,,False,3799.0,3785,14.0,86.0,72,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,3,flask,2.3.2,Indirect,werkzeug,2.3.3,>=2.3.3,,False,3799.0,3785,14.0,191.0,177,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,3,flask,2.3.1,Direct,flask,2.3.1,,,False,5.0,6,-2.0,5.0,6,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,3,flask,2.3.1,Indirect,werkzeug,2.3.0,>=2.3.0,,False,3799.0,3785,14.0,197.0,183,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,3,flask,2.3.0,Direct,flask,2.3.0,,,False,5.0,6,-2.0,5.0,6,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,flask,2.2.4,Direct,flask,2.2.4,,,False,3610.0,3610,-1.0,6.0,7,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,flask,2.2.4,Indirect,werkzeug,2.2.3,>=2.2.2,,False,3799.0,3785,14.0,267.0,253,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,flask,2.2.3,Direct,flask,2.2.3,,,False,3610.0,3610,-1.0,75.0,75,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,flask,2.2.2,Direct,flask,2.2.2,,,False,3610.0,3610,-1.0,266.0,266,False
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,2,flask,2.2.2,Indirect,werkzeug,2.2.2,>=2.2.2,,False,3532.0,3532,-1.0,189.0,189,False
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,flask,2.2.2,Indirect,werkzeug,2.2.2,>=2.2.2,,False,3532.0,3532,-1.0,189.0,189,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,flask,2.2.2,Indirect,werkzeug,2.2.2,>=2.2.2,,False,3799.0,3785,14.0,456.0,442,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,flask,2.2.1,Direct,flask,2.2.1,,,False,3610.0,3610,-1.0,271.0,271,False
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,2,flask,2.2.1,Indirect,werkzeug,2.2.1,>=2.2.0,,False,3532.0,3532,-1.0,201.0,201,False
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,flask,2.2.1,Indirect,werkzeug,2.2.1,>=2.2.0,,False,3532.0,3532,-1.0,201.0,201,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,flask,2.2.1,Indirect,werkzeug,2.2.1,>=2.2.0,,False,3799.0,3785,14.0,468.0,454,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,flask,2.2.0,Direct,flask,2.2.0,,,False,3610.0,3610,-1.0,273.0,273,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,1,flask,2.1.3,Direct,flask,2.1.3,,,False,3610.0,3610,-1.0,292.0,292,False
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,1,flask,2.1.3,Indirect,werkzeug,2.1.2,>=2.0,,False,3532.0,3532,-1.0,291.0,292,False
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,flask,2.1.3,Indirect,werkzeug,2.1.2,>=2.0,,False,3532.0,3532,-1.0,291.0,292,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,flask,2.1.3,Indirect,werkzeug,2.1.2,>=2.0,,False,3799.0,3785,14.0,559.0,545,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,1,flask,2.1.2,Direct,flask,2.1.2,,,False,3610.0,3610,-1.0,349.0,349,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,1,flask,2.1.1,Direct,flask,2.1.1,,,False,3610.0,3610,-1.0,397.0,397,False
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,flask,2.1.1,Indirect,jinja2,3.1.1,>=3.0,,False,5693.0,5693,-1.0,656.0,656,False
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,1,flask,2.1.1,Indirect,werkzeug,2.1.0,>=2.0,,False,3532.0,3532,-1.0,322.0,323,False
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,flask,2.1.1,Indirect,werkzeug,2.1.0,>=2.0,,False,3532.0,3532,-1.0,322.0,323,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,flask,2.1.1,Indirect,werkzeug,2.1.0,>=2.0,,False,3799.0,3785,14.0,590.0,576,False
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,flask,2.1.1,Indirect,werkzeug,2.1.0,>=2.0,,False,3213.0,3266,-54.0,3.0,57,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,1,flask,2.1.0,Direct,flask,2.1.0,,,False,3610.0,3610,-1.0,399.0,399,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,flask,2.0.3,Direct,flask,2.0.3,,,False,3610.0,3610,-1.0,425.0,425,False
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,flask,2.0.3,Indirect,jinja2,3.0.3,>=3.0,,False,5693.0,5693,-1.0,792.0,792,False
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,0,flask,2.0.3,Indirect,werkzeug,2.0.3,>=2.0,,False,3532.0,3532,-1.0,371.0,371,False
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,flask,2.0.3,Indirect,werkzeug,2.0.3,>=2.0,,False,3532.0,3532,-1.0,371.0,371,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,flask,2.0.3,Indirect,werkzeug,2.0.3,>=2.0,,False,3799.0,3785,14.0,638.0,624,False
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,0,flask,2.0.3,Indirect,werkzeug,2.0.3,>=2.0,,False,3213.0,3266,-54.0,52.0,106,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,flask,2.0.2,Direct,flask,2.0.2,,,False,3610.0,3610,-1.0,575.0,575,False
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,flask,2.0.2,Indirect,jinja2,3.0.1,>=3.0,,False,5693.0,5693,-1.0,967.0,967,False
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,0,flask,2.0.2,Indirect,werkzeug,2.0.1,>=2.0,,False,3532.0,3532,-1.0,637.0,637,False
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,flask,2.0.2,Indirect,werkzeug,2.0.1,>=2.0,,False,3532.0,3532,-1.0,637.0,637,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,flask,2.0.2,Indirect,werkzeug,2.0.1,>=2.0,,False,3799.0,3785,14.0,904.0,890,False
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,0,flask,2.0.2,Indirect,werkzeug,2.0.1,>=2.0,,False,3213.0,3266,-54.0,318.0,372,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,flask,2.0.1,Direct,flask,2.0.1,,,False,3610.0,3610,-1.0,710.0,711,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,flask,2.0.0,Direct,flask,2.0.0,,,False,3610.0,3610,-1.0,720.0,720,False
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,flask,2.0.0,Indirect,jinja2,3.0.0,>=3.0,,False,5693.0,5693,-1.0,974.0,974,False
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,0,flask,2.0.0,Indirect,werkzeug,2.0.0,>=2.0,,False,3532.0,3532,-1.0,643.0,643,False
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,flask,2.0.0,Indirect,werkzeug,2.0.0,>=2.0,,False,3532.0,3532,-1.0,643.0,643,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,flask,2.0.0,Indirect,werkzeug,2.0.0,>=2.0,,False,3799.0,3785,14.0,910.0,896,False
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,0,flask,2.0.0,Indirect,werkzeug,2.0.0,>=2.0,,False,3213.0,3266,-54.0,324.0,378,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,flask,1.1.4,Direct,flask,1.1.4,,,False,3610.0,3610,-1.0,718.0,718,False
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,flask,1.1.4,Indirect,jinja2,2.11.3,"<3.0,>=2.10.1",,True,5693.0,5693,-1.0,1074.0,1074,False
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,1,1,flask,1.1.4,Indirect,werkzeug,1.0.1,"<2.0,>=0.15",,True,3532.0,3532,-1.0,1049.0,1050,False
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,1,flask,1.1.4,Indirect,werkzeug,1.0.1,"<2.0,>=0.15",,True,3532.0,3532,-1.0,1049.0,1050,False
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,1,flask,1.1.4,Indirect,werkzeug,1.0.1,"<2.0,>=0.15",,True,3799.0,3785,14.0,1317.0,1303,False
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,1,flask,1.1.4,Indirect,werkzeug,1.0.1,"<2.0,>=0.15",,True,3213.0,3266,-54.0,730.0,784,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,flask,1.1.3,Direct,flask,1.1.3,,,False,3610.0,3610,-1.0,718.0,718,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,flask,1.1.2,Direct,flask,1.1.2,,,False,3610.0,3610,-1.0,1123.0,1124,False
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,flask,1.1.2,Indirect,jinja2,2.11.1,>=2.10.1,,False,5693.0,5693,-1.0,1441.0,1441,False
83668,CVE-2020-28493,"This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",2021-02-01 20:15:00,2023-11-07 03:21:00,2024-03-19 15:39:52.395808,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,1,flask,1.1.2,Indirect,jinja2,2.11.1,>=2.10.1,,False,4618.0,4619,-2.0,366.0,368,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,flask,1.1.1,Direct,flask,1.1.1,,,False,3610.0,3610,-1.0,1393.0,1394,False
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,flask,1.1.1,Indirect,jinja2,2.10.1,>=2.10.1,,False,5693.0,5693,-1.0,1740.0,1740,False
83668,CVE-2020-28493,"This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",2021-02-01 20:15:00,2023-11-07 03:21:00,2024-03-19 15:39:52.395808,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,1,flask,1.1.1,Indirect,jinja2,2.10.1,>=2.10.1,,False,4618.0,4619,-2.0,665.0,667,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,flask,1.1.0,Direct,flask,1.1.0,,,False,3610.0,3610,-1.0,1397.0,1397,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,flask,1.0.4,Direct,flask,1.0.4,,,False,3610.0,3610,-1.0,1397.0,1397,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,flask,1.0.3,Direct,flask,1.0.3,,,False,3610.0,3610,-1.0,1445.0,1446,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,flask,1.0.2,Direct,flask,1.0.2,,,False,3610.0,3610,-1.0,1825.0,1826,False
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,0,flask,1.0.2,Indirect,jinja2,2.10,>=2.10,,False,5693.0,5693,-1.0,2254.0,2254,False
83668,CVE-2020-28493,"This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",2021-02-01 20:15:00,2023-11-07 03:21:00,2024-03-19 15:39:52.395808,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,0,flask,1.0.2,Indirect,jinja2,2.10,>=2.10,,False,4618.0,4619,-2.0,1179.0,1181,False
92679,CVE-2019-10906,"In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape.",2019-04-07 00:29:00,2023-11-07 03:02:00,2024-03-19 16:26:18.287014,3.1,3.9,4.0,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,CHANGED,HIGH,NONE,NONE,8.6,HIGH,False,1,0,flask,1.0.2,Indirect,jinja2,2.10,>=2.10,,False,3952.0,3953,-1.0,513.0,514,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,flask,1.0.1,Direct,flask,1.0.1,,,False,3610.0,3610,-1.0,1828.0,1828,False
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,flask,1.0,Direct,flask,1.0,,,False,3610.0,3610,-1.0,1831.0,1831,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,3,tornado,6.3.1,Direct,tornado,6.3.1,,,False,4677.0,4688,-12.0,22.0,33,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,3,tornado,6.3,Direct,tornado,6.3,,,False,4677.0,4688,-12.0,26.0,37,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,2,tornado,6.2,Direct,tornado,6.2,,,False,4677.0,4688,-12.0,314.0,325,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,1,tornado,6.1,Direct,tornado,6.1,,,False,4677.0,4688,-12.0,925.0,936,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,tornado,6.0.4,Direct,tornado,6.0.4,,,False,4677.0,4688,-12.0,1166.0,1177,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,tornado,6.0.3,Direct,tornado,6.0.3,,,False,4677.0,4688,-12.0,1420.0,1431,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,tornado,6.0.2,Direct,tornado,6.0.2,,,False,4677.0,4688,-12.0,1512.0,1523,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,tornado,6.0.1,Direct,tornado,6.0.1,,,False,4677.0,4688,-12.0,1532.0,1543,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,tornado,6.0,Direct,tornado,6.0,,,False,4677.0,4688,-12.0,1534.0,1545,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,1,tornado,5.1.1,Direct,tornado,5.1.1,,,False,4677.0,4688,-12.0,1700.0,1711,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,1,tornado,5.1,Direct,tornado,5.1,,,False,4677.0,4688,-12.0,1767.0,1778,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,0,tornado,5.0.2,Direct,tornado,5.0.2,,,False,4677.0,4688,-12.0,1862.0,1873,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,0,tornado,5.0.1,Direct,tornado,5.0.1,,,False,4677.0,4688,-12.0,1882.0,1893,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,0,tornado,5.0,Direct,tornado,5.0,,,False,4677.0,4688,-12.0,1895.0,1906,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,5,tornado,4.5.3,Direct,tornado,4.5.3,,,False,4677.0,4688,-12.0,1953.0,1964,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,5,tornado,4.5.2,Direct,tornado,4.5.2,,,False,4677.0,4688,-12.0,2085.0,2096,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,5,tornado,4.5.1,Direct,tornado,4.5.1,,,False,4677.0,4688,-12.0,2214.0,2225,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,5,tornado,4.5,Direct,tornado,4.5,,,False,4677.0,4688,-12.0,2218.0,2229,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,4,tornado,4.4.3,Direct,tornado,4.4.3,,,False,4677.0,4688,-12.0,2235.0,2246,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,4,tornado,4.4.2,Direct,tornado,4.4.2,,,False,4677.0,4688,-12.0,2416.0,2427,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,4,tornado,4.4.1,Direct,tornado,4.4.1,,,False,4677.0,4688,-12.0,2485.0,2496,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,4,tornado,4.4,Direct,tornado,4.4,,,False,4677.0,4688,-12.0,2493.0,2504,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,3,tornado,4.3,Direct,tornado,4.3,,,False,4677.0,4688,-12.0,2745.0,2756,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,2,tornado,4.2.1,Direct,tornado,4.2.1,,,False,4677.0,4688,-12.0,2857.0,2868,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,2,tornado,4.2,Direct,tornado,4.2,,,False,4677.0,4688,-12.0,2909.0,2920,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,1,tornado,4.1,Direct,tornado,4.1,,,False,4677.0,4688,-12.0,3017.0,3028,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,tornado,4.0.2,Direct,tornado,4.0.2,,,False,4677.0,4688,-12.0,3166.0,3178,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,tornado,4.0.1,Direct,tornado,4.0.1,,,False,4677.0,4688,-12.0,3196.0,3207,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,tornado,4.0,Direct,tornado,4.0,,,False,4677.0,4688,-12.0,3224.0,3235,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,tornado,3.2.2,Direct,tornado,3.2.2,,,False,4677.0,4688,-12.0,3266.0,3277,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,tornado,3.2.1,Direct,tornado,3.2.1,,,False,4677.0,4688,-12.0,3295.0,3306,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,2,tornado,3.2.1,Direct,tornado,3.2.1,,,False,1411.0,3472,-2061.0,29.0,2089,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,tornado,3.2,Direct,tornado,3.2,,,False,4677.0,4688,-12.0,3406.0,3417,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,2,tornado,3.2,Direct,tornado,3.2,,,False,1411.0,3472,-2061.0,140.0,2201,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,tornado,3.1.1,Direct,tornado,3.1.1,,,False,4677.0,4688,-12.0,3541.0,3552,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,1,tornado,3.1.1,Direct,tornado,3.1.1,,,False,1411.0,3472,-2061.0,275.0,2335,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,tornado,3.1,Direct,tornado,3.1,,,False,4677.0,4688,-12.0,3619.0,3630,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,1,tornado,3.1,Direct,tornado,3.1,,,False,1411.0,3472,-2061.0,353.0,2413,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,tornado,3.0.2,Direct,tornado,3.0.2,,,False,4677.0,4688,-12.0,3632.0,3643,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,0,tornado,3.0.2,Direct,tornado,3.0.2,,,False,1411.0,3472,-2061.0,366.0,2426,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,tornado,3.0.1,Direct,tornado,3.0.1,,,False,4677.0,4688,-12.0,3687.0,3698,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,0,tornado,3.0.1,Direct,tornado,3.0.1,,,False,1411.0,3472,-2061.0,421.0,2481,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,tornado,3.0,Direct,tornado,3.0,,,False,4677.0,4688,-12.0,3697.0,3708,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,0,tornado,3.0,Direct,tornado,3.0,,,False,1411.0,3472,-2061.0,431.0,2492,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,4,tornado,2.4.1,Direct,tornado,2.4.1,,,False,4677.0,4688,-12.0,3822.0,3833,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,4,tornado,2.4.1,Direct,tornado,2.4.1,,,False,1411.0,3472,-2061.0,556.0,2616,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,4,tornado,2.4,Direct,tornado,2.4,,,False,4677.0,4688,-12.0,3903.0,3914,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,4,tornado,2.4,Direct,tornado,2.4,,,False,1411.0,3472,-2061.0,637.0,2698,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,3,tornado,2.3,Direct,tornado,2.3,,,False,4677.0,4688,-12.0,3998.0,4010,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,3,tornado,2.3,Direct,tornado,2.3,,,False,1411.0,3472,-2061.0,732.0,2793,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,tornado,2.2.1,Direct,tornado,2.2.1,,,False,4677.0,4688,-12.0,3279.0,3290,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,2,tornado,2.2.1,Direct,tornado,2.2.1,,,False,1411.0,3472,-2061.0,13.0,2073,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,tornado,2.2,Direct,tornado,2.2,,,False,4677.0,4688,-12.0,3279.0,3290,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,2,tornado,2.2,Direct,tornado,2.2,,,False,1411.0,3472,-2061.0,13.0,2073,False
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,2,2,tornado,2.2,Direct,tornado,2.2,,,False,1398.0,670,728.0,-1.0,-729,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,tornado,2.1.1,Direct,tornado,2.1.1,,,False,4677.0,4688,-12.0,3279.0,3290,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,1,tornado,2.1.1,Direct,tornado,2.1.1,,,False,1411.0,3472,-2061.0,13.0,2073,False
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,2,1,tornado,2.1.1,Direct,tornado,2.1.1,,,False,1398.0,670,728.0,-1.0,-729,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,tornado,2.1,Direct,tornado,2.1,,,False,4677.0,4688,-12.0,3279.0,3290,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,1,tornado,2.1,Direct,tornado,2.1,,,False,1411.0,3472,-2061.0,13.0,2073,False
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,2,1,tornado,2.1,Direct,tornado,2.1,,,False,1398.0,670,728.0,-1.0,-729,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,tornado,2.0,Direct,tornado,2.0,,,False,4677.0,4688,-12.0,3279.0,3290,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,0,tornado,2.0,Direct,tornado,2.0,,,False,1411.0,3472,-2061.0,13.0,2073,False
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,2,0,tornado,2.0,Direct,tornado,2.0,,,False,1398.0,670,728.0,-1.0,-729,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,tornado,1.2.1,Direct,tornado,1.2.1,,,False,4677.0,4688,-12.0,3279.0,3290,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,2,tornado,1.2.1,Direct,tornado,1.2.1,,,False,1411.0,3472,-2061.0,13.0,2073,False
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,tornado,1.2.1,Direct,tornado,1.2.1,,,False,1398.0,670,728.0,-1.0,-729,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,tornado,1.2,Direct,tornado,1.2,,,False,4677.0,4688,-12.0,3279.0,3290,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,2,tornado,1.2,Direct,tornado,1.2,,,False,1411.0,3472,-2061.0,13.0,2073,False
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,tornado,1.2,Direct,tornado,1.2,,,False,1398.0,670,728.0,-1.0,-729,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,tornado,1.1.1,Direct,tornado,1.1.1,,,False,4677.0,4688,-12.0,3279.0,3290,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,1,tornado,1.1.1,Direct,tornado,1.1.1,,,False,1411.0,3472,-2061.0,13.0,2073,False
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,1,tornado,1.1.1,Direct,tornado,1.1.1,,,False,1398.0,670,728.0,-1.0,-729,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,tornado,1.1,Direct,tornado,1.1,,,False,4677.0,4688,-12.0,3279.0,3290,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,1,tornado,1.1,Direct,tornado,1.1,,,False,1411.0,3472,-2061.0,13.0,2073,False
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,1,tornado,1.1,Direct,tornado,1.1,,,False,1398.0,670,728.0,-1.0,-729,False
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,0,tornado,1.0,Direct,tornado,1.0,,,False,4677.0,4688,-12.0,4677.0,4688,False
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,0,tornado,1.0,Direct,tornado,1.0,,,False,1411.0,3472,-2061.0,1411.0,3472,False
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,0,tornado,1.0,Direct,tornado,1.0,,,False,1398.0,670,728.0,1398.0,670,False
