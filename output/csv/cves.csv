id,cve_id,description,published_at,part,last_modified_at,updated_at,cvss_version,cvss_exploitability_score,cvss_impact_score,cvss_vector_string,cvss_attack_vector,cvss_attack_complexity,cvss_privileges_required,cvss_user_interaction,cvss_scope,cvss_confidentiality_impact,cvss_integrity_impact,cvss_availability_impact,cvss_base_score,cvss_base_severity,has_cwe,major,minor,nloc_total,project,project_version,source,release,release_version,release_requirements,inherited_from,technical_lag,version_start,version_end,start_to_patched,start_to_published,published_to_patched,patched_date,exclude_version_end
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,5,0,110866.0,django,5.0.1,Direct,django,5.0.1,,,False,5.0,5.0.2,"{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:28'), 'median': Timestamp('2024-02-06 14:53:28'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:28'), 'max': Timestamp('2024-02-06 14:53:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,5,0,110825.0,django,5.0,Direct,django,5.0,,,False,5.0,5.0.2,"{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:28'), 'median': Timestamp('2024-02-06 14:53:28'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:28'), 'max': Timestamp('2024-02-06 14:53:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109667.0,django,4.2.9,Direct,django,4.2.9,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109667.0,django,4.2.8,Direct,django,4.2.8,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109651.0,django,4.2.7,Direct,django,4.2.7,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109624.0,django,4.2.6,Direct,django,4.2.6,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109624.0,django,4.2.6,Direct,django,4.2.6,,,False,4.2.,4.2.7,"{'mean': 4915.0, 'median': 4915.0, 'std': nan, 'min': 4915, 'max': 4915}","{'mean': 4916.0, 'median': 4916.0, 'std': nan, 'min': 4916, 'max': 4916}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:15'), 'median': Timestamp('2023-11-01 06:59:15'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:15'), 'max': Timestamp('2023-11-01 06:59:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109602.0,django,4.2.5,Direct,django,4.2.5,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109602.0,django,4.2.5,Direct,django,4.2.5,,,False,4.2,4.2.6,"{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:58:34'), 'median': Timestamp('2023-10-04 14:58:34'), 'std': NaT, 'min': Timestamp('2023-10-04 14:58:34'), 'max': Timestamp('2023-10-04 14:58:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109602.0,django,4.2.5,Direct,django,4.2.5,,,False,4.2.,4.2.7,"{'mean': 4915.0, 'median': 4915.0, 'std': nan, 'min': 4915, 'max': 4915}","{'mean': 4916.0, 'median': 4916.0, 'std': nan, 'min': 4916, 'max': 4916}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:15'), 'median': Timestamp('2023-11-01 06:59:15'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:15'), 'max': Timestamp('2023-11-01 06:59:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109557.0,django,4.2.4,Direct,django,4.2.4,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109557.0,django,4.2.4,Direct,django,4.2.4,,,False,4.2,4.2.5,"{'mean': 154.0, 'median': 154.0, 'std': nan, 'min': 154, 'max': 154}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:22'), 'median': Timestamp('2023-09-04 10:58:22'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:22'), 'max': Timestamp('2023-09-04 10:58:22')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109557.0,django,4.2.4,Direct,django,4.2.4,,,False,4.2,4.2.6,"{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:58:34'), 'median': Timestamp('2023-10-04 14:58:34'), 'std': NaT, 'min': Timestamp('2023-10-04 14:58:34'), 'max': Timestamp('2023-10-04 14:58:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109557.0,django,4.2.4,Direct,django,4.2.4,,,False,4.2.,4.2.7,"{'mean': 4915.0, 'median': 4915.0, 'std': nan, 'min': 4915, 'max': 4915}","{'mean': 4916.0, 'median': 4916.0, 'std': nan, 'min': 4916, 'max': 4916}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:15'), 'median': Timestamp('2023-11-01 06:59:15'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:15'), 'max': Timestamp('2023-11-01 06:59:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109546.0,django,4.2.3,Direct,django,4.2.3,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109546.0,django,4.2.3,Direct,django,4.2.3,,,False,4.2,4.2.5,"{'mean': 154.0, 'median': 154.0, 'std': nan, 'min': 154, 'max': 154}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:22'), 'median': Timestamp('2023-09-04 10:58:22'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:22'), 'max': Timestamp('2023-09-04 10:58:22')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109546.0,django,4.2.3,Direct,django,4.2.3,,,False,4.2,4.2.6,"{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:58:34'), 'median': Timestamp('2023-10-04 14:58:34'), 'std': NaT, 'min': Timestamp('2023-10-04 14:58:34'), 'max': Timestamp('2023-10-04 14:58:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109546.0,django,4.2.3,Direct,django,4.2.3,,,False,4.2.,4.2.7,"{'mean': 4915.0, 'median': 4915.0, 'std': nan, 'min': 4915, 'max': 4915}","{'mean': 4916.0, 'median': 4916.0, 'std': nan, 'min': 4916, 'max': 4916}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:15'), 'median': Timestamp('2023-11-01 06:59:15'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:15'), 'max': Timestamp('2023-11-01 06:59:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109540.0,django,4.2.2,Direct,django,4.2.2,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109540.0,django,4.2.2,Direct,django,4.2.2,,,False,4.2,4.2.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:20'), 'median': Timestamp('2023-07-03 07:57:20'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:20'), 'max': Timestamp('2023-07-03 07:57:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109540.0,django,4.2.2,Direct,django,4.2.2,,,False,4.2,4.2.5,"{'mean': 154.0, 'median': 154.0, 'std': nan, 'min': 154, 'max': 154}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:22'), 'median': Timestamp('2023-09-04 10:58:22'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:22'), 'max': Timestamp('2023-09-04 10:58:22')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109540.0,django,4.2.2,Direct,django,4.2.2,,,False,4.2,4.2.6,"{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:58:34'), 'median': Timestamp('2023-10-04 14:58:34'), 'std': NaT, 'min': Timestamp('2023-10-04 14:58:34'), 'max': Timestamp('2023-10-04 14:58:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109540.0,django,4.2.2,Direct,django,4.2.2,,,False,4.2.,4.2.7,"{'mean': 4915.0, 'median': 4915.0, 'std': nan, 'min': 4915, 'max': 4915}","{'mean': 4916.0, 'median': 4916.0, 'std': nan, 'min': 4916, 'max': 4916}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:15'), 'median': Timestamp('2023-11-01 06:59:15'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:15'), 'max': Timestamp('2023-11-01 06:59:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109511.0,django,4.2.1,Direct,django,4.2.1,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109511.0,django,4.2.1,Direct,django,4.2.1,,,False,4.2,4.2.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:20'), 'median': Timestamp('2023-07-03 07:57:20'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:20'), 'max': Timestamp('2023-07-03 07:57:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109511.0,django,4.2.1,Direct,django,4.2.1,,,False,4.2,4.2.5,"{'mean': 154.0, 'median': 154.0, 'std': nan, 'min': 154, 'max': 154}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:22'), 'median': Timestamp('2023-09-04 10:58:22'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:22'), 'max': Timestamp('2023-09-04 10:58:22')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109511.0,django,4.2.1,Direct,django,4.2.1,,,False,4.2,4.2.6,"{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:58:34'), 'median': Timestamp('2023-10-04 14:58:34'), 'std': NaT, 'min': Timestamp('2023-10-04 14:58:34'), 'max': Timestamp('2023-10-04 14:58:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109511.0,django,4.2.1,Direct,django,4.2.1,,,False,4.2.,4.2.7,"{'mean': 4915.0, 'median': 4915.0, 'std': nan, 'min': 4915, 'max': 4915}","{'mean': 4916.0, 'median': 4916.0, 'std': nan, 'min': 4916, 'max': 4916}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:15'), 'median': Timestamp('2023-11-01 06:59:15'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:15'), 'max': Timestamp('2023-11-01 06:59:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,2,109448.0,django,4.2,Direct,django,4.2,,,False,4.2,4.2.10,"{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': 309.0, 'median': 309.0, 'std': nan, 'min': 309, 'max': 309}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:53:58'), 'median': Timestamp('2024-02-06 14:53:58'), 'std': NaT, 'min': Timestamp('2024-02-06 14:53:58'), 'max': Timestamp('2024-02-06 14:53:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,2,109448.0,django,4.2,Direct,django,4.2,,,False,4.2,4.2.1,"{'mean': 30.0, 'median': 30.0, 'std': nan, 'min': 30, 'max': 30}","{'mean': 33.0, 'median': 33.0, 'std': nan, 'min': 33, 'max': 33}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:27'), 'median': Timestamp('2023-05-03 12:58:27'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:27'), 'max': Timestamp('2023-05-03 12:58:27')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109448.0,django,4.2,Direct,django,4.2,,,False,4.2,4.2.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:20'), 'median': Timestamp('2023-07-03 07:57:20'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:20'), 'max': Timestamp('2023-07-03 07:57:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109448.0,django,4.2,Direct,django,4.2,,,False,4.2,4.2.5,"{'mean': 154.0, 'median': 154.0, 'std': nan, 'min': 154, 'max': 154}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:22'), 'median': Timestamp('2023-09-04 10:58:22'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:22'), 'max': Timestamp('2023-09-04 10:58:22')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109448.0,django,4.2,Direct,django,4.2,,,False,4.2,4.2.6,"{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': 213.0, 'median': 213.0, 'std': nan, 'min': 213, 'max': 213}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:58:34'), 'median': Timestamp('2023-10-04 14:58:34'), 'std': NaT, 'min': Timestamp('2023-10-04 14:58:34'), 'max': Timestamp('2023-10-04 14:58:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,109448.0,django,4.2,Direct,django,4.2,,,False,4.2.,4.2.7,"{'mean': 4915.0, 'median': 4915.0, 'std': nan, 'min': 4915, 'max': 4915}","{'mean': 4916.0, 'median': 4916.0, 'std': nan, 'min': 4916, 'max': 4916}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:15'), 'median': Timestamp('2023-11-01 06:59:15'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:15'), 'max': Timestamp('2023-11-01 06:59:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
11929,CVE-2023-30608,"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.
",2023-04-18 22:15:00,sqlparse.,2023-06-14 18:14:00,2024-03-19 14:58:21.262833,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,2,2689.0,django,4.2,Indirect,sqlparse,0.4.3,>=0.3.1,,False,0.1.15,0.4.4,"{'mean': 2924.0, 'median': 2924.0, 'std': nan, 'min': 2924, 'max': 2924}","{'mean': 2925.0, 'median': 2925.0, 'std': nan, 'min': 2925, 'max': 2925}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-04-18 08:30:36'), 'median': Timestamp('2023-04-18 08:30:36'), 'std': NaT, 'min': Timestamp('2023-04-18 08:30:36'), 'max': Timestamp('2023-04-18 08:30:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106983.0,django,4.1.12,Direct,django,4.1.12,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106973.0,django,4.1.11,Direct,django,4.1.11,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106973.0,django,4.1.11,Direct,django,4.1.11,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106971.0,django,4.1.10,Direct,django,4.1.10,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106971.0,django,4.1.10,Direct,django,4.1.10,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106971.0,django,4.1.10,Direct,django,4.1.10,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106969.0,django,4.1.9,Direct,django,4.1.9,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106969.0,django,4.1.9,Direct,django,4.1.9,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106969.0,django,4.1.9,Direct,django,4.1.9,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106969.0,django,4.1.9,Direct,django,4.1.9,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,106946.0,django,4.1.8,Direct,django,4.1.8,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106946.0,django,4.1.8,Direct,django,4.1.8,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106946.0,django,4.1.8,Direct,django,4.1.8,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106946.0,django,4.1.8,Direct,django,4.1.8,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106946.0,django,4.1.8,Direct,django,4.1.8,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,106928.0,django,4.1.7,Direct,django,4.1.7,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106928.0,django,4.1.7,Direct,django,4.1.7,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106928.0,django,4.1.7,Direct,django,4.1.7,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106928.0,django,4.1.7,Direct,django,4.1.7,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106928.0,django,4.1.7,Direct,django,4.1.7,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106891.0,django,4.1.6,Direct,django,4.1.6,,,False,4.1,4.1.7,"{'mean': 194.0, 'median': 194.0, 'std': nan, 'min': 194, 'max': 194}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:36'), 'median': Timestamp('2023-02-14 08:25:36'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:36'), 'max': Timestamp('2023-02-14 08:25:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,106891.0,django,4.1.6,Direct,django,4.1.6,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106891.0,django,4.1.6,Direct,django,4.1.6,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106891.0,django,4.1.6,Direct,django,4.1.6,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106891.0,django,4.1.6,Direct,django,4.1.6,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106891.0,django,4.1.6,Direct,django,4.1.6,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.5,Direct,django,4.1.5,,,False,4.1,4.1.6,"{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:56'), 'median': Timestamp('2023-02-01 09:55:56'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:56'), 'max': Timestamp('2023-02-01 09:55:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.5,Direct,django,4.1.5,,,False,4.1,4.1.7,"{'mean': 194.0, 'median': 194.0, 'std': nan, 'min': 194, 'max': 194}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:36'), 'median': Timestamp('2023-02-14 08:25:36'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:36'), 'max': Timestamp('2023-02-14 08:25:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,106881.0,django,4.1.5,Direct,django,4.1.5,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.5,Direct,django,4.1.5,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.5,Direct,django,4.1.5,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.5,Direct,django,4.1.5,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.5,Direct,django,4.1.5,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.4,Direct,django,4.1.4,,,False,4.1,4.1.6,"{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:56'), 'median': Timestamp('2023-02-01 09:55:56'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:56'), 'max': Timestamp('2023-02-01 09:55:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.4,Direct,django,4.1.4,,,False,4.1,4.1.7,"{'mean': 194.0, 'median': 194.0, 'std': nan, 'min': 194, 'max': 194}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:36'), 'median': Timestamp('2023-02-14 08:25:36'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:36'), 'max': Timestamp('2023-02-14 08:25:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,106881.0,django,4.1.4,Direct,django,4.1.4,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.4,Direct,django,4.1.4,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.4,Direct,django,4.1.4,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.4,Direct,django,4.1.4,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106881.0,django,4.1.4,Direct,django,4.1.4,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106843.0,django,4.1.3,Direct,django,4.1.3,,,False,4.1,4.1.6,"{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:56'), 'median': Timestamp('2023-02-01 09:55:56'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:56'), 'max': Timestamp('2023-02-01 09:55:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106843.0,django,4.1.3,Direct,django,4.1.3,,,False,4.1,4.1.7,"{'mean': 194.0, 'median': 194.0, 'std': nan, 'min': 194, 'max': 194}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:36'), 'median': Timestamp('2023-02-14 08:25:36'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:36'), 'max': Timestamp('2023-02-14 08:25:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,106843.0,django,4.1.3,Direct,django,4.1.3,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106843.0,django,4.1.3,Direct,django,4.1.3,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106843.0,django,4.1.3,Direct,django,4.1.3,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106843.0,django,4.1.3,Direct,django,4.1.3,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106843.0,django,4.1.3,Direct,django,4.1.3,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106844.0,django,4.1.2,Direct,django,4.1.2,,,False,4.1,4.1.6,"{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:56'), 'median': Timestamp('2023-02-01 09:55:56'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:56'), 'max': Timestamp('2023-02-01 09:55:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106844.0,django,4.1.2,Direct,django,4.1.2,,,False,4.1,4.1.7,"{'mean': 194.0, 'median': 194.0, 'std': nan, 'min': 194, 'max': 194}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:36'), 'median': Timestamp('2023-02-14 08:25:36'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:36'), 'max': Timestamp('2023-02-14 08:25:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,106844.0,django,4.1.2,Direct,django,4.1.2,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106844.0,django,4.1.2,Direct,django,4.1.2,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106844.0,django,4.1.2,Direct,django,4.1.2,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106844.0,django,4.1.2,Direct,django,4.1.2,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106844.0,django,4.1.2,Direct,django,4.1.2,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106808.0,django,4.1.1,Direct,django,4.1.1,,,False,4.1,4.1.6,"{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:56'), 'median': Timestamp('2023-02-01 09:55:56'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:56'), 'max': Timestamp('2023-02-01 09:55:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106808.0,django,4.1.1,Direct,django,4.1.1,,,False,4.1,4.1.7,"{'mean': 194.0, 'median': 194.0, 'std': nan, 'min': 194, 'max': 194}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:36'), 'median': Timestamp('2023-02-14 08:25:36'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:36'), 'max': Timestamp('2023-02-14 08:25:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,106808.0,django,4.1.1,Direct,django,4.1.1,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106808.0,django,4.1.1,Direct,django,4.1.1,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106808.0,django,4.1.1,Direct,django,4.1.1,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106808.0,django,4.1.1,Direct,django,4.1.1,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106808.0,django,4.1.1,Direct,django,4.1.1,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,1,106808.0,django,4.1.1,Direct,django,4.1.1,,,False,4.1,4.1.2,"{'mean': 61.0, 'median': 61.0, 'std': nan, 'min': 61, 'max': 61}","{'mean': 73.0, 'median': 73.0, 'std': nan, 'min': 73, 'max': 73}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:23'), 'median': Timestamp('2022-10-04 07:54:23'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:23'), 'max': Timestamp('2022-10-04 07:54:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
11929,CVE-2023-30608,"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.
",2023-04-18 22:15:00,sqlparse.,2023-06-14 18:14:00,2024-03-19 14:58:21.262833,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,2670.0,django,4.1.1,Indirect,sqlparse,0.4.2,>=0.3.1,,False,0.1.15,0.4.4,"{'mean': 2924.0, 'median': 2924.0, 'std': nan, 'min': 2924, 'max': 2924}","{'mean': 2925.0, 'median': 2925.0, 'std': nan, 'min': 2925, 'max': 2925}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-04-18 08:30:36'), 'median': Timestamp('2023-04-18 08:30:36'), 'std': NaT, 'min': Timestamp('2023-04-18 08:30:36'), 'max': Timestamp('2023-04-18 08:30:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106817.0,django,4.1,Direct,django,4.1,,,False,4.1,4.1.6,"{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:56'), 'median': Timestamp('2023-02-01 09:55:56'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:56'), 'max': Timestamp('2023-02-01 09:55:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106817.0,django,4.1,Direct,django,4.1,,,False,4.1,4.1.7,"{'mean': 194.0, 'median': 194.0, 'std': nan, 'min': 194, 'max': 194}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:36'), 'median': Timestamp('2023-02-14 08:25:36'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:36'), 'max': Timestamp('2023-02-14 08:25:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,1,106817.0,django,4.1,Direct,django,4.1,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106817.0,django,4.1,Direct,django,4.1,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106817.0,django,4.1,Direct,django,4.1,,,False,4.1,4.1.11,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:19'), 'median': Timestamp('2023-09-04 10:58:19'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:19'), 'max': Timestamp('2023-09-04 10:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106817.0,django,4.1,Direct,django,4.1,,,False,4.1,4.1.12,"{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': 456.0, 'median': 456.0, 'std': nan, 'min': 456, 'max': 456}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:03'), 'median': Timestamp('2023-10-04 14:59:03'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:03'), 'max': Timestamp('2023-10-04 14:59:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,1,106817.0,django,4.1,Direct,django,4.1,,,False,4.1,4.1.13,"{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': 455.0, 'median': 455.0, 'std': nan, 'min': 455, 'max': 455}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:10'), 'median': Timestamp('2023-11-01 06:59:10'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:10'), 'max': Timestamp('2023-11-01 06:59:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,1,106817.0,django,4.1,Direct,django,4.1,,,False,4.1,4.1.2,"{'mean': 61.0, 'median': 61.0, 'std': nan, 'min': 61, 'max': 61}","{'mean': 73.0, 'median': 73.0, 'std': nan, 'min': 73, 'max': 73}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:23'), 'median': Timestamp('2022-10-04 07:54:23'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:23'), 'max': Timestamp('2022-10-04 07:54:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104422.0,django,4.0.10,Direct,django,4.0.10,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104422.0,django,4.0.10,Direct,django,4.0.10,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104388.0,django,4.0.9,Direct,django,4.0.9,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104388.0,django,4.0.9,Direct,django,4.0.9,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104388.0,django,4.0.9,Direct,django,4.0.9,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104381.0,django,4.0.8,Direct,django,4.0.8,,,False,4.0,4.0.9,"{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:52'), 'median': Timestamp('2023-02-01 09:55:52'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:52'), 'max': Timestamp('2023-02-01 09:55:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104381.0,django,4.0.8,Direct,django,4.0.8,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104381.0,django,4.0.8,Direct,django,4.0.8,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104381.0,django,4.0.8,Direct,django,4.0.8,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104381.0,django,4.0.7,Direct,django,4.0.7,,,False,4.0,4.0.9,"{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:52'), 'median': Timestamp('2023-02-01 09:55:52'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:52'), 'max': Timestamp('2023-02-01 09:55:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104381.0,django,4.0.7,Direct,django,4.0.7,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104381.0,django,4.0.7,Direct,django,4.0.7,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104381.0,django,4.0.7,Direct,django,4.0.7,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,104381.0,django,4.0.7,Direct,django,4.0.7,,,False,4.0,4.0.8,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 312.0, 'median': 312.0, 'std': nan, 'min': 312, 'max': 312}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:20'), 'median': Timestamp('2022-10-04 07:54:20'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:20'), 'max': Timestamp('2022-10-04 07:54:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104376.0,django,4.0.6,Direct,django,4.0.6,,,False,4.0,4.0.9,"{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:52'), 'median': Timestamp('2023-02-01 09:55:52'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:52'), 'max': Timestamp('2023-02-01 09:55:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104376.0,django,4.0.6,Direct,django,4.0.6,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104376.0,django,4.0.6,Direct,django,4.0.6,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104376.0,django,4.0.6,Direct,django,4.0.6,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,104376.0,django,4.0.6,Direct,django,4.0.6,,,False,4.0,4.0.7,"{'mean': 238.0, 'median': 238.0, 'std': nan, 'min': 238, 'max': 238}","{'mean': 239.0, 'median': 239.0, 'std': nan, 'min': 239, 'max': 239}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:18'), 'median': Timestamp('2022-08-03 07:38:18'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:18'), 'max': Timestamp('2022-08-03 07:38:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,104376.0,django,4.0.6,Direct,django,4.0.6,,,False,4.0,4.0.8,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 312.0, 'median': 312.0, 'std': nan, 'min': 312, 'max': 312}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:20'), 'median': Timestamp('2022-10-04 07:54:20'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:20'), 'max': Timestamp('2022-10-04 07:54:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104370.0,django,4.0.5,Direct,django,4.0.5,,,False,4.0,4.0.9,"{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:52'), 'median': Timestamp('2023-02-01 09:55:52'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:52'), 'max': Timestamp('2023-02-01 09:55:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104370.0,django,4.0.5,Direct,django,4.0.5,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104370.0,django,4.0.5,Direct,django,4.0.5,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104370.0,django,4.0.5,Direct,django,4.0.5,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104370.0,django,4.0.5,Direct,django,4.0.5,,,False,4.0,4.0.6,"{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:23'), 'median': Timestamp('2022-07-04 07:57:23'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:23'), 'max': Timestamp('2022-07-04 07:57:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,104370.0,django,4.0.5,Direct,django,4.0.5,,,False,4.0,4.0.7,"{'mean': 238.0, 'median': 238.0, 'std': nan, 'min': 238, 'max': 238}","{'mean': 239.0, 'median': 239.0, 'std': nan, 'min': 239, 'max': 239}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:18'), 'median': Timestamp('2022-08-03 07:38:18'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:18'), 'max': Timestamp('2022-08-03 07:38:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,104370.0,django,4.0.5,Direct,django,4.0.5,,,False,4.0,4.0.8,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 312.0, 'median': 312.0, 'std': nan, 'min': 312, 'max': 312}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:20'), 'median': Timestamp('2022-10-04 07:54:20'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:20'), 'max': Timestamp('2022-10-04 07:54:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104369.0,django,4.0.4,Direct,django,4.0.4,,,False,4.0,4.0.9,"{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:52'), 'median': Timestamp('2023-02-01 09:55:52'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:52'), 'max': Timestamp('2023-02-01 09:55:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104369.0,django,4.0.4,Direct,django,4.0.4,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104369.0,django,4.0.4,Direct,django,4.0.4,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104369.0,django,4.0.4,Direct,django,4.0.4,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104369.0,django,4.0.4,Direct,django,4.0.4,,,False,4.0,4.0.6,"{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:23'), 'median': Timestamp('2022-07-04 07:57:23'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:23'), 'max': Timestamp('2022-07-04 07:57:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,104369.0,django,4.0.4,Direct,django,4.0.4,,,False,4.0,4.0.7,"{'mean': 238.0, 'median': 238.0, 'std': nan, 'min': 238, 'max': 238}","{'mean': 239.0, 'median': 239.0, 'std': nan, 'min': 239, 'max': 239}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:18'), 'median': Timestamp('2022-08-03 07:38:18'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:18'), 'max': Timestamp('2022-08-03 07:38:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,104369.0,django,4.0.4,Direct,django,4.0.4,,,False,4.0,4.0.8,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 312.0, 'median': 312.0, 'std': nan, 'min': 312, 'max': 312}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:20'), 'median': Timestamp('2022-10-04 07:54:20'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:20'), 'max': Timestamp('2022-10-04 07:54:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104319.0,django,4.0.3,Direct,django,4.0.3,,,False,4.0,4.0.9,"{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:52'), 'median': Timestamp('2023-02-01 09:55:52'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:52'), 'max': Timestamp('2023-02-01 09:55:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104319.0,django,4.0.3,Direct,django,4.0.3,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104319.0,django,4.0.3,Direct,django,4.0.3,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,104319.0,django,4.0.3,Direct,django,4.0.3,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104319.0,django,4.0.3,Direct,django,4.0.3,,,False,4.0,4.0.4,"{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': 125.0, 'median': 125.0, 'std': nan, 'min': 125, 'max': 125}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:53:01'), 'median': Timestamp('2022-04-11 07:53:01'), 'std': NaT, 'min': Timestamp('2022-04-11 07:53:01'), 'max': Timestamp('2022-04-11 07:53:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104319.0,django,4.0.3,Direct,django,4.0.3,,,False,4.0,4.0.4,"{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': 125.0, 'median': 125.0, 'std': nan, 'min': 125, 'max': 125}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:53:01'), 'median': Timestamp('2022-04-11 07:53:01'), 'std': NaT, 'min': Timestamp('2022-04-11 07:53:01'), 'max': Timestamp('2022-04-11 07:53:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,104319.0,django,4.0.3,Direct,django,4.0.3,,,False,4.0,4.0.6,"{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:23'), 'median': Timestamp('2022-07-04 07:57:23'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:23'), 'max': Timestamp('2022-07-04 07:57:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,104319.0,django,4.0.3,Direct,django,4.0.3,,,False,4.0,4.0.7,"{'mean': 238.0, 'median': 238.0, 'std': nan, 'min': 238, 'max': 238}","{'mean': 239.0, 'median': 239.0, 'std': nan, 'min': 239, 'max': 239}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:18'), 'median': Timestamp('2022-08-03 07:38:18'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:18'), 'max': Timestamp('2022-08-03 07:38:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,104319.0,django,4.0.3,Direct,django,4.0.3,,,False,4.0,4.0.8,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 312.0, 'median': 312.0, 'std': nan, 'min': 312, 'max': 312}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:20'), 'median': Timestamp('2022-10-04 07:54:20'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:20'), 'max': Timestamp('2022-10-04 07:54:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92866.0,django,4.0.2,Direct,django,4.0.2,,,False,4.0,4.0.9,"{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:52'), 'median': Timestamp('2023-02-01 09:55:52'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:52'), 'max': Timestamp('2023-02-01 09:55:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92866.0,django,4.0.2,Direct,django,4.0.2,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92866.0,django,4.0.2,Direct,django,4.0.2,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92866.0,django,4.0.2,Direct,django,4.0.2,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92866.0,django,4.0.2,Direct,django,4.0.2,,,False,4.0,4.0.4,"{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': 125.0, 'median': 125.0, 'std': nan, 'min': 125, 'max': 125}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:53:01'), 'median': Timestamp('2022-04-11 07:53:01'), 'std': NaT, 'min': Timestamp('2022-04-11 07:53:01'), 'max': Timestamp('2022-04-11 07:53:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92866.0,django,4.0.2,Direct,django,4.0.2,,,False,4.0,4.0.4,"{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': 125.0, 'median': 125.0, 'std': nan, 'min': 125, 'max': 125}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:53:01'), 'median': Timestamp('2022-04-11 07:53:01'), 'std': NaT, 'min': Timestamp('2022-04-11 07:53:01'), 'max': Timestamp('2022-04-11 07:53:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92866.0,django,4.0.2,Direct,django,4.0.2,,,False,4.0,4.0.6,"{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:23'), 'median': Timestamp('2022-07-04 07:57:23'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:23'), 'max': Timestamp('2022-07-04 07:57:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,92866.0,django,4.0.2,Direct,django,4.0.2,,,False,4.0,4.0.7,"{'mean': 238.0, 'median': 238.0, 'std': nan, 'min': 238, 'max': 238}","{'mean': 239.0, 'median': 239.0, 'std': nan, 'min': 239, 'max': 239}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:18'), 'median': Timestamp('2022-08-03 07:38:18'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:18'), 'max': Timestamp('2022-08-03 07:38:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,92866.0,django,4.0.2,Direct,django,4.0.2,,,False,4.0,4.0.8,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 312.0, 'median': 312.0, 'std': nan, 'min': 312, 'max': 312}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:20'), 'median': Timestamp('2022-10-04 07:54:20'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:20'), 'max': Timestamp('2022-10-04 07:54:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.0.9,"{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:52'), 'median': Timestamp('2023-02-01 09:55:52'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:52'), 'max': Timestamp('2023-02-01 09:55:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.0.2,"{'mean': 55.0, 'median': 55.0, 'std': nan, 'min': 55, 'max': 55}","{'mean': 57.0, 'median': 57.0, 'std': nan, 'min': 57, 'max': 57}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:23'), 'median': Timestamp('2022-02-01 07:56:23'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:23'), 'max': Timestamp('2022-02-01 07:56:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.0.2,"{'mean': 55.0, 'median': 55.0, 'std': nan, 'min': 55, 'max': 55}","{'mean': 57.0, 'median': 57.0, 'std': nan, 'min': 57, 'max': 57}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:23'), 'median': Timestamp('2022-02-01 07:56:23'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:23'), 'max': Timestamp('2022-02-01 07:56:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.0.4,"{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': 125.0, 'median': 125.0, 'std': nan, 'min': 125, 'max': 125}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:53:01'), 'median': Timestamp('2022-04-11 07:53:01'), 'std': NaT, 'min': Timestamp('2022-04-11 07:53:01'), 'max': Timestamp('2022-04-11 07:53:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.0.4,"{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': 125.0, 'median': 125.0, 'std': nan, 'min': 125, 'max': 125}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:53:01'), 'median': Timestamp('2022-04-11 07:53:01'), 'std': NaT, 'min': Timestamp('2022-04-11 07:53:01'), 'max': Timestamp('2022-04-11 07:53:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.0.6,"{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:23'), 'median': Timestamp('2022-07-04 07:57:23'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:23'), 'max': Timestamp('2022-07-04 07:57:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.0.7,"{'mean': 238.0, 'median': 238.0, 'std': nan, 'min': 238, 'max': 238}","{'mean': 239.0, 'median': 239.0, 'std': nan, 'min': 239, 'max': 239}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:18'), 'median': Timestamp('2022-08-03 07:38:18'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:18'), 'max': Timestamp('2022-08-03 07:38:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,92861.0,django,4.0.1,Direct,django,4.0.1,,,False,4.0,4.0.8,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 312.0, 'median': 312.0, 'std': nan, 'min': 312, 'max': 312}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:20'), 'median': Timestamp('2022-10-04 07:54:20'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:20'), 'max': Timestamp('2022-10-04 07:54:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.9,"{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': 421.0, 'median': 421.0, 'std': nan, 'min': 421, 'max': 421}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:52'), 'median': Timestamp('2023-02-01 09:55:52'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:52'), 'max': Timestamp('2023-02-01 09:55:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 434.0, 'median': 434.0, 'std': nan, 'min': 434, 'max': 434}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:32'), 'median': Timestamp('2023-02-14 08:25:32'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:32'), 'max': Timestamp('2023-02-14 08:25:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.1.9,"{'mean': 512.0, 'median': 512.0, 'std': nan, 'min': 512, 'max': 512}","{'mean': 515.0, 'median': 515.0, 'std': nan, 'min': 515, 'max': 515}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:23'), 'median': Timestamp('2023-05-03 12:58:23'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:23'), 'max': Timestamp('2023-05-03 12:58:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.1.10,"{'mean': 572.0, 'median': 572.0, 'std': nan, 'min': 572, 'max': 572}","{'mean': 573.0, 'median': 573.0, 'std': nan, 'min': 573, 'max': 573}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:16'), 'median': Timestamp('2023-07-03 07:57:16'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:16'), 'max': Timestamp('2023-07-03 07:57:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.2,"{'mean': 55.0, 'median': 55.0, 'std': nan, 'min': 55, 'max': 55}","{'mean': 57.0, 'median': 57.0, 'std': nan, 'min': 57, 'max': 57}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:23'), 'median': Timestamp('2022-02-01 07:56:23'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:23'), 'max': Timestamp('2022-02-01 07:56:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.2,"{'mean': 55.0, 'median': 55.0, 'std': nan, 'min': 55, 'max': 55}","{'mean': 57.0, 'median': 57.0, 'std': nan, 'min': 57, 'max': 57}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:23'), 'median': Timestamp('2022-02-01 07:56:23'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:23'), 'max': Timestamp('2022-02-01 07:56:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.4,"{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': 125.0, 'median': 125.0, 'std': nan, 'min': 125, 'max': 125}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:53:01'), 'median': Timestamp('2022-04-11 07:53:01'), 'std': NaT, 'min': Timestamp('2022-04-11 07:53:01'), 'max': Timestamp('2022-04-11 07:53:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.4,"{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': 125.0, 'median': 125.0, 'std': nan, 'min': 125, 'max': 125}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:53:01'), 'median': Timestamp('2022-04-11 07:53:01'), 'std': NaT, 'min': Timestamp('2022-04-11 07:53:01'), 'max': Timestamp('2022-04-11 07:53:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.6,"{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:23'), 'median': Timestamp('2022-07-04 07:57:23'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:23'), 'max': Timestamp('2022-07-04 07:57:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.7,"{'mean': 238.0, 'median': 238.0, 'std': nan, 'min': 238, 'max': 238}","{'mean': 239.0, 'median': 239.0, 'std': nan, 'min': 239, 'max': 239}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:18'), 'median': Timestamp('2022-08-03 07:38:18'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:18'), 'max': Timestamp('2022-08-03 07:38:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.8,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 312.0, 'median': 312.0, 'std': nan, 'min': 312, 'max': 312}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:20'), 'median': Timestamp('2022-10-04 07:54:20'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:20'), 'max': Timestamp('2022-10-04 07:54:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.1,"{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:25'), 'median': Timestamp('2022-01-04 09:53:25'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:25'), 'max': Timestamp('2022-01-04 09:53:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.1,"{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:25'), 'median': Timestamp('2022-01-04 09:53:25'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:25'), 'max': Timestamp('2022-01-04 09:53:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,4,0,92830.0,django,4.0,Direct,django,4.0,,,False,4.0,4.0.1,"{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:25'), 'median': Timestamp('2022-01-04 09:53:25'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:25'), 'max': Timestamp('2022-01-04 09:53:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91343.0,django,3.2.23,Direct,django,3.2.23,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91340.0,django,3.2.22,Direct,django,3.2.22,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91340.0,django,3.2.22,Direct,django,3.2.22,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91330.0,django,3.2.21,Direct,django,3.2.21,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91330.0,django,3.2.21,Direct,django,3.2.21,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91330.0,django,3.2.21,Direct,django,3.2.21,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91328.0,django,3.2.20,Direct,django,3.2.20,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91328.0,django,3.2.20,Direct,django,3.2.20,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91328.0,django,3.2.20,Direct,django,3.2.20,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91328.0,django,3.2.20,Direct,django,3.2.20,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91326.0,django,3.2.19,Direct,django,3.2.19,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91326.0,django,3.2.19,Direct,django,3.2.19,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91326.0,django,3.2.19,Direct,django,3.2.19,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91326.0,django,3.2.19,Direct,django,3.2.19,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91326.0,django,3.2.19,Direct,django,3.2.19,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91303.0,django,3.2.18,Direct,django,3.2.18,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91303.0,django,3.2.18,Direct,django,3.2.18,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91303.0,django,3.2.18,Direct,django,3.2.18,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91303.0,django,3.2.18,Direct,django,3.2.18,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91303.0,django,3.2.18,Direct,django,3.2.18,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91303.0,django,3.2.18,Direct,django,3.2.18,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91270.0,django,3.2.17,Direct,django,3.2.17,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91270.0,django,3.2.17,Direct,django,3.2.17,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91270.0,django,3.2.17,Direct,django,3.2.17,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91270.0,django,3.2.17,Direct,django,3.2.17,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91270.0,django,3.2.17,Direct,django,3.2.17,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91270.0,django,3.2.17,Direct,django,3.2.17,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91270.0,django,3.2.17,Direct,django,3.2.17,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91262.0,django,3.2.16,Direct,django,3.2.16,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.16,Direct,django,3.2.16,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.16,Direct,django,3.2.16,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91262.0,django,3.2.16,Direct,django,3.2.16,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.16,Direct,django,3.2.16,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.16,Direct,django,3.2.16,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.16,Direct,django,3.2.16,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.16,Direct,django,3.2.16,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91262.0,django,3.2.15,Direct,django,3.2.15,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.15,Direct,django,3.2.15,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.15,Direct,django,3.2.15,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91262.0,django,3.2.15,Direct,django,3.2.15,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.15,Direct,django,3.2.15,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.15,Direct,django,3.2.15,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.15,Direct,django,3.2.15,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91262.0,django,3.2.15,Direct,django,3.2.15,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91262.0,django,3.2.15,Direct,django,3.2.15,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91249.0,django,3.2.14,Direct,django,3.2.14,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91243.0,django,3.2.13,Direct,django,3.2.13,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91211.0,django,3.2.12,Direct,django,3.2.12,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91207.0,django,3.2.11,Direct,django,3.2.11,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91181.0,django,3.2.10,Direct,django,3.2.10,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91166.0,django,3.2.9,Direct,django,3.2.9,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91160.0,django,3.2.8,Direct,django,3.2.8,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91156.0,django,3.2.7,Direct,django,3.2.7,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
11929,CVE-2023-30608,"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.
",2023-04-18 22:15:00,sqlparse.,2023-06-14 18:14:00,2024-03-19 14:58:21.262833,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,2667.0,django,3.2.7,Indirect,sqlparse,0.4.1,>=0.3.1,,False,0.1.15,0.4.4,"{'mean': 2924.0, 'median': 2924.0, 'std': nan, 'min': 2924, 'max': 2924}","{'mean': 2925.0, 'median': 2925.0, 'std': nan, 'min': 2925, 'max': 2925}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-04-18 08:30:36'), 'median': Timestamp('2023-04-18 08:30:36'), 'std': NaT, 'min': Timestamp('2023-04-18 08:30:36'), 'max': Timestamp('2023-04-18 08:30:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62018,CVE-2021-32839,sqlparse is a non-validating SQL parser module for Python. In sqlparse versions 0.4.0 and 0.4.1 there is a regular Expression Denial of Service in sqlparse vulnerability. The regular expression may cause exponential backtracking on strings containing many repetitions of '\r\n' in SQL comments. Only the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround don't use the sqlformat.format function with keyword strip_comments=True or the --strip-comments command line flag when using the sqlformat command line tool. The issues has been fixed in sqlparse 0.4.2.,2021-09-20 17:15:00,sqlparse.sqlformat,2021-09-29 15:04:00,2024-03-19 15:25:53.794685,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,2667.0,django,3.2.7,Indirect,sqlparse,0.4.1,>=0.3.1,,False,0.4.0,0.4.2,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 348.0, 'median': 348.0, 'std': nan, 'min': 348, 'max': 348}","{'mean': -11.0, 'median': -11.0, 'std': nan, 'min': -11, 'max': -11}","{'mean': Timestamp('2021-09-10 06:51:56'), 'median': Timestamp('2021-09-10 06:51:56'), 'std': NaT, 'min': Timestamp('2021-09-10 06:51:56'), 'max': Timestamp('2021-09-10 06:51:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91155.0,django,3.2.6,Direct,django,3.2.6,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91145.0,django,3.2.5,Direct,django,3.2.5,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.5,"{'mean': 85.0, 'median': 85.0, 'std': nan, 'min': 85, 'max': 85}","{'mean': 87.0, 'median': 87.0, 'std': nan, 'min': 87, 'max': 87}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:40:00'), 'median': Timestamp('2021-07-01 07:40:00'), 'std': NaT, 'min': Timestamp('2021-07-01 07:40:00'), 'max': Timestamp('2021-07-01 07:40:00')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91126.0,django,3.2.4,Direct,django,3.2.4,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2.0,3.2.4,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:54:01'), 'median': Timestamp('2021-06-02 08:54:01'), 'std': NaT, 'min': Timestamp('2021-06-02 08:54:01'), 'max': Timestamp('2021-06-02 08:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.4,"{'mean': 56.0, 'median': 56.0, 'std': nan, 'min': 56, 'max': 56}","{'mean': 63.0, 'median': 63.0, 'std': nan, 'min': 63, 'max': 63}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:54:01'), 'median': Timestamp('2021-06-02 08:54:01'), 'std': NaT, 'min': Timestamp('2021-06-02 08:54:01'), 'max': Timestamp('2021-06-02 08:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.5,"{'mean': 85.0, 'median': 85.0, 'std': nan, 'min': 85, 'max': 85}","{'mean': 87.0, 'median': 87.0, 'std': nan, 'min': 87, 'max': 87}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:40:00'), 'median': Timestamp('2021-07-01 07:40:00'), 'std': NaT, 'min': Timestamp('2021-07-01 07:40:00'), 'max': Timestamp('2021-07-01 07:40:00')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91106.0,django,3.2.3,Direct,django,3.2.3,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2.0,3.2.4,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:54:01'), 'median': Timestamp('2021-06-02 08:54:01'), 'std': NaT, 'min': Timestamp('2021-06-02 08:54:01'), 'max': Timestamp('2021-06-02 08:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.4,"{'mean': 56.0, 'median': 56.0, 'std': nan, 'min': 56, 'max': 56}","{'mean': 63.0, 'median': 63.0, 'std': nan, 'min': 63, 'max': 63}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:54:01'), 'median': Timestamp('2021-06-02 08:54:01'), 'std': NaT, 'min': Timestamp('2021-06-02 08:54:01'), 'max': Timestamp('2021-06-02 08:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.5,"{'mean': 85.0, 'median': 85.0, 'std': nan, 'min': 85, 'max': 85}","{'mean': 87.0, 'median': 87.0, 'std': nan, 'min': 87, 'max': 87}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:40:00'), 'median': Timestamp('2021-07-01 07:40:00'), 'std': NaT, 'min': Timestamp('2021-07-01 07:40:00'), 'max': Timestamp('2021-07-01 07:40:00')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91096.0,django,3.2.2,Direct,django,3.2.2,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.2,"{'mean': 29.0, 'median': 29.0, 'std': nan, 'min': 29, 'max': 29}","{'mean': 30.0, 'median': 30.0, 'std': nan, 'min': 30, 'max': 30}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:00'), 'median': Timestamp('2021-05-06 07:40:00'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:00'), 'max': Timestamp('2021-05-06 07:40:00')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2.0,3.2.4,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:54:01'), 'median': Timestamp('2021-06-02 08:54:01'), 'std': NaT, 'min': Timestamp('2021-06-02 08:54:01'), 'max': Timestamp('2021-06-02 08:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.4,"{'mean': 56.0, 'median': 56.0, 'std': nan, 'min': 56, 'max': 56}","{'mean': 63.0, 'median': 63.0, 'std': nan, 'min': 63, 'max': 63}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:54:01'), 'median': Timestamp('2021-06-02 08:54:01'), 'std': NaT, 'min': Timestamp('2021-06-02 08:54:01'), 'max': Timestamp('2021-06-02 08:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.5,"{'mean': 85.0, 'median': 85.0, 'std': nan, 'min': 85, 'max': 85}","{'mean': 87.0, 'median': 87.0, 'std': nan, 'min': 87, 'max': 87}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:40:00'), 'median': Timestamp('2021-07-01 07:40:00'), 'std': NaT, 'min': Timestamp('2021-07-01 07:40:00'), 'max': Timestamp('2021-07-01 07:40:00')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91094.0,django,3.2.1,Direct,django,3.2.1,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,django.template,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.24,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-02-06 14:54:24'), 'median': Timestamp('2024-02-06 14:54:24'), 'std': NaT, 'min': Timestamp('2024-02-06 14:54:24'), 'max': Timestamp('2024-02-06 14:54:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,-,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.17,"{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': 666.0, 'median': 666.0, 'std': nan, 'min': 666, 'max': 666}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-01 09:55:48'), 'median': Timestamp('2023-02-01 09:55:48'), 'std': NaT, 'min': Timestamp('2023-02-01 09:55:48'), 'max': Timestamp('2023-02-01 09:55:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,django.forms,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.18,"{'mean': 678.0, 'median': 678.0, 'std': nan, 'min': 678, 'max': 678}","{'mean': 679.0, 'median': 679.0, 'std': nan, 'min': 679, 'max': 679}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 08:25:28'), 'median': Timestamp('2023-02-14 08:25:28'), 'std': NaT, 'min': Timestamp('2023-02-14 08:25:28'), 'max': Timestamp('2023-02-14 08:25:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,django.forms,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.19,"{'mean': 757.0, 'median': 757.0, 'std': nan, 'min': 757, 'max': 757}","{'mean': 760.0, 'median': 760.0, 'std': nan, 'min': 760, 'max': 760}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2023-05-03 12:58:19'), 'median': Timestamp('2023-05-03 12:58:19'), 'std': NaT, 'min': Timestamp('2023-05-03 12:58:19'), 'max': Timestamp('2023-05-03 12:58:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,django.core,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.20,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 818.0, 'median': 818.0, 'std': nan, 'min': 818, 'max': 818}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-07-03 07:57:12'), 'median': Timestamp('2023-07-03 07:57:12'), 'std': NaT, 'min': Timestamp('2023-07-03 07:57:12'), 'max': Timestamp('2023-07-03 07:57:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,django.utils,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.21,"{'mean': 881.0, 'median': 881.0, 'std': nan, 'min': 881, 'max': 881}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -60.0, 'median': -60.0, 'std': nan, 'min': -60, 'max': -60}","{'mean': Timestamp('2023-09-04 10:58:15'), 'median': Timestamp('2023-09-04 10:58:15'), 'std': NaT, 'min': Timestamp('2023-09-04 10:58:15'), 'max': Timestamp('2023-09-04 10:58:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,django.utils,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.22,"{'mean': 911.0, 'median': 911.0, 'std': nan, 'min': 911, 'max': 911}","{'mean': 940.0, 'median': 940.0, 'std': nan, 'min': 940, 'max': 940}","{'mean': -30.0, 'median': -30.0, 'std': nan, 'min': -30, 'max': -30}","{'mean': Timestamp('2023-10-04 14:59:53'), 'median': Timestamp('2023-10-04 14:59:53'), 'std': NaT, 'min': Timestamp('2023-10-04 14:59:53'), 'max': Timestamp('2023-10-04 14:59:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,django.contrib.auth,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.23,"{'mean': 938.0, 'median': 938.0, 'std': nan, 'min': 938, 'max': 938}","{'mean': 939.0, 'median': 939.0, 'std': nan, 'min': 939, 'max': 939}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-11-01 06:59:05'), 'median': Timestamp('2023-11-01 06:59:05'), 'std': NaT, 'min': Timestamp('2023-11-01 06:59:05'), 'max': Timestamp('2023-11-01 06:59:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.12,"{'mean': 300.0, 'median': 300.0, 'std': nan, 'min': 300, 'max': 300}","{'mean': 302.0, 'median': 302.0, 'std': nan, 'min': 302, 'max': 302}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:19'), 'median': Timestamp('2022-02-01 07:56:19'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:19'), 'max': Timestamp('2022-02-01 07:56:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.13,"{'mean': 369.0, 'median': 369.0, 'std': nan, 'min': 369, 'max': 369}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:57'), 'median': Timestamp('2022-04-11 07:52:57'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:57'), 'max': Timestamp('2022-04-11 07:52:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,django.db,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.14,"{'mean': 453.0, 'median': 453.0, 'std': nan, 'min': 453, 'max': 453}","{'mean': 454.0, 'median': 454.0, 'std': nan, 'min': 454, 'max': 454}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-07-04 07:57:18'), 'median': Timestamp('2022-07-04 07:57:18'), 'std': NaT, 'min': Timestamp('2022-07-04 07:57:18'), 'max': Timestamp('2022-07-04 07:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,django.core,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 484.0, 'median': 484.0, 'std': nan, 'min': 484, 'max': 484}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-08-03 07:38:15'), 'median': Timestamp('2022-08-03 07:38:15'), 'std': NaT, 'min': Timestamp('2022-08-03 07:38:15'), 'max': Timestamp('2022-08-03 07:38:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,-,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.16,"{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': 557.0, 'median': 557.0, 'std': nan, 'min': 557, 'max': 557}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2022-10-04 07:54:16'), 'median': Timestamp('2022-10-04 07:54:16'), 'std': NaT, 'min': Timestamp('2022-10-04 07:54:16'), 'max': Timestamp('2022-10-04 07:54:16')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.1,"{'mean': 27.0, 'median': 27.0, 'std': nan, 'min': 27, 'max': 27}","{'mean': 29.0, 'median': 29.0, 'std': nan, 'min': 29, 'max': 29}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:40'), 'median': Timestamp('2021-05-04 08:47:40'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:40'), 'max': Timestamp('2021-05-04 08:47:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.2,"{'mean': 29.0, 'median': 29.0, 'std': nan, 'min': 29, 'max': 29}","{'mean': 30.0, 'median': 30.0, 'std': nan, 'min': 30, 'max': 30}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:00'), 'median': Timestamp('2021-05-06 07:40:00'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:00'), 'max': Timestamp('2021-05-06 07:40:00')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2.0,3.2.4,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:54:01'), 'median': Timestamp('2021-06-02 08:54:01'), 'std': NaT, 'min': Timestamp('2021-06-02 08:54:01'), 'max': Timestamp('2021-06-02 08:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.4,"{'mean': 56.0, 'median': 56.0, 'std': nan, 'min': 56, 'max': 56}","{'mean': 63.0, 'median': 63.0, 'std': nan, 'min': 63, 'max': 63}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:54:01'), 'median': Timestamp('2021-06-02 08:54:01'), 'std': NaT, 'min': Timestamp('2021-06-02 08:54:01'), 'max': Timestamp('2021-06-02 08:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.5,"{'mean': 85.0, 'median': 85.0, 'std': nan, 'min': 85, 'max': 85}","{'mean': 87.0, 'median': 87.0, 'std': nan, 'min': 87, 'max': 87}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:40:00'), 'median': Timestamp('2021-07-01 07:40:00'), 'std': NaT, 'min': Timestamp('2021-07-01 07:40:00'), 'max': Timestamp('2021-07-01 07:40:00')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.10,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:50'), 'median': Timestamp('2021-12-07 07:34:50'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:50'), 'max': Timestamp('2021-12-07 07:34:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,2,91048.0,django,3.2,Direct,django,3.2,,,False,3.2,3.2.11,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:21'), 'median': Timestamp('2022-01-04 09:53:21'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:21'), 'max': Timestamp('2022-01-04 09:53:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88437.0,django,3.1.13,Direct,django,3.1.13,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88433.0,django,3.1.12,Direct,django,3.1.12,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88433.0,django,3.1.12,Direct,django,3.1.12,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88423.0,django,3.1.11,Direct,django,3.1.11,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88423.0,django,3.1.11,Direct,django,3.1.11,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88423.0,django,3.1.11,Direct,django,3.1.11,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88423.0,django,3.1.11,Direct,django,3.1.11,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88416.0,django,3.1.10,Direct,django,3.1.10,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88416.0,django,3.1.10,Direct,django,3.1.10,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88416.0,django,3.1.10,Direct,django,3.1.10,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88416.0,django,3.1.10,Direct,django,3.1.10,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88413.0,django,3.1.9,Direct,django,3.1.9,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88413.0,django,3.1.9,Direct,django,3.1.9,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88413.0,django,3.1.9,Direct,django,3.1.9,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88413.0,django,3.1.9,Direct,django,3.1.9,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88413.0,django,3.1.9,Direct,django,3.1.9,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88388.0,django,3.1.8,Direct,django,3.1.8,,,False,3.1,3.1.9,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:31'), 'median': Timestamp('2021-05-04 08:47:31'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:31'), 'max': Timestamp('2021-05-04 08:47:31')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88388.0,django,3.1.8,Direct,django,3.1.8,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88388.0,django,3.1.8,Direct,django,3.1.8,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88388.0,django,3.1.8,Direct,django,3.1.8,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88388.0,django,3.1.8,Direct,django,3.1.8,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88388.0,django,3.1.8,Direct,django,3.1.8,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,88384.0,django,3.1.7,Direct,django,3.1.7,,,False,3.1,3.1.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:59'), 'median': Timestamp('2021-04-06 07:34:59'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:59'), 'max': Timestamp('2021-04-06 07:34:59')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88384.0,django,3.1.7,Direct,django,3.1.7,,,False,3.1,3.1.9,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:31'), 'median': Timestamp('2021-05-04 08:47:31'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:31'), 'max': Timestamp('2021-05-04 08:47:31')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88384.0,django,3.1.7,Direct,django,3.1.7,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88384.0,django,3.1.7,Direct,django,3.1.7,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88384.0,django,3.1.7,Direct,django,3.1.7,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88384.0,django,3.1.7,Direct,django,3.1.7,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88384.0,django,3.1.7,Direct,django,3.1.7,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,88381.0,django,3.1.6,Direct,django,3.1.6,,,False,3.1,3.1.7,"{'mean': 199.0, 'median': 199.0, 'std': nan, 'min': 199, 'max': 199}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:09'), 'median': Timestamp('2021-02-19 09:08:09'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:09'), 'max': Timestamp('2021-02-19 09:08:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,88381.0,django,3.1.6,Direct,django,3.1.6,,,False,3.1,3.1.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:59'), 'median': Timestamp('2021-04-06 07:34:59'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:59'), 'max': Timestamp('2021-04-06 07:34:59')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88381.0,django,3.1.6,Direct,django,3.1.6,,,False,3.1,3.1.9,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:31'), 'median': Timestamp('2021-05-04 08:47:31'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:31'), 'max': Timestamp('2021-05-04 08:47:31')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88381.0,django,3.1.6,Direct,django,3.1.6,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88381.0,django,3.1.6,Direct,django,3.1.6,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88381.0,django,3.1.6,Direct,django,3.1.6,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88381.0,django,3.1.6,Direct,django,3.1.6,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88381.0,django,3.1.6,Direct,django,3.1.6,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,88372.0,django,3.1.5,Direct,django,3.1.5,,,False,3.1,3.1.7,"{'mean': 199.0, 'median': 199.0, 'std': nan, 'min': 199, 'max': 199}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:09'), 'median': Timestamp('2021-02-19 09:08:09'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:09'), 'max': Timestamp('2021-02-19 09:08:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,88372.0,django,3.1.5,Direct,django,3.1.5,,,False,3.1,3.1.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:59'), 'median': Timestamp('2021-04-06 07:34:59'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:59'), 'max': Timestamp('2021-04-06 07:34:59')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88372.0,django,3.1.5,Direct,django,3.1.5,,,False,3.1,3.1.9,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:31'), 'median': Timestamp('2021-05-04 08:47:31'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:31'), 'max': Timestamp('2021-05-04 08:47:31')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88372.0,django,3.1.5,Direct,django,3.1.5,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,88372.0,django,3.1.5,Direct,django,3.1.5,,,False,3.1,3.1.6,"{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:24'), 'median': Timestamp('2021-02-01 09:28:24'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:24'), 'max': Timestamp('2021-02-01 09:28:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88372.0,django,3.1.5,Direct,django,3.1.5,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88372.0,django,3.1.5,Direct,django,3.1.5,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88372.0,django,3.1.5,Direct,django,3.1.5,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88372.0,django,3.1.5,Direct,django,3.1.5,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,88366.0,django,3.1.4,Direct,django,3.1.4,,,False,3.1,3.1.7,"{'mean': 199.0, 'median': 199.0, 'std': nan, 'min': 199, 'max': 199}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:09'), 'median': Timestamp('2021-02-19 09:08:09'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:09'), 'max': Timestamp('2021-02-19 09:08:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,88366.0,django,3.1.4,Direct,django,3.1.4,,,False,3.1,3.1.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:59'), 'median': Timestamp('2021-04-06 07:34:59'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:59'), 'max': Timestamp('2021-04-06 07:34:59')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88366.0,django,3.1.4,Direct,django,3.1.4,,,False,3.1,3.1.9,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:31'), 'median': Timestamp('2021-05-04 08:47:31'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:31'), 'max': Timestamp('2021-05-04 08:47:31')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88366.0,django,3.1.4,Direct,django,3.1.4,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,88366.0,django,3.1.4,Direct,django,3.1.4,,,False,3.1,3.1.6,"{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:24'), 'median': Timestamp('2021-02-01 09:28:24'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:24'), 'max': Timestamp('2021-02-01 09:28:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88366.0,django,3.1.4,Direct,django,3.1.4,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88366.0,django,3.1.4,Direct,django,3.1.4,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88366.0,django,3.1.4,Direct,django,3.1.4,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88366.0,django,3.1.4,Direct,django,3.1.4,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,88354.0,django,3.1.3,Direct,django,3.1.3,,,False,3.1,3.1.7,"{'mean': 199.0, 'median': 199.0, 'std': nan, 'min': 199, 'max': 199}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:09'), 'median': Timestamp('2021-02-19 09:08:09'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:09'), 'max': Timestamp('2021-02-19 09:08:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,88354.0,django,3.1.3,Direct,django,3.1.3,,,False,3.1,3.1.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:59'), 'median': Timestamp('2021-04-06 07:34:59'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:59'), 'max': Timestamp('2021-04-06 07:34:59')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88354.0,django,3.1.3,Direct,django,3.1.3,,,False,3.1,3.1.9,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:31'), 'median': Timestamp('2021-05-04 08:47:31'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:31'), 'max': Timestamp('2021-05-04 08:47:31')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88354.0,django,3.1.3,Direct,django,3.1.3,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,88354.0,django,3.1.3,Direct,django,3.1.3,,,False,3.1,3.1.6,"{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:24'), 'median': Timestamp('2021-02-01 09:28:24'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:24'), 'max': Timestamp('2021-02-01 09:28:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88354.0,django,3.1.3,Direct,django,3.1.3,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88354.0,django,3.1.3,Direct,django,3.1.3,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88354.0,django,3.1.3,Direct,django,3.1.3,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88354.0,django,3.1.3,Direct,django,3.1.3,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,88341.0,django,3.1.2,Direct,django,3.1.2,,,False,3.1,3.1.7,"{'mean': 199.0, 'median': 199.0, 'std': nan, 'min': 199, 'max': 199}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:09'), 'median': Timestamp('2021-02-19 09:08:09'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:09'), 'max': Timestamp('2021-02-19 09:08:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,88341.0,django,3.1.2,Direct,django,3.1.2,,,False,3.1,3.1.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:59'), 'median': Timestamp('2021-04-06 07:34:59'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:59'), 'max': Timestamp('2021-04-06 07:34:59')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88341.0,django,3.1.2,Direct,django,3.1.2,,,False,3.1,3.1.9,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:31'), 'median': Timestamp('2021-05-04 08:47:31'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:31'), 'max': Timestamp('2021-05-04 08:47:31')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88341.0,django,3.1.2,Direct,django,3.1.2,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,88341.0,django,3.1.2,Direct,django,3.1.2,,,False,3.1,3.1.6,"{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:24'), 'median': Timestamp('2021-02-01 09:28:24'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:24'), 'max': Timestamp('2021-02-01 09:28:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88341.0,django,3.1.2,Direct,django,3.1.2,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88341.0,django,3.1.2,Direct,django,3.1.2,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88341.0,django,3.1.2,Direct,django,3.1.2,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88341.0,django,3.1.2,Direct,django,3.1.2,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
11929,CVE-2023-30608,"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.
",2023-04-18 22:15:00,sqlparse.,2023-06-14 18:14:00,2024-03-19 14:58:21.262833,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,1,2699.0,django,3.1.2,Indirect,sqlparse,0.3.1,>=0.3.1,,False,0.1.15,0.4.4,"{'mean': 2924.0, 'median': 2924.0, 'std': nan, 'min': 2924, 'max': 2924}","{'mean': 2925.0, 'median': 2925.0, 'std': nan, 'min': 2925, 'max': 2925}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-04-18 08:30:36'), 'median': Timestamp('2023-04-18 08:30:36'), 'std': NaT, 'min': Timestamp('2023-04-18 08:30:36'), 'max': Timestamp('2023-04-18 08:30:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,88299.0,django,3.1.1,Direct,django,3.1.1,,,False,3.1,3.1.7,"{'mean': 199.0, 'median': 199.0, 'std': nan, 'min': 199, 'max': 199}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:09'), 'median': Timestamp('2021-02-19 09:08:09'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:09'), 'max': Timestamp('2021-02-19 09:08:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,88299.0,django,3.1.1,Direct,django,3.1.1,,,False,3.1,3.1.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:59'), 'median': Timestamp('2021-04-06 07:34:59'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:59'), 'max': Timestamp('2021-04-06 07:34:59')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88299.0,django,3.1.1,Direct,django,3.1.1,,,False,3.1,3.1.9,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:31'), 'median': Timestamp('2021-05-04 08:47:31'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:31'), 'max': Timestamp('2021-05-04 08:47:31')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88299.0,django,3.1.1,Direct,django,3.1.1,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,88299.0,django,3.1.1,Direct,django,3.1.1,,,False,3.1,3.1.6,"{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:24'), 'median': Timestamp('2021-02-01 09:28:24'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:24'), 'max': Timestamp('2021-02-01 09:28:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88299.0,django,3.1.1,Direct,django,3.1.1,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88299.0,django,3.1.1,Direct,django,3.1.1,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88299.0,django,3.1.1,Direct,django,3.1.1,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88299.0,django,3.1.1,Direct,django,3.1.1,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.1,3.1.7,"{'mean': 199.0, 'median': 199.0, 'std': nan, 'min': 199, 'max': 199}","{'mean': 195.0, 'median': 195.0, 'std': nan, 'min': 195, 'max': 195}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:09'), 'median': Timestamp('2021-02-19 09:08:09'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:09'), 'max': Timestamp('2021-02-19 09:08:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.1,3.1.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:59'), 'median': Timestamp('2021-04-06 07:34:59'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:59'), 'max': Timestamp('2021-04-06 07:34:59')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.1,3.1.9,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:31'), 'median': Timestamp('2021-05-04 08:47:31'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:31'), 'max': Timestamp('2021-05-04 08:47:31')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.1,3.1.10,"{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:15'), 'median': Timestamp('2021-05-06 07:40:15'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:15'), 'max': Timestamp('2021-05-06 07:40:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.1,3.1.6,"{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': 181.0, 'median': 181.0, 'std': nan, 'min': 181, 'max': 181}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:24'), 'median': Timestamp('2021-02-01 09:28:24'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:24'), 'max': Timestamp('2021-02-01 09:28:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,django.db,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.1,3.1.13,"{'mean': 330.0, 'median': 330.0, 'std': nan, 'min': 330, 'max': 330}","{'mean': 332.0, 'median': 332.0, 'std': nan, 'min': 332, 'max': 332}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-07-01 07:39:56'), 'median': Timestamp('2021-07-01 07:39:56'), 'std': NaT, 'min': Timestamp('2021-07-01 07:39:56'), 'max': Timestamp('2021-07-01 07:39:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.1,3.1.14,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:46'), 'median': Timestamp('2021-12-07 07:34:46'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:46'), 'max': Timestamp('2021-12-07 07:34:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.1,3.1.1,"{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:32'), 'median': Timestamp('2020-09-01 09:14:32'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:32'), 'max': Timestamp('2020-09-01 09:14:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,1,88279.0,django,3.1,Direct,django,3.1,,,False,3.1,3.1.1,"{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:32'), 'median': Timestamp('2020-09-01 09:14:32'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:32'), 'max': Timestamp('2020-09-01 09:14:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85983.0,django,3.0.14,Direct,django,3.0.14,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85983.0,django,3.0.14,Direct,django,3.0.14,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85979.0,django,3.0.13,Direct,django,3.0.13,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85979.0,django,3.0.13,Direct,django,3.0.13,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85979.0,django,3.0.13,Direct,django,3.0.13,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85979.0,django,3.0.12,Direct,django,3.0.12,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85979.0,django,3.0.12,Direct,django,3.0.12,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85979.0,django,3.0.12,Direct,django,3.0.12,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85979.0,django,3.0.12,Direct,django,3.0.12,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85970.0,django,3.0.11,Direct,django,3.0.11,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85970.0,django,3.0.11,Direct,django,3.0.11,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85970.0,django,3.0.11,Direct,django,3.0.11,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85970.0,django,3.0.11,Direct,django,3.0.11,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85970.0,django,3.0.11,Direct,django,3.0.11,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85968.0,django,3.0.10,Direct,django,3.0.10,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85968.0,django,3.0.10,Direct,django,3.0.10,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85968.0,django,3.0.10,Direct,django,3.0.10,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85968.0,django,3.0.10,Direct,django,3.0.10,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85968.0,django,3.0.10,Direct,django,3.0.10,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85959.0,django,3.0.9,Direct,django,3.0.9,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85959.0,django,3.0.9,Direct,django,3.0.9,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85959.0,django,3.0.9,Direct,django,3.0.9,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85959.0,django,3.0.9,Direct,django,3.0.9,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85959.0,django,3.0.9,Direct,django,3.0.9,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85959.0,django,3.0.9,Direct,django,3.0.9,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85959.0,django,3.0.9,Direct,django,3.0.9,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85947.0,django,3.0.8,Direct,django,3.0.8,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85947.0,django,3.0.8,Direct,django,3.0.8,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85947.0,django,3.0.8,Direct,django,3.0.8,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85947.0,django,3.0.8,Direct,django,3.0.8,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85947.0,django,3.0.8,Direct,django,3.0.8,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85947.0,django,3.0.8,Direct,django,3.0.8,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85947.0,django,3.0.8,Direct,django,3.0.8,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85913.0,django,3.0.7,Direct,django,3.0.7,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85913.0,django,3.0.7,Direct,django,3.0.7,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85913.0,django,3.0.7,Direct,django,3.0.7,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85913.0,django,3.0.7,Direct,django,3.0.7,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85913.0,django,3.0.7,Direct,django,3.0.7,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85913.0,django,3.0.7,Direct,django,3.0.7,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85913.0,django,3.0.7,Direct,django,3.0.7,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85878.0,django,3.0.6,Direct,django,3.0.6,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85878.0,django,3.0.6,Direct,django,3.0.6,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85878.0,django,3.0.6,Direct,django,3.0.6,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85878.0,django,3.0.6,Direct,django,3.0.6,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85878.0,django,3.0.6,Direct,django,3.0.6,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,85878.0,django,3.0.6,Direct,django,3.0.6,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,85878.0,django,3.0.6,Direct,django,3.0.6,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85878.0,django,3.0.6,Direct,django,3.0.6,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85878.0,django,3.0.6,Direct,django,3.0.6,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85877.0,django,3.0.5,Direct,django,3.0.5,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85877.0,django,3.0.5,Direct,django,3.0.5,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85877.0,django,3.0.5,Direct,django,3.0.5,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85877.0,django,3.0.5,Direct,django,3.0.5,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85877.0,django,3.0.5,Direct,django,3.0.5,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,85877.0,django,3.0.5,Direct,django,3.0.5,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,85877.0,django,3.0.5,Direct,django,3.0.5,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85877.0,django,3.0.5,Direct,django,3.0.5,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85877.0,django,3.0.5,Direct,django,3.0.5,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85809.0,django,3.0.4,Direct,django,3.0.4,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85809.0,django,3.0.4,Direct,django,3.0.4,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85809.0,django,3.0.4,Direct,django,3.0.4,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85809.0,django,3.0.4,Direct,django,3.0.4,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85809.0,django,3.0.4,Direct,django,3.0.4,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,85809.0,django,3.0.4,Direct,django,3.0.4,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,85809.0,django,3.0.4,Direct,django,3.0.4,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85809.0,django,3.0.4,Direct,django,3.0.4,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85809.0,django,3.0.4,Direct,django,3.0.4,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,0,85799.0,django,3.0.3,Direct,django,3.0.3,,,False,3.0,3.0.4,"{'mean': 92.0, 'median': 92.0, 'std': nan, 'min': 92, 'max': 92}","{'mean': 94.0, 'median': 94.0, 'std': nan, 'min': 94, 'max': 94}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:56'), 'median': Timestamp('2020-03-04 09:31:56'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:56'), 'max': Timestamp('2020-03-04 09:31:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.0.3,"{'mean': 62.0, 'median': 62.0, 'std': nan, 'min': 62, 'max': 62}","{'mean': 63.0, 'median': 63.0, 'std': nan, 'min': 63, 'max': 63}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:46'), 'median': Timestamp('2020-02-03 09:50:46'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:46'), 'max': Timestamp('2020-02-03 09:50:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,0,85794.0,django,3.0.2,Direct,django,3.0.2,,,False,3.0,3.0.4,"{'mean': 92.0, 'median': 92.0, 'std': nan, 'min': 92, 'max': 92}","{'mean': 94.0, 'median': 94.0, 'std': nan, 'min': 94, 'max': 94}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:56'), 'median': Timestamp('2020-03-04 09:31:56'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:56'), 'max': Timestamp('2020-03-04 09:31:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.0.3,"{'mean': 62.0, 'median': 62.0, 'std': nan, 'min': 62, 'max': 62}","{'mean': 63.0, 'median': 63.0, 'std': nan, 'min': 63, 'max': 63}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:46'), 'median': Timestamp('2020-02-03 09:50:46'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:46'), 'max': Timestamp('2020-02-03 09:50:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,0,85775.0,django,3.0.1,Direct,django,3.0.1,,,False,3.0,3.0.4,"{'mean': 92.0, 'median': 92.0, 'std': nan, 'min': 92, 'max': 92}","{'mean': 94.0, 'median': 94.0, 'std': nan, 'min': 94, 'max': 94}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:56'), 'median': Timestamp('2020-03-04 09:31:56'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:56'), 'max': Timestamp('2020-03-04 09:31:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.13,"{'mean': 444.0, 'median': 444.0, 'std': nan, 'min': 444, 'max': 444}","{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:08:04'), 'median': Timestamp('2021-02-19 09:08:04'), 'std': NaT, 'min': Timestamp('2021-02-19 09:08:04'), 'max': Timestamp('2021-02-19 09:08:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.14,"{'mean': 490.0, 'median': 490.0, 'std': nan, 'min': 490, 'max': 490}","{'mean': 491.0, 'median': 491.0, 'std': nan, 'min': 491, 'max': 491}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:56'), 'median': Timestamp('2021-04-06 07:34:56'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:56'), 'max': Timestamp('2021-04-06 07:34:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.12,"{'mean': 426.0, 'median': 426.0, 'std': nan, 'min': 426, 'max': 426}","{'mean': 427.0, 'median': 427.0, 'std': nan, 'min': 427, 'max': 427}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:19'), 'median': Timestamp('2021-02-01 09:28:19'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:19'), 'max': Timestamp('2021-02-01 09:28:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0.0,3.1.12,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.1.12,"{'mean': 547.0, 'median': 547.0, 'std': nan, 'min': 547, 'max': 547}","{'mean': 554.0, 'median': 554.0, 'std': nan, 'min': 554, 'max': 554}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:50'), 'median': Timestamp('2021-06-02 08:53:50'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:50'), 'max': Timestamp('2021-06-02 08:53:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.7,"{'mean': 183.0, 'median': 183.0, 'std': nan, 'min': 183, 'max': 183}","{'mean': 184.0, 'median': 184.0, 'std': nan, 'min': 184, 'max': 184}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:35'), 'median': Timestamp('2020-06-03 09:36:35'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:35'), 'max': Timestamp('2020-06-03 09:36:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.10,"{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': 274.0, 'median': 274.0, 'std': nan, 'min': 274, 'max': 274}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:28'), 'median': Timestamp('2020-09-01 09:14:28'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:28'), 'max': Timestamp('2020-09-01 09:14:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.3,"{'mean': 62.0, 'median': 62.0, 'std': nan, 'min': 62, 'max': 62}","{'mean': 63.0, 'median': 63.0, 'std': nan, 'min': 63, 'max': 63}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:46'), 'median': Timestamp('2020-02-03 09:50:46'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:46'), 'max': Timestamp('2020-02-03 09:50:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.4,"{'mean': 92.0, 'median': 92.0, 'std': nan, 'min': 92, 'max': 92}","{'mean': 94.0, 'median': 94.0, 'std': nan, 'min': 94, 'max': 94}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:56'), 'median': Timestamp('2020-03-04 09:31:56'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:56'), 'max': Timestamp('2020-03-04 09:31:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,3,0,85756.0,django,3.0,Direct,django,3.0,,,False,3.0,3.0.1,"{'mean': 15.0, 'median': 15.0, 'std': nan, 'min': 15, 'max': 15}","{'mean': 16.0, 'median': 16.0, 'std': nan, 'min': 16, 'max': 16}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:13'), 'median': Timestamp('2019-12-18 08:59:13'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:13'), 'max': Timestamp('2019-12-18 08:59:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85171.0,django,2.2.27,Direct,django,2.2.27,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85171.0,django,2.2.27,Direct,django,2.2.27,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85167.0,django,2.2.26,Direct,django,2.2.26,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85167.0,django,2.2.26,Direct,django,2.2.26,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85167.0,django,2.2.26,Direct,django,2.2.26,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85167.0,django,2.2.26,Direct,django,2.2.26,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85141.0,django,2.2.25,Direct,django,2.2.25,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85141.0,django,2.2.25,Direct,django,2.2.25,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85141.0,django,2.2.25,Direct,django,2.2.25,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85141.0,django,2.2.25,Direct,django,2.2.25,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85141.0,django,2.2.25,Direct,django,2.2.25,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85141.0,django,2.2.25,Direct,django,2.2.25,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85141.0,django,2.2.25,Direct,django,2.2.25,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85137.0,django,2.2.24,Direct,django,2.2.24,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85137.0,django,2.2.24,Direct,django,2.2.24,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85137.0,django,2.2.24,Direct,django,2.2.24,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85137.0,django,2.2.24,Direct,django,2.2.24,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85137.0,django,2.2.24,Direct,django,2.2.24,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85137.0,django,2.2.24,Direct,django,2.2.24,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85137.0,django,2.2.24,Direct,django,2.2.24,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85137.0,django,2.2.24,Direct,django,2.2.24,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85127.0,django,2.2.23,Direct,django,2.2.23,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85120.0,django,2.2.22,Direct,django,2.2.22,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85117.0,django,2.2.21,Direct,django,2.2.21,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85092.0,django,2.2.20,Direct,django,2.2.20,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85088.0,django,2.2.19,Direct,django,2.2.19,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85088.0,django,2.2.18,Direct,django,2.2.18,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85079.0,django,2.2.17,Direct,django,2.2.17,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85079.0,django,2.2.16,Direct,django,2.2.16,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85071.0,django,2.2.15,Direct,django,2.2.15,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.14,Direct,django,2.2.14,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85053.0,django,2.2.13,Direct,django,2.2.13,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,85034.0,django,2.2.12,Direct,django,2.2.12,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84977.0,django,2.2.11,Direct,django,2.2.11,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84967.0,django,2.2.10,Direct,django,2.2.10,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84965.0,django,2.2.9,Direct,django,2.2.9,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84958.0,django,2.2.8,Direct,django,2.2.8,,,False,2.2,2.2.9,"{'mean': 260.0, 'median': 260.0, 'std': nan, 'min': 260, 'max': 260}","{'mean': 261.0, 'median': 261.0, 'std': nan, 'min': 261, 'max': 261}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:07'), 'median': Timestamp('2019-12-18 08:59:07'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:07'), 'max': Timestamp('2019-12-18 08:59:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:52'), 'median': Timestamp('2019-12-02 08:57:52'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:52'), 'max': Timestamp('2019-12-02 08:57:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84916.0,django,2.2.7,Direct,django,2.2.7,,,False,2.2,2.2.9,"{'mean': 260.0, 'median': 260.0, 'std': nan, 'min': 260, 'max': 260}","{'mean': 261.0, 'median': 261.0, 'std': nan, 'min': 261, 'max': 261}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:07'), 'median': Timestamp('2019-12-18 08:59:07'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:07'), 'max': Timestamp('2019-12-18 08:59:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:52'), 'median': Timestamp('2019-12-02 08:57:52'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:52'), 'max': Timestamp('2019-12-02 08:57:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84911.0,django,2.2.6,Direct,django,2.2.6,,,False,2.2,2.2.9,"{'mean': 260.0, 'median': 260.0, 'std': nan, 'min': 260, 'max': 260}","{'mean': 261.0, 'median': 261.0, 'std': nan, 'min': 261, 'max': 261}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:07'), 'median': Timestamp('2019-12-18 08:59:07'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:07'), 'max': Timestamp('2019-12-18 08:59:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:52'), 'median': Timestamp('2019-12-02 08:57:52'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:52'), 'max': Timestamp('2019-12-02 08:57:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84911.0,django,2.2.5,Direct,django,2.2.5,,,False,2.2,2.2.9,"{'mean': 260.0, 'median': 260.0, 'std': nan, 'min': 260, 'max': 260}","{'mean': 261.0, 'median': 261.0, 'std': nan, 'min': 261, 'max': 261}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:07'), 'median': Timestamp('2019-12-18 08:59:07'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:07'), 'max': Timestamp('2019-12-18 08:59:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:52'), 'median': Timestamp('2019-12-02 08:57:52'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:52'), 'max': Timestamp('2019-12-02 08:57:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84892.0,django,2.2.4,Direct,django,2.2.4,,,False,2.2,2.2.9,"{'mean': 260.0, 'median': 260.0, 'std': nan, 'min': 260, 'max': 260}","{'mean': 261.0, 'median': 261.0, 'std': nan, 'min': 261, 'max': 261}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:07'), 'median': Timestamp('2019-12-18 08:59:07'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:07'), 'max': Timestamp('2019-12-18 08:59:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:52'), 'median': Timestamp('2019-12-02 08:57:52'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:52'), 'max': Timestamp('2019-12-02 08:57:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84877.0,django,2.2.3,Direct,django,2.2.3,,,False,2.2,2.2.9,"{'mean': 260.0, 'median': 260.0, 'std': nan, 'min': 260, 'max': 260}","{'mean': 261.0, 'median': 261.0, 'std': nan, 'min': 261, 'max': 261}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:07'), 'median': Timestamp('2019-12-18 08:59:07'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:07'), 'max': Timestamp('2019-12-18 08:59:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:23'), 'median': Timestamp('2019-07-01 07:19:23'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:23'), 'max': Timestamp('2019-07-01 07:19:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:52'), 'median': Timestamp('2019-12-02 08:57:52'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:52'), 'max': Timestamp('2019-12-02 08:57:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84875.0,django,2.2.2,Direct,django,2.2.2,,,False,2.2,2.2.9,"{'mean': 260.0, 'median': 260.0, 'std': nan, 'min': 260, 'max': 260}","{'mean': 261.0, 'median': 261.0, 'std': nan, 'min': 261, 'max': 261}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:07'), 'median': Timestamp('2019-12-18 08:59:07'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:07'), 'max': Timestamp('2019-12-18 08:59:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.2,"{'mean': 62.0, 'median': 62.0, 'std': nan, 'min': 62, 'max': 62}","{'mean': 63.0, 'median': 63.0, 'std': nan, 'min': 63, 'max': 63}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:10'), 'median': Timestamp('2019-06-03 10:11:10'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:10'), 'max': Timestamp('2019-06-03 10:11:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:23'), 'median': Timestamp('2019-07-01 07:19:23'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:23'), 'max': Timestamp('2019-07-01 07:19:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:52'), 'median': Timestamp('2019-12-02 08:57:52'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:52'), 'max': Timestamp('2019-12-02 08:57:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84858.0,django,2.2.1,Direct,django,2.2.1,,,False,2.2,2.2.9,"{'mean': 260.0, 'median': 260.0, 'std': nan, 'min': 260, 'max': 260}","{'mean': 261.0, 'median': 261.0, 'std': nan, 'min': 261, 'max': 261}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:07'), 'median': Timestamp('2019-12-18 08:59:07'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:07'), 'max': Timestamp('2019-12-18 08:59:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,django.template,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,django.forms,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.27,"{'mean': 1036.0, 'median': 1036.0, 'std': nan, 'min': 1036, 'max': 1036}","{'mean': 1038.0, 'median': 1038.0, 'std': nan, 'min': 1038, 'max': 1038}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2022-02-01 07:56:15'), 'median': Timestamp('2022-02-01 07:56:15'), 'std': NaT, 'min': Timestamp('2022-02-01 07:56:15'), 'max': Timestamp('2022-02-01 07:56:15')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,django.db,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.28,"{'mean': 1105.0, 'median': 1105.0, 'std': nan, 'min': 1105, 'max': 1105}","{'mean': 1106.0, 'median': 1106.0, 'std': nan, 'min': 1106, 'max': 1106}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-04-11 07:52:52'), 'median': Timestamp('2022-04-11 07:52:52'), 'std': NaT, 'min': Timestamp('2022-04-11 07:52:52'), 'max': Timestamp('2022-04-11 07:52:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,-,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.19,"{'mean': 689.0, 'median': 689.0, 'std': nan, 'min': 689, 'max': 689}","{'mean': 686.0, 'median': 686.0, 'std': nan, 'min': 686, 'max': 686}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': Timestamp('2021-02-19 09:07:57'), 'median': Timestamp('2021-02-19 09:07:57'), 'std': NaT, 'min': Timestamp('2021-02-19 09:07:57'), 'max': Timestamp('2021-02-19 09:07:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,django.http,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.20,"{'mean': 735.0, 'median': 735.0, 'std': nan, 'min': 735, 'max': 735}","{'mean': 736.0, 'median': 736.0, 'std': nan, 'min': 736, 'max': 736}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-04-06 07:34:52'), 'median': Timestamp('2021-04-06 07:34:52'), 'std': NaT, 'min': Timestamp('2021-04-06 07:34:52'), 'max': Timestamp('2021-04-06 07:34:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,django.http,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.21,"{'mean': 763.0, 'median': 763.0, 'std': nan, 'min': 763, 'max': 763}","{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-05-04 08:47:20'), 'median': Timestamp('2021-05-04 08:47:20'), 'std': NaT, 'min': Timestamp('2021-05-04 08:47:20'), 'max': Timestamp('2021-05-04 08:47:20')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,django.core,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.22,"{'mean': 765.0, 'median': 765.0, 'std': nan, 'min': 765, 'max': 765}","{'mean': 766.0, 'median': 766.0, 'std': nan, 'min': 766, 'max': 766}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-05-06 07:40:38'), 'median': Timestamp('2021-05-06 07:40:38'), 'std': NaT, 'min': Timestamp('2021-05-06 07:40:38'), 'max': Timestamp('2021-05-06 07:40:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,django.utils,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.18,"{'mean': 671.0, 'median': 671.0, 'std': nan, 'min': 671, 'max': 671}","{'mean': 672.0, 'median': 672.0, 'std': nan, 'min': 672, 'max': 672}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-02-01 09:28:14'), 'median': Timestamp('2021-02-01 09:28:14'), 'std': NaT, 'min': Timestamp('2021-02-01 09:28:14'), 'max': Timestamp('2021-02-01 09:28:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,django.core,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.24,"{'mean': 792.0, 'median': 792.0, 'std': nan, 'min': 792, 'max': 792}","{'mean': 799.0, 'median': 799.0, 'std': nan, 'min': 799, 'max': 799}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,-,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.25,"{'mean': 980.0, 'median': 980.0, 'std': nan, 'min': 980, 'max': 980}","{'mean': 981.0, 'median': 981.0, 'std': nan, 'min': 981, 'max': 981}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2021-12-07 07:34:42'), 'median': Timestamp('2021-12-07 07:34:42'), 'std': NaT, 'min': Timestamp('2021-12-07 07:34:42'), 'max': Timestamp('2021-12-07 07:34:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,django.template,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,django.core,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.26,"{'mean': 1008.0, 'median': 1008.0, 'std': nan, 'min': 1008, 'max': 1008}","{'mean': 1009.0, 'median': 1009.0, 'std': nan, 'min': 1009, 'max': 1009}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2022-01-04 09:53:18'), 'median': Timestamp('2022-01-04 09:53:18'), 'std': NaT, 'min': Timestamp('2022-01-04 09:53:18'), 'max': Timestamp('2022-01-04 09:53:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,django.core,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,django.contrib,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.13,"{'mean': 428.0, 'median': 428.0, 'std': nan, 'min': 428, 'max': 428}","{'mean': 429.0, 'median': 429.0, 'std': nan, 'min': 429, 'max': 429}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-06-03 09:36:32'), 'median': Timestamp('2020-06-03 09:36:32'), 'std': NaT, 'min': Timestamp('2020-06-03 09:36:32'), 'max': Timestamp('2020-06-03 09:36:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,django.core,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.16,"{'mean': 518.0, 'median': 518.0, 'std': nan, 'min': 518, 'max': 518}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-09-01 09:14:25'), 'median': Timestamp('2020-09-01 09:14:25'), 'std': NaT, 'min': Timestamp('2020-09-01 09:14:25'), 'max': Timestamp('2020-09-01 09:14:25')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.10,"{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': 307.0, 'median': 307.0, 'std': nan, 'min': 307, 'max': 307}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:41'), 'median': Timestamp('2020-02-03 09:50:41'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:41'), 'max': Timestamp('2020-02-03 09:50:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.11,"{'mean': 337.0, 'median': 337.0, 'std': nan, 'min': 337, 'max': 337}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:51'), 'median': Timestamp('2020-03-04 09:31:51'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:51'), 'max': Timestamp('2020-03-04 09:31:51')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.2,"{'mean': 62.0, 'median': 62.0, 'std': nan, 'min': 62, 'max': 62}","{'mean': 63.0, 'median': 63.0, 'std': nan, 'min': 63, 'max': 63}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:10'), 'median': Timestamp('2019-06-03 10:11:10'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:10'), 'max': Timestamp('2019-06-03 10:11:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:23'), 'median': Timestamp('2019-07-01 07:19:23'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:23'), 'max': Timestamp('2019-07-01 07:19:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.4,"{'mean': 121.0, 'median': 121.0, 'std': nan, 'min': 121, 'max': 121}","{'mean': 123.0, 'median': 123.0, 'std': nan, 'min': 123, 'max': 123}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:37'), 'median': Timestamp('2019-08-01 09:04:37'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:37'), 'max': Timestamp('2019-08-01 09:04:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.8,"{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': 245.0, 'median': 245.0, 'std': nan, 'min': 245, 'max': 245}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:52'), 'median': Timestamp('2019-12-02 08:57:52'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:52'), 'max': Timestamp('2019-12-02 08:57:52')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,2,84804.0,django,2.2,Direct,django,2.2,,,False,2.2,2.2.9,"{'mean': 260.0, 'median': 260.0, 'std': nan, 'min': 260, 'max': 260}","{'mean': 261.0, 'median': 261.0, 'std': nan, 'min': 261, 'max': 261}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:07'), 'median': Timestamp('2019-12-18 08:59:07'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:07'), 'max': Timestamp('2019-12-18 08:59:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82452.0,django,2.1.15,Direct,django,2.1.15,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82413.0,django,2.1.14,Direct,django,2.1.14,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82413.0,django,2.1.14,Direct,django,2.1.14,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82413.0,django,2.1.13,Direct,django,2.1.13,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82413.0,django,2.1.13,Direct,django,2.1.13,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82413.0,django,2.1.12,Direct,django,2.1.12,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82413.0,django,2.1.12,Direct,django,2.1.12,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82413.0,django,2.1.11,Direct,django,2.1.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82413.0,django,2.1.11,Direct,django,2.1.11,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82414.0,django,2.1.10,Direct,django,2.1.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82414.0,django,2.1.10,Direct,django,2.1.10,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82414.0,django,2.1.10,Direct,django,2.1.10,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82414.0,django,2.1.10,Direct,django,2.1.10,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82414.0,django,2.1.10,Direct,django,2.1.10,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82414.0,django,2.1.10,Direct,django,2.1.10,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82413.0,django,2.1.9,Direct,django,2.1.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,82413.0,django,2.1.9,Direct,django,2.1.9,,,False,2.1,2.1.10,"{'mean': 333.0, 'median': 333.0, 'std': nan, 'min': 333, 'max': 333}","{'mean': 334.0, 'median': 334.0, 'std': nan, 'min': 334, 'max': 334}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:18'), 'median': Timestamp('2019-07-01 07:19:18'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:18'), 'max': Timestamp('2019-07-01 07:19:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82413.0,django,2.1.9,Direct,django,2.1.9,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82413.0,django,2.1.9,Direct,django,2.1.9,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82413.0,django,2.1.9,Direct,django,2.1.9,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82413.0,django,2.1.9,Direct,django,2.1.9,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82413.0,django,2.1.9,Direct,django,2.1.9,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82405.0,django,2.1.8,Direct,django,2.1.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,82405.0,django,2.1.8,Direct,django,2.1.8,,,False,2.1,2.1.9,"{'mean': 305.0, 'median': 305.0, 'std': nan, 'min': 305, 'max': 305}","{'mean': 306.0, 'median': 306.0, 'std': nan, 'min': 306, 'max': 306}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:04'), 'median': Timestamp('2019-06-03 10:11:04'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:04'), 'max': Timestamp('2019-06-03 10:11:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,82405.0,django,2.1.8,Direct,django,2.1.8,,,False,2.1,2.1.10,"{'mean': 333.0, 'median': 333.0, 'std': nan, 'min': 333, 'max': 333}","{'mean': 334.0, 'median': 334.0, 'std': nan, 'min': 334, 'max': 334}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:18'), 'median': Timestamp('2019-07-01 07:19:18'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:18'), 'max': Timestamp('2019-07-01 07:19:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82405.0,django,2.1.8,Direct,django,2.1.8,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82405.0,django,2.1.8,Direct,django,2.1.8,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82405.0,django,2.1.8,Direct,django,2.1.8,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82405.0,django,2.1.8,Direct,django,2.1.8,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82405.0,django,2.1.8,Direct,django,2.1.8,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82403.0,django,2.1.7,Direct,django,2.1.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,82403.0,django,2.1.7,Direct,django,2.1.7,,,False,2.1,2.1.9,"{'mean': 305.0, 'median': 305.0, 'std': nan, 'min': 305, 'max': 305}","{'mean': 306.0, 'median': 306.0, 'std': nan, 'min': 306, 'max': 306}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:04'), 'median': Timestamp('2019-06-03 10:11:04'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:04'), 'max': Timestamp('2019-06-03 10:11:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,82403.0,django,2.1.7,Direct,django,2.1.7,,,False,2.1,2.1.10,"{'mean': 333.0, 'median': 333.0, 'std': nan, 'min': 333, 'max': 333}","{'mean': 334.0, 'median': 334.0, 'std': nan, 'min': 334, 'max': 334}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:18'), 'median': Timestamp('2019-07-01 07:19:18'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:18'), 'max': Timestamp('2019-07-01 07:19:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82403.0,django,2.1.7,Direct,django,2.1.7,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82403.0,django,2.1.7,Direct,django,2.1.7,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82403.0,django,2.1.7,Direct,django,2.1.7,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82403.0,django,2.1.7,Direct,django,2.1.7,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82403.0,django,2.1.7,Direct,django,2.1.7,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82392.0,django,2.1.5,Direct,django,2.1.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,82392.0,django,2.1.5,Direct,django,2.1.5,,,False,2.1,2.1.9,"{'mean': 305.0, 'median': 305.0, 'std': nan, 'min': 305, 'max': 305}","{'mean': 306.0, 'median': 306.0, 'std': nan, 'min': 306, 'max': 306}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:04'), 'median': Timestamp('2019-06-03 10:11:04'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:04'), 'max': Timestamp('2019-06-03 10:11:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,82392.0,django,2.1.5,Direct,django,2.1.5,,,False,2.1,2.1.10,"{'mean': 333.0, 'median': 333.0, 'std': nan, 'min': 333, 'max': 333}","{'mean': 334.0, 'median': 334.0, 'std': nan, 'min': 334, 'max': 334}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:18'), 'median': Timestamp('2019-07-01 07:19:18'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:18'), 'max': Timestamp('2019-07-01 07:19:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82392.0,django,2.1.5,Direct,django,2.1.5,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82392.0,django,2.1.5,Direct,django,2.1.5,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82392.0,django,2.1.5,Direct,django,2.1.5,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82392.0,django,2.1.5,Direct,django,2.1.5,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82392.0,django,2.1.5,Direct,django,2.1.5,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82392.0,django,2.1.5,Direct,django,2.1.5,,,False,2.1.0,2.1.6,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,2.1,2.1.9,"{'mean': 305.0, 'median': 305.0, 'std': nan, 'min': 305, 'max': 305}","{'mean': 306.0, 'median': 306.0, 'std': nan, 'min': 306, 'max': 306}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:04'), 'median': Timestamp('2019-06-03 10:11:04'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:04'), 'max': Timestamp('2019-06-03 10:11:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,2.1,2.1.10,"{'mean': 333.0, 'median': 333.0, 'std': nan, 'min': 333, 'max': 333}","{'mean': 334.0, 'median': 334.0, 'std': nan, 'min': 334, 'max': 334}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:18'), 'median': Timestamp('2019-07-01 07:19:18'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:18'), 'max': Timestamp('2019-07-01 07:19:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,2.1,2.1.5,"{'mean': 155.0, 'median': 155.0, 'std': nan, 'min': 155, 'max': 155}","{'mean': 161.0, 'median': 161.0, 'std': nan, 'min': 161, 'max': 161}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 13:52:50'), 'median': Timestamp('2019-01-04 13:52:50'), 'std': NaT, 'min': Timestamp('2019-01-04 13:52:50'), 'max': Timestamp('2019-01-04 13:52:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82372.0,django,2.1.4,Direct,django,2.1.4,,,False,2.1.0,2.1.6,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,2.1,2.1.9,"{'mean': 305.0, 'median': 305.0, 'std': nan, 'min': 305, 'max': 305}","{'mean': 306.0, 'median': 306.0, 'std': nan, 'min': 306, 'max': 306}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:04'), 'median': Timestamp('2019-06-03 10:11:04'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:04'), 'max': Timestamp('2019-06-03 10:11:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,2.1,2.1.10,"{'mean': 333.0, 'median': 333.0, 'std': nan, 'min': 333, 'max': 333}","{'mean': 334.0, 'median': 334.0, 'std': nan, 'min': 334, 'max': 334}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:18'), 'median': Timestamp('2019-07-01 07:19:18'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:18'), 'max': Timestamp('2019-07-01 07:19:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,2.1,2.1.5,"{'mean': 155.0, 'median': 155.0, 'std': nan, 'min': 155, 'max': 155}","{'mean': 161.0, 'median': 161.0, 'std': nan, 'min': 161, 'max': 161}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 13:52:50'), 'median': Timestamp('2019-01-04 13:52:50'), 'std': NaT, 'min': Timestamp('2019-01-04 13:52:50'), 'max': Timestamp('2019-01-04 13:52:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82342.0,django,2.1.3,Direct,django,2.1.3,,,False,2.1.0,2.1.6,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,2.1,2.1.9,"{'mean': 305.0, 'median': 305.0, 'std': nan, 'min': 305, 'max': 305}","{'mean': 306.0, 'median': 306.0, 'std': nan, 'min': 306, 'max': 306}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:04'), 'median': Timestamp('2019-06-03 10:11:04'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:04'), 'max': Timestamp('2019-06-03 10:11:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,2.1,2.1.10,"{'mean': 333.0, 'median': 333.0, 'std': nan, 'min': 333, 'max': 333}","{'mean': 334.0, 'median': 334.0, 'std': nan, 'min': 334, 'max': 334}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:18'), 'median': Timestamp('2019-07-01 07:19:18'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:18'), 'max': Timestamp('2019-07-01 07:19:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,2.1,2.1.5,"{'mean': 155.0, 'median': 155.0, 'std': nan, 'min': 155, 'max': 155}","{'mean': 161.0, 'median': 161.0, 'std': nan, 'min': 161, 'max': 161}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 13:52:50'), 'median': Timestamp('2019-01-04 13:52:50'), 'std': NaT, 'min': Timestamp('2019-01-04 13:52:50'), 'max': Timestamp('2019-01-04 13:52:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82333.0,django,2.1.2,Direct,django,2.1.2,,,False,2.1.0,2.1.6,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1,2.1.9,"{'mean': 305.0, 'median': 305.0, 'std': nan, 'min': 305, 'max': 305}","{'mean': 306.0, 'median': 306.0, 'std': nan, 'min': 306, 'max': 306}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:04'), 'median': Timestamp('2019-06-03 10:11:04'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:04'), 'max': Timestamp('2019-06-03 10:11:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1,2.1.10,"{'mean': 333.0, 'median': 333.0, 'std': nan, 'min': 333, 'max': 333}","{'mean': 334.0, 'median': 334.0, 'std': nan, 'min': 334, 'max': 334}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:18'), 'median': Timestamp('2019-07-01 07:19:18'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:18'), 'max': Timestamp('2019-07-01 07:19:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1,2.1.5,"{'mean': 155.0, 'median': 155.0, 'std': nan, 'min': 155, 'max': 155}","{'mean': 161.0, 'median': 161.0, 'std': nan, 'min': 161, 'max': 161}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 13:52:50'), 'median': Timestamp('2019-01-04 13:52:50'), 'std': NaT, 'min': Timestamp('2019-01-04 13:52:50'), 'max': Timestamp('2019-01-04 13:52:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1.0,2.1.6,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
113314,CVE-2018-16984,"An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the ""view"" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",2018-10-02 18:29:00,-,2019-10-03 00:03:00,2024-03-19 16:35:54.588561,3.0,1.2,3.6,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82278.0,django,2.1.1,Direct,django,2.1.1,,,False,2.1,2.1.2,"{'mean': 60.0, 'median': 60.0, 'std': nan, 'min': 60, 'max': 60}","{'mean': 62.0, 'median': 62.0, 'std': nan, 'min': 62, 'max': 62}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2018-10-01 09:22:12'), 'median': Timestamp('2018-10-01 09:22:12'), 'std': NaT, 'min': Timestamp('2018-10-01 09:22:12'), 'max': Timestamp('2018-10-01 09:22:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1,2.1.9,"{'mean': 305.0, 'median': 305.0, 'std': nan, 'min': 305, 'max': 305}","{'mean': 306.0, 'median': 306.0, 'std': nan, 'min': 306, 'max': 306}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:11:04'), 'median': Timestamp('2019-06-03 10:11:04'), 'std': NaT, 'min': Timestamp('2019-06-03 10:11:04'), 'max': Timestamp('2019-06-03 10:11:04')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1,2.1.10,"{'mean': 333.0, 'median': 333.0, 'std': nan, 'min': 333, 'max': 333}","{'mean': 334.0, 'median': 334.0, 'std': nan, 'min': 334, 'max': 334}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:18'), 'median': Timestamp('2019-07-01 07:19:18'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:18'), 'max': Timestamp('2019-07-01 07:19:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 372.0, 'median': 372.0, 'std': nan, 'min': 372, 'max': 372}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1,2.1.11,"{'mean': 364.0, 'median': 364.0, 'std': nan, 'min': 364, 'max': 364}","{'mean': 366.0, 'median': 366.0, 'std': nan, 'min': 366, 'max': 366}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:30'), 'median': Timestamp('2019-08-01 09:04:30'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:30'), 'max': Timestamp('2019-08-01 09:04:30')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1,2.1.15,"{'mean': 487.0, 'median': 487.0, 'std': nan, 'min': 487, 'max': 487}","{'mean': 488.0, 'median': 488.0, 'std': nan, 'min': 488, 'max': 488}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-02 08:57:47'), 'median': Timestamp('2019-12-02 08:57:47'), 'std': NaT, 'min': Timestamp('2019-12-02 08:57:47'), 'max': Timestamp('2019-12-02 08:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1,2.1.5,"{'mean': 155.0, 'median': 155.0, 'std': nan, 'min': 155, 'max': 155}","{'mean': 161.0, 'median': 161.0, 'std': nan, 'min': 161, 'max': 161}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 13:52:50'), 'median': Timestamp('2019-01-04 13:52:50'), 'std': NaT, 'min': Timestamp('2019-01-04 13:52:50'), 'max': Timestamp('2019-01-04 13:52:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1.0,2.1.6,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
113314,CVE-2018-16984,"An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the ""view"" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",2018-10-02 18:29:00,-,2019-10-03 00:03:00,2024-03-19 16:35:54.588561,3.0,1.2,3.6,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,1,82265.0,django,2.1,Direct,django,2.1,,,False,2.1,2.1.2,"{'mean': 60.0, 'median': 60.0, 'std': nan, 'min': 60, 'max': 60}","{'mean': 62.0, 'median': 62.0, 'std': nan, 'min': 62, 'max': 62}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2018-10-01 09:22:12'), 'median': Timestamp('2018-10-01 09:22:12'), 'std': NaT, 'min': Timestamp('2018-10-01 09:22:12'), 'max': Timestamp('2018-10-01 09:22:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82322.0,django,2.0.13,Direct,django,2.0.13,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82322.0,django,2.0.12,Direct,django,2.0.12,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82311.0,django,2.0.10,Direct,django,2.0.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82311.0,django,2.0.10,Direct,django,2.0.10,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82300.0,django,2.0.9,Direct,django,2.0.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82300.0,django,2.0.9,Direct,django,2.0.9,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82300.0,django,2.0.9,Direct,django,2.0.9,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82299.0,django,2.0.8,Direct,django,2.0.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82299.0,django,2.0.8,Direct,django,2.0.8,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82299.0,django,2.0.8,Direct,django,2.0.8,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82290.0,django,2.0.7,Direct,django,2.0.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82290.0,django,2.0.7,Direct,django,2.0.7,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82290.0,django,2.0.7,Direct,django,2.0.7,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,82290.0,django,2.0.7,Direct,django,2.0.7,,,False,2.0,2.0.8,"{'mean': 241.0, 'median': 241.0, 'std': nan, 'min': 241, 'max': 241}","{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:51:58'), 'median': Timestamp('2018-08-01 13:51:58'), 'std': NaT, 'min': Timestamp('2018-08-01 13:51:58'), 'max': Timestamp('2018-08-01 13:51:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82275.0,django,2.0.6,Direct,django,2.0.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82275.0,django,2.0.6,Direct,django,2.0.6,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82275.0,django,2.0.6,Direct,django,2.0.6,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,82275.0,django,2.0.6,Direct,django,2.0.6,,,False,2.0,2.0.8,"{'mean': 241.0, 'median': 241.0, 'std': nan, 'min': 241, 'max': 241}","{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:51:58'), 'median': Timestamp('2018-08-01 13:51:58'), 'std': NaT, 'min': Timestamp('2018-08-01 13:51:58'), 'max': Timestamp('2018-08-01 13:51:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82250.0,django,2.0.5,Direct,django,2.0.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82250.0,django,2.0.5,Direct,django,2.0.5,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82250.0,django,2.0.5,Direct,django,2.0.5,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,82250.0,django,2.0.5,Direct,django,2.0.5,,,False,2.0,2.0.8,"{'mean': 241.0, 'median': 241.0, 'std': nan, 'min': 241, 'max': 241}","{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:51:58'), 'median': Timestamp('2018-08-01 13:51:58'), 'std': NaT, 'min': Timestamp('2018-08-01 13:51:58'), 'max': Timestamp('2018-08-01 13:51:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82242.0,django,2.0.4,Direct,django,2.0.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82242.0,django,2.0.4,Direct,django,2.0.4,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82242.0,django,2.0.4,Direct,django,2.0.4,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,82242.0,django,2.0.4,Direct,django,2.0.4,,,False,2.0,2.0.8,"{'mean': 241.0, 'median': 241.0, 'std': nan, 'min': 241, 'max': 241}","{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:51:58'), 'median': Timestamp('2018-08-01 13:51:58'), 'std': NaT, 'min': Timestamp('2018-08-01 13:51:58'), 'max': Timestamp('2018-08-01 13:51:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82224.0,django,2.0.3,Direct,django,2.0.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82224.0,django,2.0.3,Direct,django,2.0.3,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82224.0,django,2.0.3,Direct,django,2.0.3,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,82224.0,django,2.0.3,Direct,django,2.0.3,,,False,2.0,2.0.8,"{'mean': 241.0, 'median': 241.0, 'std': nan, 'min': 241, 'max': 241}","{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:51:58'), 'median': Timestamp('2018-08-01 13:51:58'), 'std': NaT, 'min': Timestamp('2018-08-01 13:51:58'), 'max': Timestamp('2018-08-01 13:51:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82211.0,django,2.0.2,Direct,django,2.0.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82211.0,django,2.0.2,Direct,django,2.0.2,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82211.0,django,2.0.2,Direct,django,2.0.2,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,82211.0,django,2.0.2,Direct,django,2.0.2,,,False,2.0,2.0.8,"{'mean': 241.0, 'median': 241.0, 'std': nan, 'min': 241, 'max': 241}","{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:51:58'), 'median': Timestamp('2018-08-01 13:51:58'), 'std': NaT, 'min': Timestamp('2018-08-01 13:51:58'), 'max': Timestamp('2018-08-01 13:51:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,82211.0,django,2.0.2,Direct,django,2.0.2,,,False,2.0,2.0.3,"{'mean': 93.0, 'median': 93.0, 'std': nan, 'min': 93, 'max': 93}","{'mean': 97.0, 'median': 97.0, 'std': nan, 'min': 97, 'max': 97}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:05:32'), 'median': Timestamp('2018-03-06 14:05:32'), 'std': NaT, 'min': Timestamp('2018-03-06 14:05:32'), 'max': Timestamp('2018-03-06 14:05:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,82211.0,django,2.0.2,Direct,django,2.0.2,,,False,2.0,2.0.3,"{'mean': 93.0, 'median': 93.0, 'std': nan, 'min': 93, 'max': 93}","{'mean': 97.0, 'median': 97.0, 'std': nan, 'min': 97, 'max': 97}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:05:32'), 'median': Timestamp('2018-03-06 14:05:32'), 'std': NaT, 'min': Timestamp('2018-03-06 14:05:32'), 'max': Timestamp('2018-03-06 14:05:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82213.0,django,2.0.1,Direct,django,2.0.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82213.0,django,2.0.1,Direct,django,2.0.1,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82213.0,django,2.0.1,Direct,django,2.0.1,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,82213.0,django,2.0.1,Direct,django,2.0.1,,,False,2.0,2.0.8,"{'mean': 241.0, 'median': 241.0, 'std': nan, 'min': 241, 'max': 241}","{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:51:58'), 'median': Timestamp('2018-08-01 13:51:58'), 'std': NaT, 'min': Timestamp('2018-08-01 13:51:58'), 'max': Timestamp('2018-08-01 13:51:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
119588,CVE-2018-6188,"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",2018-02-05 03:29:00,django.contrib,2019-03-12 17:54:00,2024-03-19 16:38:30.653600,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,82213.0,django,2.0.1,Direct,django,2.0.1,,,False,2.0,2.0.2,"{'mean': 60.0, 'median': 60.0, 'std': nan, 'min': 60, 'max': 60}","{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-02-01 14:30:13'), 'median': Timestamp('2018-02-01 14:30:13'), 'std': NaT, 'min': Timestamp('2018-02-01 14:30:13'), 'max': Timestamp('2018-02-01 14:30:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,82213.0,django,2.0.1,Direct,django,2.0.1,,,False,2.0,2.0.3,"{'mean': 93.0, 'median': 93.0, 'std': nan, 'min': 93, 'max': 93}","{'mean': 97.0, 'median': 97.0, 'std': nan, 'min': 97, 'max': 97}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:05:32'), 'median': Timestamp('2018-03-06 14:05:32'), 'std': NaT, 'min': Timestamp('2018-03-06 14:05:32'), 'max': Timestamp('2018-03-06 14:05:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,82213.0,django,2.0.1,Direct,django,2.0.1,,,False,2.0,2.0.3,"{'mean': 93.0, 'median': 93.0, 'std': nan, 'min': 93, 'max': 93}","{'mean': 97.0, 'median': 97.0, 'std': nan, 'min': 97, 'max': 97}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:05:32'), 'median': Timestamp('2018-03-06 14:05:32'), 'std': NaT, 'min': Timestamp('2018-03-06 14:05:32'), 'max': Timestamp('2018-03-06 14:05:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,2,0,82189.0,django,2.0,Direct,django,2.0,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,2,0,82189.0,django,2.0,Direct,django,2.0,,,False,2.0,2.0.10,"{'mean': 397.0, 'median': 397.0, 'std': nan, 'min': 397, 'max': 397}","{'mean': 403.0, 'median': 403.0, 'std': nan, 'min': 403, 'max': 403}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:03:05'), 'median': Timestamp('2019-01-04 14:03:05'), 'std': NaT, 'min': Timestamp('2019-01-04 14:03:05'), 'max': Timestamp('2019-01-04 14:03:05')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,82189.0,django,2.0,Direct,django,2.0,,,False,2.0.0,2.0.11,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,82189.0,django,2.0,Direct,django,2.0,,,False,2.0,2.0.8,"{'mean': 241.0, 'median': 241.0, 'std': nan, 'min': 241, 'max': 241}","{'mean': 244.0, 'median': 244.0, 'std': nan, 'min': 244, 'max': 244}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:51:58'), 'median': Timestamp('2018-08-01 13:51:58'), 'std': NaT, 'min': Timestamp('2018-08-01 13:51:58'), 'max': Timestamp('2018-08-01 13:51:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
119588,CVE-2018-6188,"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",2018-02-05 03:29:00,django.contrib,2019-03-12 17:54:00,2024-03-19 16:38:30.653600,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,82189.0,django,2.0,Direct,django,2.0,,,False,2.0,2.0.2,"{'mean': 60.0, 'median': 60.0, 'std': nan, 'min': 60, 'max': 60}","{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-02-01 14:30:13'), 'median': Timestamp('2018-02-01 14:30:13'), 'std': NaT, 'min': Timestamp('2018-02-01 14:30:13'), 'max': Timestamp('2018-02-01 14:30:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,82189.0,django,2.0,Direct,django,2.0,,,False,2.0,2.0.3,"{'mean': 93.0, 'median': 93.0, 'std': nan, 'min': 93, 'max': 93}","{'mean': 97.0, 'median': 97.0, 'std': nan, 'min': 97, 'max': 97}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:05:32'), 'median': Timestamp('2018-03-06 14:05:32'), 'std': NaT, 'min': Timestamp('2018-03-06 14:05:32'), 'max': Timestamp('2018-03-06 14:05:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,2,0,82189.0,django,2.0,Direct,django,2.0,,,False,2.0,2.0.3,"{'mean': 93.0, 'median': 93.0, 'std': nan, 'min': 93, 'max': 93}","{'mean': 97.0, 'median': 97.0, 'std': nan, 'min': 97, 'max': 97}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:05:32'), 'median': Timestamp('2018-03-06 14:05:32'), 'std': NaT, 'min': Timestamp('2018-03-06 14:05:32'), 'max': Timestamp('2018-03-06 14:05:32')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85188.0,django,1.11.29,Direct,django,1.11.29,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85180.0,django,1.11.28,Direct,django,1.11.28,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85180.0,django,1.11.28,Direct,django,1.11.28,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85178.0,django,1.11.27,Direct,django,1.11.27,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85178.0,django,1.11.27,Direct,django,1.11.27,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85178.0,django,1.11.27,Direct,django,1.11.27,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85162.0,django,1.11.26,Direct,django,1.11.26,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.26,Direct,django,1.11.26,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85162.0,django,1.11.26,Direct,django,1.11.26,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.26,Direct,django,1.11.26,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85162.0,django,1.11.25,Direct,django,1.11.25,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.25,Direct,django,1.11.25,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85162.0,django,1.11.25,Direct,django,1.11.25,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.25,Direct,django,1.11.25,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85162.0,django,1.11.24,Direct,django,1.11.24,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.24,Direct,django,1.11.24,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85162.0,django,1.11.24,Direct,django,1.11.24,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.24,Direct,django,1.11.24,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85162.0,django,1.11.23,Direct,django,1.11.23,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.23,Direct,django,1.11.23,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85162.0,django,1.11.23,Direct,django,1.11.23,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.23,Direct,django,1.11.23,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85163.0,django,1.11.22,Direct,django,1.11.22,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85163.0,django,1.11.22,Direct,django,1.11.22,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85163.0,django,1.11.22,Direct,django,1.11.22,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85163.0,django,1.11.22,Direct,django,1.11.22,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85163.0,django,1.11.22,Direct,django,1.11.22,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85163.0,django,1.11.22,Direct,django,1.11.22,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85163.0,django,1.11.22,Direct,django,1.11.22,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85163.0,django,1.11.22,Direct,django,1.11.22,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85162.0,django,1.11.21,Direct,django,1.11.21,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.21,Direct,django,1.11.21,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85162.0,django,1.11.21,Direct,django,1.11.21,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85162.0,django,1.11.21,Direct,django,1.11.21,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85162.0,django,1.11.21,Direct,django,1.11.21,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85162.0,django,1.11.21,Direct,django,1.11.21,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.21,Direct,django,1.11.21,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85162.0,django,1.11.21,Direct,django,1.11.21,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85162.0,django,1.11.21,Direct,django,1.11.21,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85154.0,django,1.11.20,Direct,django,1.11.20,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85143.0,django,1.11.18,Direct,django,1.11.18,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85142.0,django,1.11.17,Direct,django,1.11.17,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85143.0,django,1.11.16,Direct,django,1.11.16,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85142.0,django,1.11.15,Direct,django,1.11.15,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85136.0,django,1.11.14,Direct,django,1.11.14,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85119.0,django,1.11.13,Direct,django,1.11.13,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85112.0,django,1.11.12,Direct,django,1.11.12,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85109.0,django,1.11.11,Direct,django,1.11.11,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85105.0,django,1.11.10,Direct,django,1.11.10,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
119588,CVE-2018-6188,"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",2018-02-05 03:29:00,django.contrib,2019-03-12 17:54:00,2024-03-19 16:38:30.653600,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11.8,1.11.10,"{'mean': 61.0, 'median': 61.0, 'std': nan, 'min': 61, 'max': 61}","{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-02-01 14:40:14'), 'median': Timestamp('2018-02-01 14:40:14'), 'std': NaT, 'min': Timestamp('2018-02-01 14:40:14'), 'max': Timestamp('2018-02-01 14:40:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85109.0,django,1.11.9,Direct,django,1.11.9,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
119588,CVE-2018-6188,"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",2018-02-05 03:29:00,django.contrib,2019-03-12 17:54:00,2024-03-19 16:38:30.653600,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11.8,1.11.10,"{'mean': 61.0, 'median': 61.0, 'std': nan, 'min': 61, 'max': 61}","{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-02-01 14:40:14'), 'median': Timestamp('2018-02-01 14:40:14'), 'std': NaT, 'min': Timestamp('2018-02-01 14:40:14'), 'max': Timestamp('2018-02-01 14:40:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85101.0,django,1.11.8,Direct,django,1.11.8,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85057.0,django,1.11.7,Direct,django,1.11.7,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85053.0,django,1.11.6,Direct,django,1.11.6,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85050.0,django,1.11.5,Direct,django,1.11.5,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,85023.0,django,1.11.4,Direct,django,1.11.4,,,False,1.11.1,1.11.5,"{'mean': 122.0, 'median': 122.0, 'std': nan, 'min': 122, 'max': 122}","{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:18:53'), 'median': Timestamp('2017-09-05 15:18:53'), 'std': NaT, 'min': Timestamp('2017-09-05 15:18:53'), 'max': Timestamp('2017-09-05 15:18:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84991.0,django,1.11.3,Direct,django,1.11.3,,,False,1.11.1,1.11.5,"{'mean': 122.0, 'median': 122.0, 'std': nan, 'min': 122, 'max': 122}","{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:18:53'), 'median': Timestamp('2017-09-05 15:18:53'), 'std': NaT, 'min': Timestamp('2017-09-05 15:18:53'), 'max': Timestamp('2017-09-05 15:18:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84946.0,django,1.11.2,Direct,django,1.11.2,,,False,1.11.1,1.11.5,"{'mean': 122.0, 'median': 122.0, 'std': nan, 'min': 122, 'max': 122}","{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:18:53'), 'median': Timestamp('2017-09-05 15:18:53'), 'std': NaT, 'min': Timestamp('2017-09-05 15:18:53'), 'max': Timestamp('2017-09-05 15:18:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84914.0,django,1.11.1,Direct,django,1.11.1,,,False,1.11.1,1.11.5,"{'mean': 122.0, 'median': 122.0, 'std': nan, 'min': 122, 'max': 122}","{'mean': 124.0, 'median': 124.0, 'std': nan, 'min': 124, 'max': 124}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:18:53'), 'median': Timestamp('2017-09-05 15:18:53'), 'std': NaT, 'min': Timestamp('2017-09-05 15:18:53'), 'max': Timestamp('2017-09-05 15:18:53')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,django.contrib,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.28,"{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': 1034.0, 'median': 1034.0, 'std': nan, 'min': 1034, 'max': 1034}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2020-02-03 09:50:36'), 'median': Timestamp('2020-02-03 09:50:36'), 'std': NaT, 'min': Timestamp('2020-02-03 09:50:36'), 'max': Timestamp('2020-02-03 09:50:36')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,-,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.29,"{'mean': 1064.0, 'median': 1064.0, 'std': nan, 'min': 1064, 'max': 1064}","{'mean': 1065.0, 'median': 1065.0, 'std': nan, 'min': 1065, 'max': 1065}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2020-03-04 09:31:46'), 'median': Timestamp('2020-03-04 09:31:46'), 'std': NaT, 'min': Timestamp('2020-03-04 09:31:46'), 'max': Timestamp('2020-03-04 09:31:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,django.contrib,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.21,"{'mean': 789.0, 'median': 789.0, 'std': nan, 'min': 789, 'max': 789}","{'mean': 790.0, 'median': 790.0, 'std': nan, 'min': 790, 'max': 790}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-06-03 10:10:58'), 'median': Timestamp('2019-06-03 10:10:58'), 'std': NaT, 'min': Timestamp('2019-06-03 10:10:58'), 'max': Timestamp('2019-06-03 10:10:58')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,django.http,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.22,"{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': 817.0, 'median': 817.0, 'std': nan, 'min': 817, 'max': 817}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-07-01 07:19:13'), 'median': Timestamp('2019-07-01 07:19:13'), 'std': NaT, 'min': Timestamp('2019-07-01 07:19:13'), 'max': Timestamp('2019-07-01 07:19:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,django.contrib,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 856.0, 'median': 856.0, 'std': nan, 'min': 856, 'max': 856}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,django.utils,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.23,"{'mean': 848.0, 'median': 848.0, 'std': nan, 'min': 848, 'max': 848}","{'mean': 849.0, 'median': 849.0, 'std': nan, 'min': 849, 'max': 849}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2019-08-01 09:04:24'), 'median': Timestamp('2019-08-01 09:04:24'), 'std': NaT, 'min': Timestamp('2019-08-01 09:04:24'), 'max': Timestamp('2019-08-01 09:04:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,django.views,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.18,"{'mean': 639.0, 'median': 639.0, 'std': nan, 'min': 639, 'max': 639}","{'mean': 645.0, 'median': 645.0, 'std': nan, 'min': 645, 'max': 645}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2019-01-04 14:10:44'), 'median': Timestamp('2019-01-04 14:10:44'), 'std': NaT, 'min': Timestamp('2019-01-04 14:10:44'), 'max': Timestamp('2019-01-04 14:10:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,django.utils,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11.0,1.11.19,"{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 3191.0, 'median': 3191.0, 'std': nan, 'min': 3191, 'max': 3191}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': nan, 'median': nan, 'std': nan, 'min': nan, 'max': nan}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,django.middleware,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.15,"{'mean': 483.0, 'median': 483.0, 'std': nan, 'min': 483, 'max': 483}","{'mean': 486.0, 'median': 486.0, 'std': nan, 'min': 486, 'max': 486}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2018-08-01 13:45:07'), 'median': Timestamp('2018-08-01 13:45:07'), 'std': NaT, 'min': Timestamp('2018-08-01 13:45:07'), 'max': Timestamp('2018-08-01 13:45:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,11,84872.0,django,1.11,Direct,django,1.11,,,False,1.11,1.11.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 339.0, 'median': 339.0, 'std': nan, 'min': 339, 'max': 339}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:15:57'), 'median': Timestamp('2018-03-06 14:15:57'), 'std': NaT, 'min': Timestamp('2018-03-06 14:15:57'), 'max': Timestamp('2018-03-06 14:15:57')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,83118.0,django,1.10.8,Direct,django,1.10.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,83118.0,django,1.10.8,Direct,django,1.10.8,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,83120.0,django,1.10.7,Direct,django,1.10.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,83120.0,django,1.10.7,Direct,django,1.10.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83120.0,django,1.10.7,Direct,django,1.10.7,,,False,1.10.1,1.10.8,"{'mean': 368.0, 'median': 368.0, 'std': nan, 'min': 368, 'max': 368}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:31:48'), 'median': Timestamp('2017-09-05 15:31:48'), 'std': NaT, 'min': Timestamp('2017-09-05 15:31:48'), 'max': Timestamp('2017-09-05 15:31:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,83084.0,django,1.10.6,Direct,django,1.10.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,83084.0,django,1.10.6,Direct,django,1.10.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83084.0,django,1.10.6,Direct,django,1.10.6,,,False,1.10.1,1.10.8,"{'mean': 368.0, 'median': 368.0, 'std': nan, 'min': 368, 'max': 368}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:31:48'), 'median': Timestamp('2017-09-05 15:31:48'), 'std': NaT, 'min': Timestamp('2017-09-05 15:31:48'), 'max': Timestamp('2017-09-05 15:31:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83084.0,django,1.10.6,Direct,django,1.10.6,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83084.0,django,1.10.6,Direct,django,1.10.6,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,83077.0,django,1.10.5,Direct,django,1.10.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,83077.0,django,1.10.5,Direct,django,1.10.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83077.0,django,1.10.5,Direct,django,1.10.5,,,False,1.10.1,1.10.8,"{'mean': 368.0, 'median': 368.0, 'std': nan, 'min': 368, 'max': 368}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:31:48'), 'median': Timestamp('2017-09-05 15:31:48'), 'std': NaT, 'min': Timestamp('2017-09-05 15:31:48'), 'max': Timestamp('2017-09-05 15:31:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83077.0,django,1.10.5,Direct,django,1.10.5,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83077.0,django,1.10.5,Direct,django,1.10.5,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,83056.0,django,1.10.4,Direct,django,1.10.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,83056.0,django,1.10.4,Direct,django,1.10.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83056.0,django,1.10.4,Direct,django,1.10.4,,,False,1.10.1,1.10.8,"{'mean': 368.0, 'median': 368.0, 'std': nan, 'min': 368, 'max': 368}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:31:48'), 'median': Timestamp('2017-09-05 15:31:48'), 'std': NaT, 'min': Timestamp('2017-09-05 15:31:48'), 'max': Timestamp('2017-09-05 15:31:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83056.0,django,1.10.4,Direct,django,1.10.4,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83056.0,django,1.10.4,Direct,django,1.10.4,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,83052.0,django,1.10.3,Direct,django,1.10.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,83052.0,django,1.10.3,Direct,django,1.10.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83052.0,django,1.10.3,Direct,django,1.10.3,,,False,1.10.1,1.10.8,"{'mean': 368.0, 'median': 368.0, 'std': nan, 'min': 368, 'max': 368}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:31:48'), 'median': Timestamp('2017-09-05 15:31:48'), 'std': NaT, 'min': Timestamp('2017-09-05 15:31:48'), 'max': Timestamp('2017-09-05 15:31:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83052.0,django,1.10.3,Direct,django,1.10.3,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83052.0,django,1.10.3,Direct,django,1.10.3,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,83032.0,django,1.10.2,Direct,django,1.10.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,83032.0,django,1.10.2,Direct,django,1.10.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83032.0,django,1.10.2,Direct,django,1.10.2,,,False,1.10.1,1.10.8,"{'mean': 368.0, 'median': 368.0, 'std': nan, 'min': 368, 'max': 368}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:31:48'), 'median': Timestamp('2017-09-05 15:31:48'), 'std': NaT, 'min': Timestamp('2017-09-05 15:31:48'), 'max': Timestamp('2017-09-05 15:31:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83032.0,django,1.10.2,Direct,django,1.10.2,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,83032.0,django,1.10.2,Direct,django,1.10.2,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,83032.0,django,1.10.2,Direct,django,1.10.2,,,False,1.10,1.10.3,"{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 13:56:54'), 'median': Timestamp('2016-11-01 13:56:54'), 'std': NaT, 'min': Timestamp('2016-11-01 13:56:54'), 'max': Timestamp('2016-11-01 13:56:54')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,10,83032.0,django,1.10.2,Direct,django,1.10.2,,,False,1.10,1.10.3,"{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 13:56:54'), 'median': Timestamp('2016-11-01 13:56:54'), 'std': NaT, 'min': Timestamp('2016-11-01 13:56:54'), 'max': Timestamp('2016-11-01 13:56:54')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,82990.0,django,1.10.1,Direct,django,1.10.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,82990.0,django,1.10.1,Direct,django,1.10.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,-,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,82990.0,django,1.10.1,Direct,django,1.10.1,,,False,1.10.1,1.10.8,"{'mean': 368.0, 'median': 368.0, 'std': nan, 'min': 368, 'max': 368}","{'mean': 370.0, 'median': 370.0, 'std': nan, 'min': 370, 'max': 370}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2017-09-05 15:31:48'), 'median': Timestamp('2017-09-05 15:31:48'), 'std': NaT, 'min': Timestamp('2017-09-05 15:31:48'), 'max': Timestamp('2017-09-05 15:31:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,82990.0,django,1.10.1,Direct,django,1.10.1,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,82990.0,django,1.10.1,Direct,django,1.10.1,,,False,1.10.1,1.10.7,"{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': 214.0, 'median': 214.0, 'std': nan, 'min': 214, 'max': 214}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:27:40'), 'median': Timestamp('2017-04-04 14:27:40'), 'std': NaT, 'min': Timestamp('2017-04-04 14:27:40'), 'max': Timestamp('2017-04-04 14:27:40')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,82990.0,django,1.10.1,Direct,django,1.10.1,,,False,1.10,1.10.3,"{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 13:56:54'), 'median': Timestamp('2016-11-01 13:56:54'), 'std': NaT, 'min': Timestamp('2016-11-01 13:56:54'), 'max': Timestamp('2016-11-01 13:56:54')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,10,82990.0,django,1.10.1,Direct,django,1.10.1,,,False,1.10,1.10.3,"{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 13:56:54'), 'median': Timestamp('2016-11-01 13:56:54'), 'std': NaT, 'min': Timestamp('2016-11-01 13:56:54'), 'max': Timestamp('2016-11-01 13:56:54')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,10,82928.0,django,1.10,Direct,django,1.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,82928.0,django,1.10,Direct,django,1.10,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,10,82928.0,django,1.10,Direct,django,1.10,,,False,1.10,1.10.1,"{'mean': 31.0, 'median': 31.0, 'std': nan, 'min': 31, 'max': 31}","{'mean': 3.0, 'median': 3.0, 'std': nan, 'min': 3, 'max': 3}","{'mean': 27.0, 'median': 27.0, 'std': nan, 'min': 27, 'max': 27}","{'mean': Timestamp('2016-09-01 23:17:41'), 'median': Timestamp('2016-09-01 23:17:41'), 'std': NaT, 'min': Timestamp('2016-09-01 23:17:41'), 'max': Timestamp('2016-09-01 23:17:41')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,10,82928.0,django,1.10,Direct,django,1.10,,,False,1.10,1.10.3,"{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 13:56:54'), 'median': Timestamp('2016-11-01 13:56:54'), 'std': NaT, 'min': Timestamp('2016-11-01 13:56:54'), 'max': Timestamp('2016-11-01 13:56:54')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,10,82928.0,django,1.10,Direct,django,1.10,,,False,1.10,1.10.3,"{'mean': 91.0, 'median': 91.0, 'std': nan, 'min': 91, 'max': 91}","{'mean': 130.0, 'median': 130.0, 'std': nan, 'min': 130, 'max': 130}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 13:56:54'), 'median': Timestamp('2016-11-01 13:56:54'), 'std': NaT, 'min': Timestamp('2016-11-01 13:56:54'), 'max': Timestamp('2016-11-01 13:56:54')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81147.0,django,1.9.13,Direct,django,1.9.13,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81147.0,django,1.9.13,Direct,django,1.9.13,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81107.0,django,1.9.12,Direct,django,1.9.12,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81107.0,django,1.9.12,Direct,django,1.9.12,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81107.0,django,1.9.12,Direct,django,1.9.12,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81107.0,django,1.9.12,Direct,django,1.9.12,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81107.0,django,1.9.11,Direct,django,1.9.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81107.0,django,1.9.11,Direct,django,1.9.11,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81107.0,django,1.9.11,Direct,django,1.9.11,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81107.0,django,1.9.11,Direct,django,1.9.11,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81100.0,django,1.9.10,Direct,django,1.9.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81100.0,django,1.9.10,Direct,django,1.9.10,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81100.0,django,1.9.10,Direct,django,1.9.10,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81100.0,django,1.9.10,Direct,django,1.9.10,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81100.0,django,1.9.10,Direct,django,1.9.10,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81100.0,django,1.9.10,Direct,django,1.9.10,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81102.0,django,1.9.9,Direct,django,1.9.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81102.0,django,1.9.9,Direct,django,1.9.9,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81102.0,django,1.9.9,Direct,django,1.9.9,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81102.0,django,1.9.9,Direct,django,1.9.9,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,81102.0,django,1.9.9,Direct,django,1.9.9,,,False,1.9.1,1.9.10,"{'mean': 268.0, 'median': 268.0, 'std': nan, 'min': 268, 'max': 268}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:32:46'), 'median': Timestamp('2016-09-26 18:32:46'), 'std': NaT, 'min': Timestamp('2016-09-26 18:32:46'), 'max': Timestamp('2016-09-26 18:32:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81102.0,django,1.9.9,Direct,django,1.9.9,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81102.0,django,1.9.9,Direct,django,1.9.9,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81103.0,django,1.9.8,Direct,django,1.9.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81103.0,django,1.9.8,Direct,django,1.9.8,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81103.0,django,1.9.8,Direct,django,1.9.8,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81103.0,django,1.9.8,Direct,django,1.9.8,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,81103.0,django,1.9.8,Direct,django,1.9.8,,,False,1.9.1,1.9.10,"{'mean': 268.0, 'median': 268.0, 'std': nan, 'min': 268, 'max': 268}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:32:46'), 'median': Timestamp('2016-09-26 18:32:46'), 'std': NaT, 'min': Timestamp('2016-09-26 18:32:46'), 'max': Timestamp('2016-09-26 18:32:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81103.0,django,1.9.8,Direct,django,1.9.8,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81103.0,django,1.9.8,Direct,django,1.9.8,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81105.0,django,1.9.7,Direct,django,1.9.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81105.0,django,1.9.7,Direct,django,1.9.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81105.0,django,1.9.7,Direct,django,1.9.7,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81105.0,django,1.9.7,Direct,django,1.9.7,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81105.0,django,1.9.7,Direct,django,1.9.7,,,False,1.9.0,1.9.8,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:19:55'), 'median': Timestamp('2016-07-18 18:19:55'), 'std': NaT, 'min': Timestamp('2016-07-18 18:19:55'), 'max': Timestamp('2016-07-18 18:19:55')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,81105.0,django,1.9.7,Direct,django,1.9.7,,,False,1.9.1,1.9.10,"{'mean': 268.0, 'median': 268.0, 'std': nan, 'min': 268, 'max': 268}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:32:46'), 'median': Timestamp('2016-09-26 18:32:46'), 'std': NaT, 'min': Timestamp('2016-09-26 18:32:46'), 'max': Timestamp('2016-09-26 18:32:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81105.0,django,1.9.7,Direct,django,1.9.7,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81105.0,django,1.9.7,Direct,django,1.9.7,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81094.0,django,1.9.6,Direct,django,1.9.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81094.0,django,1.9.6,Direct,django,1.9.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81094.0,django,1.9.6,Direct,django,1.9.6,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81094.0,django,1.9.6,Direct,django,1.9.6,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81094.0,django,1.9.6,Direct,django,1.9.6,,,False,1.9.0,1.9.8,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:19:55'), 'median': Timestamp('2016-07-18 18:19:55'), 'std': NaT, 'min': Timestamp('2016-07-18 18:19:55'), 'max': Timestamp('2016-07-18 18:19:55')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,81094.0,django,1.9.6,Direct,django,1.9.6,,,False,1.9.1,1.9.10,"{'mean': 268.0, 'median': 268.0, 'std': nan, 'min': 268, 'max': 268}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:32:46'), 'median': Timestamp('2016-09-26 18:32:46'), 'std': NaT, 'min': Timestamp('2016-09-26 18:32:46'), 'max': Timestamp('2016-09-26 18:32:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81094.0,django,1.9.6,Direct,django,1.9.6,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81094.0,django,1.9.6,Direct,django,1.9.6,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81078.0,django,1.9.5,Direct,django,1.9.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81078.0,django,1.9.5,Direct,django,1.9.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81078.0,django,1.9.5,Direct,django,1.9.5,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81078.0,django,1.9.5,Direct,django,1.9.5,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81078.0,django,1.9.5,Direct,django,1.9.5,,,False,1.9.0,1.9.8,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:19:55'), 'median': Timestamp('2016-07-18 18:19:55'), 'std': NaT, 'min': Timestamp('2016-07-18 18:19:55'), 'max': Timestamp('2016-07-18 18:19:55')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,81078.0,django,1.9.5,Direct,django,1.9.5,,,False,1.9.1,1.9.10,"{'mean': 268.0, 'median': 268.0, 'std': nan, 'min': 268, 'max': 268}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:32:46'), 'median': Timestamp('2016-09-26 18:32:46'), 'std': NaT, 'min': Timestamp('2016-09-26 18:32:46'), 'max': Timestamp('2016-09-26 18:32:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81078.0,django,1.9.5,Direct,django,1.9.5,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81078.0,django,1.9.5,Direct,django,1.9.5,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81036.0,django,1.9.4,Direct,django,1.9.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81036.0,django,1.9.4,Direct,django,1.9.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81036.0,django,1.9.4,Direct,django,1.9.4,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81036.0,django,1.9.4,Direct,django,1.9.4,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81036.0,django,1.9.4,Direct,django,1.9.4,,,False,1.9.0,1.9.8,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:19:55'), 'median': Timestamp('2016-07-18 18:19:55'), 'std': NaT, 'min': Timestamp('2016-07-18 18:19:55'), 'max': Timestamp('2016-07-18 18:19:55')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,81036.0,django,1.9.4,Direct,django,1.9.4,,,False,1.9.1,1.9.10,"{'mean': 268.0, 'median': 268.0, 'std': nan, 'min': 268, 'max': 268}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:32:46'), 'median': Timestamp('2016-09-26 18:32:46'), 'std': NaT, 'min': Timestamp('2016-09-26 18:32:46'), 'max': Timestamp('2016-09-26 18:32:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81036.0,django,1.9.4,Direct,django,1.9.4,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81036.0,django,1.9.4,Direct,django,1.9.4,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81031.0,django,1.9.3,Direct,django,1.9.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81031.0,django,1.9.3,Direct,django,1.9.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81031.0,django,1.9.3,Direct,django,1.9.3,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81031.0,django,1.9.3,Direct,django,1.9.3,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81031.0,django,1.9.3,Direct,django,1.9.3,,,False,1.9.0,1.9.8,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:19:55'), 'median': Timestamp('2016-07-18 18:19:55'), 'std': NaT, 'min': Timestamp('2016-07-18 18:19:55'), 'max': Timestamp('2016-07-18 18:19:55')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,81031.0,django,1.9.3,Direct,django,1.9.3,,,False,1.9.1,1.9.10,"{'mean': 268.0, 'median': 268.0, 'std': nan, 'min': 268, 'max': 268}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:32:46'), 'median': Timestamp('2016-09-26 18:32:46'), 'std': NaT, 'min': Timestamp('2016-09-26 18:32:46'), 'max': Timestamp('2016-09-26 18:32:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81031.0,django,1.9.3,Direct,django,1.9.3,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81031.0,django,1.9.3,Direct,django,1.9.3,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
140115,CVE-2016-2512,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",2016-04-08 15:59:00,django.utils,2017-09-08 01:29:00,2024-03-19 16:47:46.420635,3.0,2.8,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,NONE,HIGH,NONE,7.4,HIGH,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.9,1.9.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 128.0, 'median': 128.0, 'std': nan, 'min': 128, 'max': 128}","{'mean': -38.0, 'median': -38.0, 'std': nan, 'min': -38, 'max': -38}","{'mean': Timestamp('2016-03-01 17:00:44'), 'median': Timestamp('2016-03-01 17:00:44'), 'std': NaT, 'min': Timestamp('2016-03-01 17:00:44'), 'max': Timestamp('2016-03-01 17:00:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
140116,CVE-2016-2513,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,2016-04-08 15:59:00,django.contrib,2017-09-08 01:29:00,2024-03-19 16:47:46.439159,3.0,1.6,1.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,LOW,NONE,NONE,3.1,LOW,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.9,1.9.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 128.0, 'median': 128.0, 'std': nan, 'min': 128, 'max': 128}","{'mean': -38.0, 'median': -38.0, 'std': nan, 'min': -38, 'max': -38}","{'mean': Timestamp('2016-03-01 17:00:44'), 'median': Timestamp('2016-03-01 17:00:44'), 'std': NaT, 'min': Timestamp('2016-03-01 17:00:44'), 'max': Timestamp('2016-03-01 17:00:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.9.0,1.9.8,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:19:55'), 'median': Timestamp('2016-07-18 18:19:55'), 'std': NaT, 'min': Timestamp('2016-07-18 18:19:55'), 'max': Timestamp('2016-07-18 18:19:55')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.9.1,1.9.10,"{'mean': 268.0, 'median': 268.0, 'std': nan, 'min': 268, 'max': 268}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:32:46'), 'median': Timestamp('2016-09-26 18:32:46'), 'std': NaT, 'min': Timestamp('2016-09-26 18:32:46'), 'max': Timestamp('2016-09-26 18:32:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,80986.0,django,1.9.2,Direct,django,1.9.2,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
139730,CVE-2016-2048,"Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the ""Save as New"" option when editing objects and leveraging the ""change"" permission.",2016-02-08 19:59:00,django.contrib,2016-11-28 20:02:00,2024-03-19 16:47:34.817796,3.0,1.2,4.2,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,LOW,HIGH,NONE,5.5,MEDIUM,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.9,1.9.2,"{'mean': 61.0, 'median': 61.0, 'std': nan, 'min': 61, 'max': 61}","{'mean': 68.0, 'median': 68.0, 'std': nan, 'min': 68, 'max': 68}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-02-01 17:17:18'), 'median': Timestamp('2016-02-01 17:17:18'), 'std': NaT, 'min': Timestamp('2016-02-01 17:17:18'), 'max': Timestamp('2016-02-01 17:17:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
140115,CVE-2016-2512,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",2016-04-08 15:59:00,django.utils,2017-09-08 01:29:00,2024-03-19 16:47:46.420635,3.0,2.8,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,NONE,HIGH,NONE,7.4,HIGH,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.9,1.9.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 128.0, 'median': 128.0, 'std': nan, 'min': 128, 'max': 128}","{'mean': -38.0, 'median': -38.0, 'std': nan, 'min': -38, 'max': -38}","{'mean': Timestamp('2016-03-01 17:00:44'), 'median': Timestamp('2016-03-01 17:00:44'), 'std': NaT, 'min': Timestamp('2016-03-01 17:00:44'), 'max': Timestamp('2016-03-01 17:00:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
140116,CVE-2016-2513,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,2016-04-08 15:59:00,django.contrib,2017-09-08 01:29:00,2024-03-19 16:47:46.439159,3.0,1.6,1.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,LOW,NONE,NONE,3.1,LOW,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.9,1.9.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 128.0, 'median': 128.0, 'std': nan, 'min': 128, 'max': 128}","{'mean': -38.0, 'median': -38.0, 'std': nan, 'min': -38, 'max': -38}","{'mean': Timestamp('2016-03-01 17:00:44'), 'median': Timestamp('2016-03-01 17:00:44'), 'std': NaT, 'min': Timestamp('2016-03-01 17:00:44'), 'max': Timestamp('2016-03-01 17:00:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.9.0,1.9.8,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:19:55'), 'median': Timestamp('2016-07-18 18:19:55'), 'std': NaT, 'min': Timestamp('2016-07-18 18:19:55'), 'max': Timestamp('2016-07-18 18:19:55')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.9.1,1.9.10,"{'mean': 268.0, 'median': 268.0, 'std': nan, 'min': 268, 'max': 268}","{'mean': 275.0, 'median': 275.0, 'std': nan, 'min': 275, 'max': 275}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:32:46'), 'median': Timestamp('2016-09-26 18:32:46'), 'std': NaT, 'min': Timestamp('2016-09-26 18:32:46'), 'max': Timestamp('2016-09-26 18:32:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81057.0,django,1.9.1,Direct,django,1.9.1,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.9,1.9.13,"{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': 489.0, 'median': 489.0, 'std': nan, 'min': 489, 'max': 489}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:14:50'), 'median': Timestamp('2017-04-04 14:14:50'), 'std': NaT, 'min': Timestamp('2017-04-04 14:14:50'), 'max': Timestamp('2017-04-04 14:14:50')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
139730,CVE-2016-2048,"Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the ""Save as New"" option when editing objects and leveraging the ""change"" permission.",2016-02-08 19:59:00,django.contrib,2016-11-28 20:02:00,2024-03-19 16:47:34.817796,3.0,1.2,4.2,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,LOW,HIGH,NONE,5.5,MEDIUM,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.9,1.9.2,"{'mean': 61.0, 'median': 61.0, 'std': nan, 'min': 61, 'max': 61}","{'mean': 68.0, 'median': 68.0, 'std': nan, 'min': 68, 'max': 68}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-02-01 17:17:18'), 'median': Timestamp('2016-02-01 17:17:18'), 'std': NaT, 'min': Timestamp('2016-02-01 17:17:18'), 'max': Timestamp('2016-02-01 17:17:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
140115,CVE-2016-2512,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",2016-04-08 15:59:00,django.utils,2017-09-08 01:29:00,2024-03-19 16:47:46.420635,3.0,2.8,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,NONE,HIGH,NONE,7.4,HIGH,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.9,1.9.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 128.0, 'median': 128.0, 'std': nan, 'min': 128, 'max': 128}","{'mean': -38.0, 'median': -38.0, 'std': nan, 'min': -38, 'max': -38}","{'mean': Timestamp('2016-03-01 17:00:44'), 'median': Timestamp('2016-03-01 17:00:44'), 'std': NaT, 'min': Timestamp('2016-03-01 17:00:44'), 'max': Timestamp('2016-03-01 17:00:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
140116,CVE-2016-2513,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,2016-04-08 15:59:00,django.contrib,2017-09-08 01:29:00,2024-03-19 16:47:46.439159,3.0,1.6,1.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,LOW,NONE,NONE,3.1,LOW,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.9,1.9.3,"{'mean': 90.0, 'median': 90.0, 'std': nan, 'min': 90, 'max': 90}","{'mean': 128.0, 'median': 128.0, 'std': nan, 'min': 128, 'max': 128}","{'mean': -38.0, 'median': -38.0, 'std': nan, 'min': -38, 'max': -38}","{'mean': Timestamp('2016-03-01 17:00:44'), 'median': Timestamp('2016-03-01 17:00:44'), 'std': NaT, 'min': Timestamp('2016-03-01 17:00:44'), 'max': Timestamp('2016-03-01 17:00:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.9.0,1.9.8,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:19:55'), 'median': Timestamp('2016-07-18 18:19:55'), 'std': NaT, 'min': Timestamp('2016-07-18 18:19:55'), 'max': Timestamp('2016-07-18 18:19:55')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,9,81007.0,django,1.9,Direct,django,1.9,,,False,1.9,1.9.11,"{'mean': 335.0, 'median': 335.0, 'std': nan, 'min': 335, 'max': 335}","{'mean': 373.0, 'median': 373.0, 'std': nan, 'min': 373, 'max': 373}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:02:12'), 'median': Timestamp('2016-11-01 14:02:12'), 'std': NaT, 'min': Timestamp('2016-11-01 14:02:12'), 'max': Timestamp('2016-11-01 14:02:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79833.0,django,1.8.19,Direct,django,1.8.19,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79833.0,django,1.8.19,Direct,django,1.8.19,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79824.0,django,1.8.18,Direct,django,1.8.18,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79824.0,django,1.8.18,Direct,django,1.8.18,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79824.0,django,1.8.18,Direct,django,1.8.18,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79824.0,django,1.8.18,Direct,django,1.8.18,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79791.0,django,1.8.17,Direct,django,1.8.17,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79791.0,django,1.8.17,Direct,django,1.8.17,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79791.0,django,1.8.17,Direct,django,1.8.17,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79791.0,django,1.8.17,Direct,django,1.8.17,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79791.0,django,1.8.17,Direct,django,1.8.17,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79791.0,django,1.8.17,Direct,django,1.8.17,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79791.0,django,1.8.16,Direct,django,1.8.16,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79791.0,django,1.8.16,Direct,django,1.8.16,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79791.0,django,1.8.16,Direct,django,1.8.16,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79791.0,django,1.8.16,Direct,django,1.8.16,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79791.0,django,1.8.16,Direct,django,1.8.16,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79791.0,django,1.8.16,Direct,django,1.8.16,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79784.0,django,1.8.15,Direct,django,1.8.15,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79784.0,django,1.8.15,Direct,django,1.8.15,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79784.0,django,1.8.15,Direct,django,1.8.15,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79784.0,django,1.8.15,Direct,django,1.8.15,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79784.0,django,1.8.15,Direct,django,1.8.15,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79784.0,django,1.8.15,Direct,django,1.8.15,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79784.0,django,1.8.15,Direct,django,1.8.15,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79784.0,django,1.8.15,Direct,django,1.8.15,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79786.0,django,1.8.14,Direct,django,1.8.14,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79786.0,django,1.8.14,Direct,django,1.8.14,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79786.0,django,1.8.14,Direct,django,1.8.14,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79786.0,django,1.8.14,Direct,django,1.8.14,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79786.0,django,1.8.14,Direct,django,1.8.14,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79786.0,django,1.8.14,Direct,django,1.8.14,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79786.0,django,1.8.14,Direct,django,1.8.14,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79786.0,django,1.8.14,Direct,django,1.8.14,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79786.0,django,1.8.14,Direct,django,1.8.14,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79788.0,django,1.8.13,Direct,django,1.8.13,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79788.0,django,1.8.12,Direct,django,1.8.12,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79787.0,django,1.8.11,Direct,django,1.8.11,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79782.0,django,1.8.10,Direct,django,1.8.10,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
140115,CVE-2016-2512,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",2016-04-08 15:59:00,django.utils,2017-09-08 01:29:00,2024-03-19 16:47:46.420635,3.0,2.8,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,NONE,HIGH,NONE,7.4,HIGH,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.8.9,1.8.10,"{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': 66.0, 'median': 66.0, 'std': nan, 'min': 66, 'max': 66}","{'mean': -38.0, 'median': -38.0, 'std': nan, 'min': -38, 'max': -38}","{'mean': Timestamp('2016-03-01 17:10:07'), 'median': Timestamp('2016-03-01 17:10:07'), 'std': NaT, 'min': Timestamp('2016-03-01 17:10:07'), 'max': Timestamp('2016-03-01 17:10:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
140116,CVE-2016-2513,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,2016-04-08 15:59:00,django.contrib,2017-09-08 01:29:00,2024-03-19 16:47:46.439159,3.0,1.6,1.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,LOW,NONE,NONE,3.1,LOW,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.8.9,1.8.10,"{'mean': 28.0, 'median': 28.0, 'std': nan, 'min': 28, 'max': 28}","{'mean': 66.0, 'median': 66.0, 'std': nan, 'min': 66, 'max': 66}","{'mean': -38.0, 'median': -38.0, 'std': nan, 'min': -38, 'max': -38}","{'mean': Timestamp('2016-03-01 17:10:07'), 'median': Timestamp('2016-03-01 17:10:07'), 'std': NaT, 'min': Timestamp('2016-03-01 17:10:07'), 'max': Timestamp('2016-03-01 17:10:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79742.0,django,1.8.9,Direct,django,1.8.9,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79716.0,django,1.8.8,Direct,django,1.8.8,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79686.0,django,1.8.7,Direct,django,1.8.7,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,79606.0,django,1.8.6,Direct,django,1.8.6,,,False,1.8.1,1.8.7,"{'mean': 206.0, 'median': 206.0, 'std': nan, 'min': 206, 'max': 206}","{'mean': 220.0, 'median': 220.0, 'std': nan, 'min': 220, 'max': 220}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:28:47'), 'median': Timestamp('2015-11-24 17:28:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:28:47'), 'max': Timestamp('2015-11-24 17:28:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,79513.0,django,1.8.5,Direct,django,1.8.5,,,False,1.8.1,1.8.7,"{'mean': 206.0, 'median': 206.0, 'std': nan, 'min': 206, 'max': 206}","{'mean': 220.0, 'median': 220.0, 'std': nan, 'min': 220, 'max': 220}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:28:47'), 'median': Timestamp('2015-11-24 17:28:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:28:47'), 'max': Timestamp('2015-11-24 17:28:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,79490.0,django,1.8.4,Direct,django,1.8.4,,,False,1.8.1,1.8.7,"{'mean': 206.0, 'median': 206.0, 'std': nan, 'min': 206, 'max': 206}","{'mean': 220.0, 'median': 220.0, 'std': nan, 'min': 220, 'max': 220}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:28:47'), 'median': Timestamp('2015-11-24 17:28:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:28:47'), 'max': Timestamp('2015-11-24 17:28:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.8,1.8.4,"{'mean': 138.0, 'median': 138.0, 'std': nan, 'min': 138, 'max': 138}","{'mean': 144.0, 'median': 144.0, 'std': nan, 'min': 144, 'max': 144}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:06:21'), 'median': Timestamp('2015-08-18 17:06:21'), 'std': NaT, 'min': Timestamp('2015-08-18 17:06:21'), 'max': Timestamp('2015-08-18 17:06:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.8,1.8.4,"{'mean': 138.0, 'median': 138.0, 'std': nan, 'min': 138, 'max': 138}","{'mean': 144.0, 'median': 144.0, 'std': nan, 'min': 144, 'max': 144}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:06:21'), 'median': Timestamp('2015-08-18 17:06:21'), 'std': NaT, 'min': Timestamp('2015-08-18 17:06:21'), 'max': Timestamp('2015-08-18 17:06:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,79452.0,django,1.8.3,Direct,django,1.8.3,,,False,1.8.1,1.8.7,"{'mean': 206.0, 'median': 206.0, 'std': nan, 'min': 206, 'max': 206}","{'mean': 220.0, 'median': 220.0, 'std': nan, 'min': 220, 'max': 220}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:28:47'), 'median': Timestamp('2015-11-24 17:28:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:28:47'), 'max': Timestamp('2015-11-24 17:28:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8.1,1.8.3,"{'mean': 67.0, 'median': 67.0, 'std': nan, 'min': 67, 'max': 67}","{'mean': 73.0, 'median': 73.0, 'std': nan, 'min': 73, 'max': 73}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:43:24'), 'median': Timestamp('2015-07-08 19:43:24'), 'std': NaT, 'min': Timestamp('2015-07-08 19:43:24'), 'max': Timestamp('2015-07-08 19:43:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8,1.8.3,"{'mean': 97.0, 'median': 97.0, 'std': nan, 'min': 97, 'max': 97}","{'mean': 103.0, 'median': 103.0, 'std': nan, 'min': 103, 'max': 103}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:43:24'), 'median': Timestamp('2015-07-08 19:43:24'), 'std': NaT, 'min': Timestamp('2015-07-08 19:43:24'), 'max': Timestamp('2015-07-08 19:43:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150410,CVE-2015-5145,validators.URLValidator in Django 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (CPU consumption) via unspecified vectors.,2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.704988,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8.1,1.8.3,"{'mean': 67.0, 'median': 67.0, 'std': nan, 'min': 67, 'max': 67}","{'mean': 73.0, 'median': 73.0, 'std': nan, 'min': 73, 'max': 73}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:43:24'), 'median': Timestamp('2015-07-08 19:43:24'), 'std': NaT, 'min': Timestamp('2015-07-08 19:43:24'), 'max': Timestamp('2015-07-08 19:43:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8,1.8.4,"{'mean': 138.0, 'median': 138.0, 'std': nan, 'min': 138, 'max': 138}","{'mean': 144.0, 'median': 144.0, 'std': nan, 'min': 144, 'max': 144}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:06:21'), 'median': Timestamp('2015-08-18 17:06:21'), 'std': NaT, 'min': Timestamp('2015-08-18 17:06:21'), 'max': Timestamp('2015-08-18 17:06:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8,1.8.4,"{'mean': 138.0, 'median': 138.0, 'std': nan, 'min': 138, 'max': 138}","{'mean': 144.0, 'median': 144.0, 'std': nan, 'min': 144, 'max': 144}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:06:21'), 'median': Timestamp('2015-08-18 17:06:21'), 'std': NaT, 'min': Timestamp('2015-08-18 17:06:21'), 'max': Timestamp('2015-08-18 17:06:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,79365.0,django,1.8.2,Direct,django,1.8.2,,,False,1.8.1,1.8.7,"{'mean': 206.0, 'median': 206.0, 'std': nan, 'min': 206, 'max': 206}","{'mean': 220.0, 'median': 220.0, 'std': nan, 'min': 220, 'max': 220}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:28:47'), 'median': Timestamp('2015-11-24 17:28:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:28:47'), 'max': Timestamp('2015-11-24 17:28:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,django.utils,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,django.views,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8.1,1.8.18,"{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': 703.0, 'median': 703.0, 'std': nan, 'min': 703, 'max': 703}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2017-04-04 14:07:38'), 'median': Timestamp('2017-04-04 14:07:38'), 'std': NaT, 'min': Timestamp('2017-04-04 14:07:38'), 'max': Timestamp('2017-04-04 14:07:38')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
149464,CVE-2015-3982,"The session.flush function in the cached_db backend in Django 1.8.x before 1.8.2 does not properly flush the session, which allows remote attackers to hijack user sessions via an empty string in the session key.",2015-06-02 14:59:00,django.contrib,2016-12-06 03:01:00,2024-03-19 16:51:57.176319,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,False,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8.1,1.8.2,"{'mean': 18.0, 'median': 18.0, 'std': nan, 'min': 18, 'max': 18}","{'mean': 31.0, 'median': 31.0, 'std': nan, 'min': 31, 'max': 31}","{'mean': -13.0, 'median': -13.0, 'std': nan, 'min': -13, 'max': -13}","{'mean': Timestamp('2015-05-20 18:02:14'), 'median': Timestamp('2015-05-20 18:02:14'), 'std': NaT, 'min': Timestamp('2015-05-20 18:02:14'), 'max': Timestamp('2015-05-20 18:02:14')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8.1,1.8.3,"{'mean': 67.0, 'median': 67.0, 'std': nan, 'min': 67, 'max': 67}","{'mean': 73.0, 'median': 73.0, 'std': nan, 'min': 73, 'max': 73}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:43:24'), 'median': Timestamp('2015-07-08 19:43:24'), 'std': NaT, 'min': Timestamp('2015-07-08 19:43:24'), 'max': Timestamp('2015-07-08 19:43:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8,1.8.3,"{'mean': 97.0, 'median': 97.0, 'std': nan, 'min': 97, 'max': 97}","{'mean': 103.0, 'median': 103.0, 'std': nan, 'min': 103, 'max': 103}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:43:24'), 'median': Timestamp('2015-07-08 19:43:24'), 'std': NaT, 'min': Timestamp('2015-07-08 19:43:24'), 'max': Timestamp('2015-07-08 19:43:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150410,CVE-2015-5145,validators.URLValidator in Django 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (CPU consumption) via unspecified vectors.,2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.704988,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8.1,1.8.3,"{'mean': 67.0, 'median': 67.0, 'std': nan, 'min': 67, 'max': 67}","{'mean': 73.0, 'median': 73.0, 'std': nan, 'min': 73, 'max': 73}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:43:24'), 'median': Timestamp('2015-07-08 19:43:24'), 'std': NaT, 'min': Timestamp('2015-07-08 19:43:24'), 'max': Timestamp('2015-07-08 19:43:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8,1.8.4,"{'mean': 138.0, 'median': 138.0, 'std': nan, 'min': 138, 'max': 138}","{'mean': 144.0, 'median': 144.0, 'std': nan, 'min': 144, 'max': 144}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:06:21'), 'median': Timestamp('2015-08-18 17:06:21'), 'std': NaT, 'min': Timestamp('2015-08-18 17:06:21'), 'max': Timestamp('2015-08-18 17:06:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8,1.8.4,"{'mean': 138.0, 'median': 138.0, 'std': nan, 'min': 138, 'max': 138}","{'mean': 144.0, 'median': 144.0, 'std': nan, 'min': 144, 'max': 144}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:06:21'), 'median': Timestamp('2015-08-18 17:06:21'), 'std': NaT, 'min': Timestamp('2015-08-18 17:06:21'), 'max': Timestamp('2015-08-18 17:06:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,8,79326.0,django,1.8.1,Direct,django,1.8.1,,,False,1.8.1,1.8.7,"{'mean': 206.0, 'median': 206.0, 'std': nan, 'min': 206, 'max': 206}","{'mean': 220.0, 'median': 220.0, 'std': nan, 'min': 220, 'max': 220}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:28:47'), 'median': Timestamp('2015-11-24 17:28:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:28:47'), 'max': Timestamp('2015-11-24 17:28:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,django.utils,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.8,1.8.19,"{'mean': 1069.0, 'median': 1069.0, 'std': nan, 'min': 1069, 'max': 1069}","{'mean': 1073.0, 'median': 1073.0, 'std': nan, 'min': 1073, 'max': 1073}","{'mean': -4.0, 'median': -4.0, 'std': nan, 'min': -4, 'max': -4}","{'mean': Timestamp('2018-03-06 14:22:46'), 'median': Timestamp('2018-03-06 14:22:46'), 'std': NaT, 'min': Timestamp('2018-03-06 14:22:46'), 'max': Timestamp('2018-03-06 14:22:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,-,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.8,1.8.16,"{'mean': 579.0, 'median': 579.0, 'std': nan, 'min': 579, 'max': 579}","{'mean': 618.0, 'median': 618.0, 'std': nan, 'min': 618, 'max': 618}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2016-11-01 14:09:28'), 'median': Timestamp('2016-11-01 14:09:28'), 'std': NaT, 'min': Timestamp('2016-11-01 14:09:28'), 'max': Timestamp('2016-11-01 14:09:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.8,1.8.1,"{'mean': 30.0, 'median': 30.0, 'std': nan, 'min': 30, 'max': 30}","{'mean': -21.0, 'median': -21.0, 'std': nan, 'min': -21, 'max': -21}","{'mean': 50.0, 'median': 50.0, 'std': nan, 'min': 50, 'max': 50}","{'mean': Timestamp('2015-05-01 20:36:34'), 'median': Timestamp('2015-05-01 20:36:34'), 'std': NaT, 'min': Timestamp('2015-05-01 20:36:34'), 'max': Timestamp('2015-05-01 20:36:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.8,1.8.3,"{'mean': 97.0, 'median': 97.0, 'std': nan, 'min': 97, 'max': 97}","{'mean': 103.0, 'median': 103.0, 'std': nan, 'min': 103, 'max': 103}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:43:24'), 'median': Timestamp('2015-07-08 19:43:24'), 'std': NaT, 'min': Timestamp('2015-07-08 19:43:24'), 'max': Timestamp('2015-07-08 19:43:24')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.8,1.8.4,"{'mean': 138.0, 'median': 138.0, 'std': nan, 'min': 138, 'max': 138}","{'mean': 144.0, 'median': 144.0, 'std': nan, 'min': 144, 'max': 144}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:06:21'), 'median': Timestamp('2015-08-18 17:06:21'), 'std': NaT, 'min': Timestamp('2015-08-18 17:06:21'), 'max': Timestamp('2015-08-18 17:06:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,8,79225.0,django,1.8,Direct,django,1.8,,,False,1.8,1.8.4,"{'mean': 138.0, 'median': 138.0, 'std': nan, 'min': 138, 'max': 138}","{'mean': 144.0, 'median': 144.0, 'std': nan, 'min': 144, 'max': 144}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:06:21'), 'median': Timestamp('2015-08-18 17:06:21'), 'std': NaT, 'min': Timestamp('2015-08-18 17:06:21'), 'max': Timestamp('2015-08-18 17:06:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89532.0,django,1.7.11,Direct,django,1.7.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89532.0,django,1.7.11,Direct,django,1.7.11,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89532.0,django,1.7.11,Direct,django,1.7.11,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89532.0,django,1.7.11,Direct,django,1.7.11,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89498.0,django,1.7.10,Direct,django,1.7.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89498.0,django,1.7.10,Direct,django,1.7.10,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89498.0,django,1.7.10,Direct,django,1.7.10,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89498.0,django,1.7.10,Direct,django,1.7.10,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,89498.0,django,1.7.10,Direct,django,1.7.10,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89450.0,django,1.7.9,Direct,django,1.7.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89450.0,django,1.7.9,Direct,django,1.7.9,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89450.0,django,1.7.9,Direct,django,1.7.9,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89450.0,django,1.7.9,Direct,django,1.7.9,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,89450.0,django,1.7.9,Direct,django,1.7.9,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89450.0,django,1.7.9,Direct,django,1.7.9,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89450.0,django,1.7.9,Direct,django,1.7.9,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89450.0,django,1.7.9,Direct,django,1.7.9,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,89450.0,django,1.7.9,Direct,django,1.7.9,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89423.0,django,1.7.8,Direct,django,1.7.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89423.0,django,1.7.8,Direct,django,1.7.8,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89423.0,django,1.7.8,Direct,django,1.7.8,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89423.0,django,1.7.8,Direct,django,1.7.8,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,89423.0,django,1.7.8,Direct,django,1.7.8,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89423.0,django,1.7.8,Direct,django,1.7.8,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89423.0,django,1.7.8,Direct,django,1.7.8,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89423.0,django,1.7.8,Direct,django,1.7.8,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,89423.0,django,1.7.8,Direct,django,1.7.8,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89395.0,django,1.7.7,Direct,django,1.7.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89395.0,django,1.7.7,Direct,django,1.7.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89395.0,django,1.7.7,Direct,django,1.7.7,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89395.0,django,1.7.7,Direct,django,1.7.7,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,89395.0,django,1.7.7,Direct,django,1.7.7,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89395.0,django,1.7.7,Direct,django,1.7.7,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89395.0,django,1.7.7,Direct,django,1.7.7,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89395.0,django,1.7.7,Direct,django,1.7.7,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,89395.0,django,1.7.7,Direct,django,1.7.7,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,89383.0,django,1.7.6,Direct,django,1.7.6,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,89381.0,django,1.7.5,Direct,django,1.7.5,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,89374.0,django,1.7.4,Direct,django,1.7.4,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,89307.0,django,1.7.3,Direct,django,1.7.3,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,89246.0,django,1.7.2,Direct,django,1.7.2,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,88885.0,django,1.7.1,Direct,django,1.7.1,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.3,"{'mean': 132.0, 'median': 132.0, 'std': nan, 'min': 132, 'max': 132}","{'mean': 135.0, 'median': 135.0, 'std': nan, 'min': 135, 'max': 135}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:39:44'), 'median': Timestamp('2015-01-13 18:39:44'), 'std': NaT, 'min': Timestamp('2015-01-13 18:39:44'), 'max': Timestamp('2015-01-13 18:39:44')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.7,"{'mean': 197.0, 'median': 197.0, 'std': nan, 'min': 197, 'max': 197}","{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:49:08'), 'median': Timestamp('2015-03-18 23:49:08'), 'std': NaT, 'min': Timestamp('2015-03-18 23:49:08'), 'max': Timestamp('2015-03-18 23:49:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 314.0, 'median': 314.0, 'std': nan, 'min': 314, 'max': 314}","{'mean': 34.0, 'median': 34.0, 'std': nan, 'min': 34, 'max': 34}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.10,"{'mean': 349.0, 'median': 349.0, 'std': nan, 'min': 349, 'max': 349}","{'mean': 355.0, 'median': 355.0, 'std': nan, 'min': 355, 'max': 355}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:15:28'), 'median': Timestamp('2015-08-18 17:15:28'), 'std': NaT, 'min': Timestamp('2015-08-18 17:15:28'), 'max': Timestamp('2015-08-18 17:15:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.1,"{'mean': 49.0, 'median': 49.0, 'std': nan, 'min': 49, 'max': 49}","{'mean': -133.0, 'median': -133.0, 'std': nan, 'min': -133, 'max': -133}","{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': Timestamp('2014-10-22 16:56:56'), 'median': Timestamp('2014-10-22 16:56:56'), 'std': NaT, 'min': Timestamp('2014-10-22 16:56:56'), 'max': Timestamp('2014-10-22 16:56:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.1,"{'mean': 49.0, 'median': 49.0, 'std': nan, 'min': 49, 'max': 49}","{'mean': -133.0, 'median': -133.0, 'std': nan, 'min': -133, 'max': -133}","{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': Timestamp('2014-10-22 16:56:56'), 'median': Timestamp('2014-10-22 16:56:56'), 'std': NaT, 'min': Timestamp('2014-10-22 16:56:56'), 'max': Timestamp('2014-10-22 16:56:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.1,"{'mean': 49.0, 'median': 49.0, 'std': nan, 'min': 49, 'max': 49}","{'mean': -133.0, 'median': -133.0, 'std': nan, 'min': -133, 'max': -133}","{'mean': 182.0, 'median': 182.0, 'std': nan, 'min': 182, 'max': 182}","{'mean': Timestamp('2014-10-22 16:56:56'), 'median': Timestamp('2014-10-22 16:56:56'), 'std': NaT, 'min': Timestamp('2014-10-22 16:56:56'), 'max': Timestamp('2014-10-22 16:56:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.1,"{'mean': 49.0, 'median': 49.0, 'std': nan, 'min': 49, 'max': 49}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': 57.0, 'median': 57.0, 'std': nan, 'min': 57, 'max': 57}","{'mean': Timestamp('2014-10-22 16:56:56'), 'median': Timestamp('2014-10-22 16:56:56'), 'std': NaT, 'min': Timestamp('2014-10-22 16:56:56'), 'max': Timestamp('2014-10-22 16:56:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.1,"{'mean': 49.0, 'median': 49.0, 'std': nan, 'min': 49, 'max': 49}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': 57.0, 'median': 57.0, 'std': nan, 'min': 57, 'max': 57}","{'mean': Timestamp('2014-10-22 16:56:56'), 'median': Timestamp('2014-10-22 16:56:56'), 'std': NaT, 'min': Timestamp('2014-10-22 16:56:56'), 'max': Timestamp('2014-10-22 16:56:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.1,"{'mean': 49.0, 'median': 49.0, 'std': nan, 'min': 49, 'max': 49}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': 57.0, 'median': 57.0, 'std': nan, 'min': 57, 'max': 57}","{'mean': Timestamp('2014-10-22 16:56:56'), 'median': Timestamp('2014-10-22 16:56:56'), 'std': NaT, 'min': Timestamp('2014-10-22 16:56:56'), 'max': Timestamp('2014-10-22 16:56:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.1,"{'mean': 49.0, 'median': 49.0, 'std': nan, 'min': 49, 'max': 49}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': 57.0, 'median': 57.0, 'std': nan, 'min': 57, 'max': 57}","{'mean': Timestamp('2014-10-22 16:56:56'), 'median': Timestamp('2014-10-22 16:56:56'), 'std': NaT, 'min': Timestamp('2014-10-22 16:56:56'), 'max': Timestamp('2014-10-22 16:56:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.1,"{'mean': 49.0, 'median': 49.0, 'std': nan, 'min': 49, 'max': 49}","{'mean': -110.0, 'median': -110.0, 'std': nan, 'min': -110, 'max': -110}","{'mean': 159.0, 'median': 159.0, 'std': nan, 'min': 159, 'max': 159}","{'mean': Timestamp('2014-10-22 16:56:56'), 'median': Timestamp('2014-10-22 16:56:56'), 'std': NaT, 'min': Timestamp('2014-10-22 16:56:56'), 'max': Timestamp('2014-10-22 16:56:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,7,88272.0,django,1.7,Direct,django,1.7,,,False,1.7,1.7.1,"{'mean': 49.0, 'median': 49.0, 'std': nan, 'min': 49, 'max': 49}","{'mean': -110.0, 'median': -110.0, 'std': nan, 'min': -110, 'max': -110}","{'mean': 159.0, 'median': 159.0, 'std': nan, 'min': 159, 'max': 159}","{'mean': Timestamp('2014-10-22 16:56:56'), 'median': Timestamp('2014-10-22 16:56:56'), 'std': NaT, 'min': Timestamp('2014-10-22 16:56:56'), 'max': Timestamp('2014-10-22 16:56:56')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78870.0,django,1.6.11,Direct,django,1.6.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78870.0,django,1.6.11,Direct,django,1.6.11,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78870.0,django,1.6.11,Direct,django,1.6.11,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78870.0,django,1.6.11,Direct,django,1.6.11,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78870.0,django,1.6.11,Direct,django,1.6.11,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78870.0,django,1.6.11,Direct,django,1.6.11,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78866.0,django,1.6.10,Direct,django,1.6.10,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78849.0,django,1.6.9,Direct,django,1.6.9,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78716.0,django,1.6.8,Direct,django,1.6.8,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78664.0,django,1.6.7,Direct,django,1.6.7,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78662.0,django,1.6.6,Direct,django,1.6.6,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,78596.0,django,1.6.5,Direct,django,1.6.5,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78615.0,django,1.6.4,Direct,django,1.6.4,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78589.0,django,1.6.3,Direct,django,1.6.3,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.3,"{'mean': 166.0, 'median': 166.0, 'std': nan, 'min': 166, 'max': 166}","{'mean': 168.0, 'median': 168.0, 'std': nan, 'min': 168, 'max': 168}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 23:12:03'), 'median': Timestamp('2014-04-21 23:12:03'), 'std': NaT, 'min': Timestamp('2014-04-21 23:12:03'), 'max': Timestamp('2014-04-21 23:12:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.3,"{'mean': 166.0, 'median': 166.0, 'std': nan, 'min': 166, 'max': 166}","{'mean': 168.0, 'median': 168.0, 'std': nan, 'min': 168, 'max': 168}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 23:12:03'), 'median': Timestamp('2014-04-21 23:12:03'), 'std': NaT, 'min': Timestamp('2014-04-21 23:12:03'), 'max': Timestamp('2014-04-21 23:12:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.3,"{'mean': 166.0, 'median': 166.0, 'std': nan, 'min': 166, 'max': 166}","{'mean': 168.0, 'median': 168.0, 'std': nan, 'min': 168, 'max': 168}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 23:12:03'), 'median': Timestamp('2014-04-21 23:12:03'), 'std': NaT, 'min': Timestamp('2014-04-21 23:12:03'), 'max': Timestamp('2014-04-21 23:12:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78504.0,django,1.6.2,Direct,django,1.6.2,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.3,"{'mean': 166.0, 'median': 166.0, 'std': nan, 'min': 166, 'max': 166}","{'mean': 168.0, 'median': 168.0, 'std': nan, 'min': 168, 'max': 168}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 23:12:03'), 'median': Timestamp('2014-04-21 23:12:03'), 'std': NaT, 'min': Timestamp('2014-04-21 23:12:03'), 'max': Timestamp('2014-04-21 23:12:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.3,"{'mean': 166.0, 'median': 166.0, 'std': nan, 'min': 166, 'max': 166}","{'mean': 168.0, 'median': 168.0, 'std': nan, 'min': 168, 'max': 168}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 23:12:03'), 'median': Timestamp('2014-04-21 23:12:03'), 'std': NaT, 'min': Timestamp('2014-04-21 23:12:03'), 'max': Timestamp('2014-04-21 23:12:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.3,"{'mean': 166.0, 'median': 166.0, 'std': nan, 'min': 166, 'max': 166}","{'mean': 168.0, 'median': 168.0, 'std': nan, 'min': 168, 'max': 168}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 23:12:03'), 'median': Timestamp('2014-04-21 23:12:03'), 'std': NaT, 'min': Timestamp('2014-04-21 23:12:03'), 'max': Timestamp('2014-04-21 23:12:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78416.0,django,1.6.1,Direct,django,1.6.1,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.10,"{'mean': 433.0, 'median': 433.0, 'std': nan, 'min': 433, 'max': 433}","{'mean': 436.0, 'median': 436.0, 'std': nan, 'min': 436, 'max': 436}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:48:42'), 'median': Timestamp('2015-01-13 18:48:42'), 'std': NaT, 'min': Timestamp('2015-01-13 18:48:42'), 'max': Timestamp('2015-01-13 18:48:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.11,"{'mean': 497.0, 'median': 497.0, 'std': nan, 'min': 497, 'max': 497}","{'mean': 503.0, 'median': 503.0, 'std': nan, 'min': 503, 'max': 503}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.3,"{'mean': 166.0, 'median': 166.0, 'std': nan, 'min': 166, 'max': 166}","{'mean': 168.0, 'median': 168.0, 'std': nan, 'min': 168, 'max': 168}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 23:12:03'), 'median': Timestamp('2014-04-21 23:12:03'), 'std': NaT, 'min': Timestamp('2014-04-21 23:12:03'), 'max': Timestamp('2014-04-21 23:12:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.3,"{'mean': 166.0, 'median': 166.0, 'std': nan, 'min': 166, 'max': 166}","{'mean': 168.0, 'median': 168.0, 'std': nan, 'min': 168, 'max': 168}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 23:12:03'), 'median': Timestamp('2014-04-21 23:12:03'), 'std': NaT, 'min': Timestamp('2014-04-21 23:12:03'), 'max': Timestamp('2014-04-21 23:12:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.3,"{'mean': 166.0, 'median': 166.0, 'std': nan, 'min': 166, 'max': 166}","{'mean': 168.0, 'median': 168.0, 'std': nan, 'min': 168, 'max': 168}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 23:12:03'), 'median': Timestamp('2014-04-21 23:12:03'), 'std': NaT, 'min': Timestamp('2014-04-21 23:12:03'), 'max': Timestamp('2014-04-21 23:12:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.6,"{'mean': 287.0, 'median': 287.0, 'std': nan, 'min': 287, 'max': 287}","{'mean': 292.0, 'median': 292.0, 'std': nan, 'min': 292, 'max': 292}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:17:23'), 'median': Timestamp('2014-08-20 20:17:23'), 'std': NaT, 'min': Timestamp('2014-08-20 20:17:23'), 'max': Timestamp('2014-08-20 20:17:23')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.5,"{'mean': 189.0, 'median': 189.0, 'std': nan, 'min': 189, 'max': 189}","{'mean': 191.0, 'median': 191.0, 'std': nan, 'min': 191, 'max': 191}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:33:13'), 'median': Timestamp('2014-05-14 18:33:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:33:13'), 'max': Timestamp('2014-05-14 18:33:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.1,"{'mean': 36.0, 'median': 36.0, 'std': nan, 'min': 36, 'max': 36}","{'mean': -44.0, 'median': -44.0, 'std': nan, 'min': -44, 'max': -44}","{'mean': 79.0, 'median': 79.0, 'std': nan, 'min': 79, 'max': 79}","{'mean': Timestamp('2013-12-12 20:04:35'), 'median': Timestamp('2013-12-12 20:04:35'), 'std': NaT, 'min': Timestamp('2013-12-12 20:04:35'), 'max': Timestamp('2013-12-12 20:04:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166181,CVE-2013-4249,Cross-site scripting (XSS) vulnerability in the AdminURLFieldWidget widget in contrib/admin/widgets.py in Django 1.5.x before 1.5.2 and 1.6.x before 1.6 beta 2 allows remote attackers to inject arbitrary web script or HTML via a URLField.,2013-10-04 17:55:00,django.contrib,2017-08-29 01:33:00,2024-03-19 17:58:01.742120,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.1,"{'mean': 36.0, 'median': 36.0, 'std': nan, 'min': 36, 'max': 36}","{'mean': -33.0, 'median': -33.0, 'std': nan, 'min': -33, 'max': -33}","{'mean': 69.0, 'median': 69.0, 'std': nan, 'min': 69, 'max': 69}","{'mean': Timestamp('2013-12-12 20:04:35'), 'median': Timestamp('2013-12-12 20:04:35'), 'std': NaT, 'min': Timestamp('2013-12-12 20:04:35'), 'max': Timestamp('2013-12-12 20:04:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,-,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.1,"{'mean': 36.0, 'median': 36.0, 'std': nan, 'min': 36, 'max': 36}","{'mean': -51.0, 'median': -51.0, 'std': nan, 'min': -51, 'max': -51}","{'mean': 87.0, 'median': 87.0, 'std': nan, 'min': 87, 'max': 87}","{'mean': Timestamp('2013-12-12 20:04:35'), 'median': Timestamp('2013-12-12 20:04:35'), 'std': NaT, 'min': Timestamp('2013-12-12 20:04:35'), 'max': Timestamp('2013-12-12 20:04:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,django.contrib,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,6,78309.0,django,1.6,Direct,django,1.6,,,False,1.6,1.6.1,"{'mean': 36.0, 'median': 36.0, 'std': nan, 'min': 36, 'max': 36}","{'mean': -33.0, 'median': -33.0, 'std': nan, 'min': -33, 'max': -33}","{'mean': 69.0, 'median': 69.0, 'std': nan, 'min': 69, 'max': 69}","{'mean': Timestamp('2013-12-12 20:04:35'), 'median': Timestamp('2013-12-12 20:04:35'), 'std': NaT, 'min': Timestamp('2013-12-12 20:04:35'), 'max': Timestamp('2013-12-12 20:04:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83801.0,django,1.5.12,Direct,django,1.5.12,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83801.0,django,1.5.12,Direct,django,1.5.12,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83801.0,django,1.5.12,Direct,django,1.5.12,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83801.0,django,1.5.12,Direct,django,1.5.12,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83801.0,django,1.5.12,Direct,django,1.5.12,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83801.0,django,1.5.12,Direct,django,1.5.12,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83801.0,django,1.5.12,Direct,django,1.5.12,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83801.0,django,1.5.12,Direct,django,1.5.12,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83801.0,django,1.5.12,Direct,django,1.5.12,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83802.0,django,1.5.11,Direct,django,1.5.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83802.0,django,1.5.11,Direct,django,1.5.11,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83802.0,django,1.5.11,Direct,django,1.5.11,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83802.0,django,1.5.11,Direct,django,1.5.11,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83802.0,django,1.5.11,Direct,django,1.5.11,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83802.0,django,1.5.11,Direct,django,1.5.11,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83802.0,django,1.5.11,Direct,django,1.5.11,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83802.0,django,1.5.11,Direct,django,1.5.11,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83802.0,django,1.5.11,Direct,django,1.5.11,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83796.0,django,1.5.10,Direct,django,1.5.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83796.0,django,1.5.10,Direct,django,1.5.10,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83796.0,django,1.5.10,Direct,django,1.5.10,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83796.0,django,1.5.10,Direct,django,1.5.10,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83796.0,django,1.5.10,Direct,django,1.5.10,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83796.0,django,1.5.10,Direct,django,1.5.10,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83796.0,django,1.5.10,Direct,django,1.5.10,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83796.0,django,1.5.10,Direct,django,1.5.10,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83796.0,django,1.5.10,Direct,django,1.5.10,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83794.0,django,1.5.9,Direct,django,1.5.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83794.0,django,1.5.9,Direct,django,1.5.9,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83794.0,django,1.5.9,Direct,django,1.5.9,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83794.0,django,1.5.9,Direct,django,1.5.9,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83794.0,django,1.5.9,Direct,django,1.5.9,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83794.0,django,1.5.9,Direct,django,1.5.9,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83794.0,django,1.5.9,Direct,django,1.5.9,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83794.0,django,1.5.9,Direct,django,1.5.9,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83794.0,django,1.5.9,Direct,django,1.5.9,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,83761.0,django,1.5.8,Direct,django,1.5.8,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83786.0,django,1.5.7,Direct,django,1.5.7,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83783.0,django,1.5.6,Direct,django,1.5.6,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83677.0,django,1.5.5,Direct,django,1.5.5,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83637.0,django,1.5.4,Direct,django,1.5.4,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,83523.0,django,1.5.3,Direct,django,1.5.3,,,False,1.5,1.5.4,"{'mean': 200.0, 'median': 200.0, 'std': nan, 'min': 200, 'max': 200}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2013-09-15 06:30:37'), 'median': Timestamp('2013-09-15 06:30:37'), 'std': NaT, 'min': Timestamp('2013-09-15 06:30:37'), 'max': Timestamp('2013-09-15 06:30:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,83483.0,django,1.5.2,Direct,django,1.5.2,,,False,1.5,1.5.4,"{'mean': 200.0, 'median': 200.0, 'std': nan, 'min': 200, 'max': 200}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2013-09-15 06:30:37'), 'median': Timestamp('2013-09-15 06:30:37'), 'std': NaT, 'min': Timestamp('2013-09-15 06:30:37'), 'max': Timestamp('2013-09-15 06:30:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.4,"{'mean': 200.0, 'median': 200.0, 'std': nan, 'min': 200, 'max': 200}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2013-09-15 06:30:37'), 'median': Timestamp('2013-09-15 06:30:37'), 'std': NaT, 'min': Timestamp('2013-09-15 06:30:37'), 'max': Timestamp('2013-09-15 06:30:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166181,CVE-2013-4249,Cross-site scripting (XSS) vulnerability in the AdminURLFieldWidget widget in contrib/admin/widgets.py in Django 1.5.x before 1.5.2 and 1.6.x before 1.6 beta 2 allows remote attackers to inject arbitrary web script or HTML via a URLField.,2013-10-04 17:55:00,django.contrib,2017-08-29 01:33:00,2024-03-19 17:58:01.742120,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.2,"{'mean': 167.0, 'median': 167.0, 'std': nan, 'min': 167, 'max': 167}","{'mean': 219.0, 'median': 219.0, 'std': nan, 'min': 219, 'max': 219}","{'mean': -53.0, 'median': -53.0, 'std': nan, 'min': -53, 'max': -53}","{'mean': Timestamp('2013-08-13 16:54:03'), 'median': Timestamp('2013-08-13 16:54:03'), 'std': NaT, 'min': Timestamp('2013-08-13 16:54:03'), 'max': Timestamp('2013-08-13 16:54:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,-,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.2,"{'mean': 167.0, 'median': 167.0, 'std': nan, 'min': 167, 'max': 167}","{'mean': 201.0, 'median': 201.0, 'std': nan, 'min': 201, 'max': 201}","{'mean': -35.0, 'median': -35.0, 'std': nan, 'min': -35, 'max': -35}","{'mean': Timestamp('2013-08-13 16:54:03'), 'median': Timestamp('2013-08-13 16:54:03'), 'std': NaT, 'min': Timestamp('2013-08-13 16:54:03'), 'max': Timestamp('2013-08-13 16:54:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,django.contrib,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83396.0,django,1.5.1,Direct,django,1.5.1,,,False,1.5,1.5.2,"{'mean': 167.0, 'median': 167.0, 'std': nan, 'min': 167, 'max': 167}","{'mean': 219.0, 'median': 219.0, 'std': nan, 'min': 219, 'max': 219}","{'mean': -53.0, 'median': -53.0, 'std': nan, 'min': -53, 'max': -53}","{'mean': Timestamp('2013-08-13 16:54:03'), 'median': Timestamp('2013-08-13 16:54:03'), 'std': NaT, 'min': Timestamp('2013-08-13 16:54:03'), 'max': Timestamp('2013-08-13 16:54:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 756.0, 'median': 756.0, 'std': nan, 'min': 756, 'max': 756}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.6.11,"{'mean': 750.0, 'median': 750.0, 'std': nan, 'min': 750, 'max': 750}","{'mean': 867.0, 'median': 867.0, 'std': nan, 'min': 867, 'max': 867}","{'mean': -118.0, 'median': -118.0, 'std': nan, 'min': -118, 'max': -118}","{'mean': Timestamp('2015-03-18 23:57:46'), 'median': Timestamp('2015-03-18 23:57:46'), 'std': NaT, 'min': Timestamp('2015-03-18 23:57:46'), 'max': Timestamp('2015-03-18 23:57:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.6,"{'mean': 419.0, 'median': 419.0, 'std': nan, 'min': 419, 'max': 419}","{'mean': 420.0, 'median': 420.0, 'std': nan, 'min': 420, 'max': 420}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:53:10'), 'median': Timestamp('2014-04-21 22:53:10'), 'std': NaT, 'min': Timestamp('2014-04-21 22:53:10'), 'max': Timestamp('2014-04-21 22:53:10')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.9,"{'mean': 540.0, 'median': 540.0, 'std': nan, 'min': 540, 'max': 540}","{'mean': 545.0, 'median': 545.0, 'std': nan, 'min': 545, 'max': 545}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:10:42'), 'median': Timestamp('2014-08-20 20:10:42'), 'std': NaT, 'min': Timestamp('2014-08-20 20:10:42'), 'max': Timestamp('2014-08-20 20:10:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.8,"{'mean': 441.0, 'median': 441.0, 'std': nan, 'min': 441, 'max': 441}","{'mean': 443.0, 'median': 443.0, 'std': nan, 'min': 443, 'max': 443}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:35:13'), 'median': Timestamp('2014-05-14 18:35:13'), 'std': NaT, 'min': Timestamp('2014-05-14 18:35:13'), 'max': Timestamp('2014-05-14 18:35:13')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.1,"{'mean': 30.0, 'median': 30.0, 'std': nan, 'min': 30, 'max': 30}","{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': -35.0, 'median': -35.0, 'std': nan, 'min': -35, 'max': -35}","{'mean': Timestamp('2013-03-28 20:57:18'), 'median': Timestamp('2013-03-28 20:57:18'), 'std': NaT, 'min': Timestamp('2013-03-28 20:57:18'), 'max': Timestamp('2013-03-28 20:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.1,"{'mean': 30.0, 'median': 30.0, 'std': nan, 'min': 30, 'max': 30}","{'mean': 64.0, 'median': 64.0, 'std': nan, 'min': 64, 'max': 64}","{'mean': -35.0, 'median': -35.0, 'std': nan, 'min': -35, 'max': -35}","{'mean': Timestamp('2013-03-28 20:57:18'), 'median': Timestamp('2013-03-28 20:57:18'), 'std': NaT, 'min': Timestamp('2013-03-28 20:57:18'), 'max': Timestamp('2013-03-28 20:57:18')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.4,"{'mean': 200.0, 'median': 200.0, 'std': nan, 'min': 200, 'max': 200}","{'mean': 209.0, 'median': 209.0, 'std': nan, 'min': 209, 'max': 209}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2013-09-15 06:30:37'), 'median': Timestamp('2013-09-15 06:30:37'), 'std': NaT, 'min': Timestamp('2013-09-15 06:30:37'), 'max': Timestamp('2013-09-15 06:30:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166181,CVE-2013-4249,Cross-site scripting (XSS) vulnerability in the AdminURLFieldWidget widget in contrib/admin/widgets.py in Django 1.5.x before 1.5.2 and 1.6.x before 1.6 beta 2 allows remote attackers to inject arbitrary web script or HTML via a URLField.,2013-10-04 17:55:00,django.contrib,2017-08-29 01:33:00,2024-03-19 17:58:01.742120,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.2,"{'mean': 167.0, 'median': 167.0, 'std': nan, 'min': 167, 'max': 167}","{'mean': 219.0, 'median': 219.0, 'std': nan, 'min': 219, 'max': 219}","{'mean': -53.0, 'median': -53.0, 'std': nan, 'min': -53, 'max': -53}","{'mean': Timestamp('2013-08-13 16:54:03'), 'median': Timestamp('2013-08-13 16:54:03'), 'std': NaT, 'min': Timestamp('2013-08-13 16:54:03'), 'max': Timestamp('2013-08-13 16:54:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,-,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.2,"{'mean': 167.0, 'median': 167.0, 'std': nan, 'min': 167, 'max': 167}","{'mean': 201.0, 'median': 201.0, 'std': nan, 'min': 201, 'max': 201}","{'mean': -35.0, 'median': -35.0, 'std': nan, 'min': -35, 'max': -35}","{'mean': Timestamp('2013-08-13 16:54:03'), 'median': Timestamp('2013-08-13 16:54:03'), 'std': NaT, 'min': Timestamp('2013-08-13 16:54:03'), 'max': Timestamp('2013-08-13 16:54:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,django.contrib,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,5,83302.0,django,1.5,Direct,django,1.5,,,False,1.5,1.5.2,"{'mean': 167.0, 'median': 167.0, 'std': nan, 'min': 167, 'max': 167}","{'mean': 219.0, 'median': 219.0, 'std': nan, 'min': 219, 'max': 219}","{'mean': -53.0, 'median': -53.0, 'std': nan, 'min': -53, 'max': -53}","{'mean': Timestamp('2013-08-13 16:54:03'), 'median': Timestamp('2013-08-13 16:54:03'), 'std': NaT, 'min': Timestamp('2013-08-13 16:54:03'), 'max': Timestamp('2013-08-13 16:54:03')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82307.0,django,1.4.22,Direct,django,1.4.22,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82307.0,django,1.4.22,Direct,django,1.4.22,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82307.0,django,1.4.22,Direct,django,1.4.22,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82307.0,django,1.4.22,Direct,django,1.4.22,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82307.0,django,1.4.22,Direct,django,1.4.22,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82307.0,django,1.4.22,Direct,django,1.4.22,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82257.0,django,1.4.21,Direct,django,1.4.21,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82257.0,django,1.4.21,Direct,django,1.4.21,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82257.0,django,1.4.21,Direct,django,1.4.21,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82257.0,django,1.4.21,Direct,django,1.4.21,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82257.0,django,1.4.21,Direct,django,1.4.21,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82257.0,django,1.4.21,Direct,django,1.4.21,,,False,1.4.19,1.4.22,"{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:22:09'), 'median': Timestamp('2015-08-18 17:22:09'), 'std': NaT, 'min': Timestamp('2015-08-18 17:22:09'), 'max': Timestamp('2015-08-18 17:22:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82257.0,django,1.4.21,Direct,django,1.4.21,,,False,1.4.19,1.4.22,"{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:22:09'), 'median': Timestamp('2015-08-18 17:22:09'), 'std': NaT, 'min': Timestamp('2015-08-18 17:22:09'), 'max': Timestamp('2015-08-18 17:22:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82257.0,django,1.4.21,Direct,django,1.4.21,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,-,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.4.20,1.4.21,"{'mean': 111.0, 'median': 111.0, 'std': nan, 'min': 111, 'max': 111}","{'mean': 117.0, 'median': 117.0, 'std': nan, 'min': 117, 'max': 117}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.4.19,1.4.22,"{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:22:09'), 'median': Timestamp('2015-08-18 17:22:09'), 'std': NaT, 'min': Timestamp('2015-08-18 17:22:09'), 'max': Timestamp('2015-08-18 17:22:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.4.19,1.4.22,"{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:22:09'), 'median': Timestamp('2015-08-18 17:22:09'), 'std': NaT, 'min': Timestamp('2015-08-18 17:22:09'), 'max': Timestamp('2015-08-18 17:22:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82239.0,django,1.4.20,Direct,django,1.4.20,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.4.19,1.4.22,"{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:22:09'), 'median': Timestamp('2015-08-18 17:22:09'), 'std': NaT, 'min': Timestamp('2015-08-18 17:22:09'), 'max': Timestamp('2015-08-18 17:22:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.4.19,1.4.22,"{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-08-18 17:22:09'), 'median': Timestamp('2015-08-18 17:22:09'), 'std': NaT, 'min': Timestamp('2015-08-18 17:22:09'), 'max': Timestamp('2015-08-18 17:22:09')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82263.0,django,1.4.19,Direct,django,1.4.19,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82236.0,django,1.4.18,Direct,django,1.4.18,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82236.0,django,1.4.18,Direct,django,1.4.18,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82236.0,django,1.4.18,Direct,django,1.4.18,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82236.0,django,1.4.18,Direct,django,1.4.18,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82236.0,django,1.4.18,Direct,django,1.4.18,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82236.0,django,1.4.18,Direct,django,1.4.18,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82236.0,django,1.4.18,Direct,django,1.4.18,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82236.0,django,1.4.18,Direct,django,1.4.18,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.4.17,1.4.18,"{'mean': 10.0, 'median': 10.0, 'std': nan, 'min': 10, 'max': 10}","{'mean': 233.0, 'median': 233.0, 'std': nan, 'min': 233, 'max': 233}","{'mean': -223.0, 'median': -223.0, 'std': nan, 'min': -223, 'max': -223}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.4.17,1.4.18,"{'mean': 10.0, 'median': 10.0, 'std': nan, 'min': 10, 'max': 10}","{'mean': 233.0, 'median': 233.0, 'std': nan, 'min': 233, 'max': 233}","{'mean': -223.0, 'median': -223.0, 'std': nan, 'min': -223, 'max': -223}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82272.0,django,1.4.17,Direct,django,1.4.17,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82139.0,django,1.4.16,Direct,django,1.4.16,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82127.0,django,1.4.15,Direct,django,1.4.15,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82125.0,django,1.4.14,Direct,django,1.4.14,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,82083.0,django,1.4.13,Direct,django,1.4.13,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82107.0,django,1.4.12,Direct,django,1.4.12,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,82104.0,django,1.4.11,Direct,django,1.4.11,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.10,Direct,django,1.4.10,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81864.0,django,1.4.9,Direct,django,1.4.9,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81969.0,django,1.4.8,Direct,django,1.4.8,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81854.0,django,1.4.7,Direct,django,1.4.7,,,False,1.4.4,1.4.8,"{'mean': 207.0, 'median': 207.0, 'std': nan, 'min': 207, 'max': 207}","{'mean': 216.0, 'median': 216.0, 'std': nan, 'min': 216, 'max': 216}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2013-09-15 06:22:11'), 'median': Timestamp('2013-09-15 06:22:11'), 'std': NaT, 'min': Timestamp('2013-09-15 06:22:11'), 'max': Timestamp('2013-09-15 06:22:11')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.4.4,1.4.8,"{'mean': 207.0, 'median': 207.0, 'std': nan, 'min': 207, 'max': 207}","{'mean': 216.0, 'median': 216.0, 'std': nan, 'min': 216, 'max': 216}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2013-09-15 06:22:11'), 'median': Timestamp('2013-09-15 06:22:11'), 'std': NaT, 'min': Timestamp('2013-09-15 06:22:11'), 'max': Timestamp('2013-09-15 06:22:11')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,-,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81847.0,django,1.4.6,Direct,django,1.4.6,,,False,1.4.4,1.4.7,"{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2013-09-11 01:18:42'), 'median': Timestamp('2013-09-11 01:18:42'), 'std': NaT, 'min': Timestamp('2013-09-11 01:18:42'), 'max': Timestamp('2013-09-11 01:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.4.4,1.4.8,"{'mean': 207.0, 'median': 207.0, 'std': nan, 'min': 207, 'max': 207}","{'mean': 216.0, 'median': 216.0, 'std': nan, 'min': 216, 'max': 216}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2013-09-15 06:22:11'), 'median': Timestamp('2013-09-15 06:22:11'), 'std': NaT, 'min': Timestamp('2013-09-15 06:22:11'), 'max': Timestamp('2013-09-15 06:22:11')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,-,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.4.4,1.4.7,"{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2013-09-11 01:18:42'), 'median': Timestamp('2013-09-11 01:18:42'), 'std': NaT, 'min': Timestamp('2013-09-11 01:18:42'), 'max': Timestamp('2013-09-11 01:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,django.contrib,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.5,Direct,django,1.4.5,,,False,1.4.4,1.4.6,"{'mean': 174.0, 'median': 174.0, 'std': nan, 'min': 174, 'max': 174}","{'mean': 226.0, 'median': 226.0, 'std': nan, 'min': 226, 'max': 226}","{'mean': -53.0, 'median': -53.0, 'std': nan, 'min': -53, 'max': -53}","{'mean': Timestamp('2013-08-13 16:52:54'), 'median': Timestamp('2013-08-13 16:52:54'), 'std': NaT, 'min': Timestamp('2013-08-13 16:52:54'), 'max': Timestamp('2013-08-13 16:52:54')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.4.4,1.4.15,"{'mean': 560.0, 'median': 560.0, 'std': nan, 'min': 560, 'max': 560}","{'mean': 915.0, 'median': 915.0, 'std': nan, 'min': 915, 'max': 915}","{'mean': -356.0, 'median': -356.0, 'std': nan, 'min': -356, 'max': -356}","{'mean': Timestamp('2014-09-02 20:44:06'), 'median': Timestamp('2014-09-02 20:44:06'), 'std': NaT, 'min': Timestamp('2014-09-02 20:44:06'), 'max': Timestamp('2014-09-02 20:44:06')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.2,1.4.13,"{'mean': 1001.5, 'median': 1001.5, 'std': 782.7672067735081, 'min': 448, 'max': 1555}","{'mean': 1056.5, 'median': 1056.5, 'std': 713.4707422172264, 'min': 552, 'max': 1561}","{'mean': -55.0, 'median': -55.0, 'std': 69.29646455628166, 'min': -104, 'max': -6}","{'mean': Timestamp('2014-07-02 19:14:38.500000'), 'median': Timestamp('2014-07-02 19:14:38.500000'), 'std': Timedelta('69 days 08:13:17.670161159'), 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.4.4,1.4.13,"{'mean': 448.0, 'median': 448.0, 'std': nan, 'min': 448, 'max': 448}","{'mean': 450.0, 'median': 450.0, 'std': nan, 'min': 450, 'max': 450}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-05-14 18:27:42'), 'median': Timestamp('2014-05-14 18:27:42'), 'std': NaT, 'min': Timestamp('2014-05-14 18:27:42'), 'max': Timestamp('2014-05-14 18:27:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.4.4,1.4.8,"{'mean': 207.0, 'median': 207.0, 'std': nan, 'min': 207, 'max': 207}","{'mean': 216.0, 'median': 216.0, 'std': nan, 'min': 216, 'max': 216}","{'mean': -9.0, 'median': -9.0, 'std': nan, 'min': -9, 'max': -9}","{'mean': Timestamp('2013-09-15 06:22:11'), 'median': Timestamp('2013-09-15 06:22:11'), 'std': NaT, 'min': Timestamp('2013-09-15 06:22:11'), 'max': Timestamp('2013-09-15 06:22:11')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,-,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.4.4,1.4.7,"{'mean': 203.0, 'median': 203.0, 'std': nan, 'min': 203, 'max': 203}","{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2013-09-11 01:18:42'), 'median': Timestamp('2013-09-11 01:18:42'), 'std': NaT, 'min': Timestamp('2013-09-11 01:18:42'), 'max': Timestamp('2013-09-11 01:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,django.contrib,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81795.0,django,1.4.4,Direct,django,1.4.4,,,False,1.4.4,1.4.6,"{'mean': 174.0, 'median': 174.0, 'std': nan, 'min': 174, 'max': 174}","{'mean': 226.0, 'median': 226.0, 'std': nan, 'min': 226, 'max': 226}","{'mean': -53.0, 'median': -53.0, 'std': nan, 'min': -53, 'max': -53}","{'mean': Timestamp('2013-08-13 16:52:54'), 'median': Timestamp('2013-08-13 16:52:54'), 'std': NaT, 'min': Timestamp('2013-08-13 16:52:54'), 'max': Timestamp('2013-08-13 16:52:54')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81655.0,django,1.4.3,Direct,django,1.4.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 1248.0, 'median': 1248.0, 'std': nan, 'min': 1248, 'max': 1248}","{'mean': -987.0, 'median': -987.0, 'std': nan, 'min': -987, 'max': -987}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 1248.0, 'median': 1248.0, 'std': nan, 'min': 1248, 'max': 1248}","{'mean': -987.0, 'median': -987.0, 'std': nan, 'min': -987, 'max': -987}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 783.0, 'median': 783.0, 'std': nan, 'min': 783, 'max': 783}","{'mean': -522.0, 'median': -522.0, 'std': nan, 'min': -522, 'max': -522}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 783.0, 'median': 783.0, 'std': nan, 'min': 783, 'max': 783}","{'mean': -522.0, 'median': -522.0, 'std': nan, 'min': -522, 'max': -522}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 404.0, 'median': 404.0, 'std': nan, 'min': 404, 'max': 404}","{'mean': -143.0, 'median': -143.0, 'std': nan, 'min': -143, 'max': -143}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 404.0, 'median': 404.0, 'std': nan, 'min': 404, 'max': 404}","{'mean': -143.0, 'median': -143.0, 'std': nan, 'min': -143, 'max': -143}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 549.0, 'median': 549.0, 'std': nan, 'min': 549, 'max': 549}","{'mean': -287.0, 'median': -287.0, 'std': nan, 'min': -287, 'max': -287}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,-,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 542.0, 'median': 542.0, 'std': nan, 'min': 542, 'max': 542}","{'mean': -280.0, 'median': -280.0, 'std': nan, 'min': -280, 'max': -280}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,django.contrib,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81639.0,django,1.4.2,Direct,django,1.4.2,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 559.0, 'median': 559.0, 'std': nan, 'min': 559, 'max': 559}","{'mean': -298.0, 'median': -298.0, 'std': nan, 'min': -298, 'max': -298}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 1248.0, 'median': 1248.0, 'std': nan, 'min': 1248, 'max': 1248}","{'mean': -987.0, 'median': -987.0, 'std': nan, 'min': -987, 'max': -987}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 1248.0, 'median': 1248.0, 'std': nan, 'min': 1248, 'max': 1248}","{'mean': -987.0, 'median': -987.0, 'std': nan, 'min': -987, 'max': -987}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 783.0, 'median': 783.0, 'std': nan, 'min': 783, 'max': 783}","{'mean': -522.0, 'median': -522.0, 'std': nan, 'min': -522, 'max': -522}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 783.0, 'median': 783.0, 'std': nan, 'min': 783, 'max': 783}","{'mean': -522.0, 'median': -522.0, 'std': nan, 'min': -522, 'max': -522}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 404.0, 'median': 404.0, 'std': nan, 'min': 404, 'max': 404}","{'mean': -143.0, 'median': -143.0, 'std': nan, 'min': -143, 'max': -143}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 404.0, 'median': 404.0, 'std': nan, 'min': 404, 'max': 404}","{'mean': -143.0, 'median': -143.0, 'std': nan, 'min': -143, 'max': -143}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 549.0, 'median': 549.0, 'std': nan, 'min': 549, 'max': 549}","{'mean': -287.0, 'median': -287.0, 'std': nan, 'min': -287, 'max': -287}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,-,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 542.0, 'median': 542.0, 'std': nan, 'min': 542, 'max': 542}","{'mean': -280.0, 'median': -280.0, 'std': nan, 'min': -280, 'max': -280}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,django.contrib,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 559.0, 'median': 559.0, 'std': nan, 'min': 559, 'max': 559}","{'mean': -298.0, 'median': -298.0, 'std': nan, 'min': -298, 'max': -298}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,django.http,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,4,81245.0,django,1.4.1,Direct,django,1.4.1,,,False,1.4,1.4.2,"{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': 240.0, 'median': 240.0, 'std': nan, 'min': 240, 'max': 240}","{'mean': -33.0, 'median': -33.0, 'std': nan, 'min': -33, 'max': -33}","{'mean': Timestamp('2012-10-17 22:18:35'), 'median': Timestamp('2012-10-17 22:18:35'), 'std': NaT, 'min': Timestamp('2012-10-17 22:18:35'), 'max': Timestamp('2012-10-17 22:18:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,django.contrib,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 1248.0, 'median': 1248.0, 'std': nan, 'min': 1248, 'max': 1248}","{'mean': -987.0, 'median': -987.0, 'std': nan, 'min': -987, 'max': -987}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,django.contrib,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 1248.0, 'median': 1248.0, 'std': nan, 'min': 1248, 'max': 1248}","{'mean': -987.0, 'median': -987.0, 'std': nan, 'min': -987, 'max': -987}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.10,"{'mean': 1013.5, 'median': 1013.5, 'std': 596.0910165402596, 'min': 592, 'max': 1435}","{'mean': 1098.0, 'median': 1098.0, 'std': 478.0041840821061, 'min': 760, 'max': 1436}","{'mean': -85.5, 'median': -85.5, 'std': 118.08683245815344, 'min': -169, 'max': -2}","{'mean': Timestamp('2014-01-28 18:30:51'), 'median': Timestamp('2014-01-28 18:30:51'), 'std': Timedelta('117 days 14:59:33.418664414'), 'min': Timestamp('2013-11-06 14:21:25'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.2,1.4.13,"{'mean': 908.5, 'median': 908.5, 'std': 914.2890680742059, 'min': 262, 'max': 1555}","{'mean': 1223.0, 'median': 1223.0, 'std': 478.0041840821061, 'min': 885, 'max': 1561}","{'mean': -315.0, 'median': -315.0, 'std': 436.9919907732864, 'min': -624, 'max': -6}","{'mean': Timestamp('2013-10-15 20:54:01.500000'), 'median': Timestamp('2013-10-15 20:54:01.500000'), 'std': Timedelta('436 days 22:34:18.179837936'), 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 783.0, 'median': 783.0, 'std': nan, 'min': 783, 'max': 783}","{'mean': -522.0, 'median': -522.0, 'std': nan, 'min': -522, 'max': -522}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,django.util,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 783.0, 'median': 783.0, 'std': nan, 'min': 783, 'max': 783}","{'mean': -522.0, 'median': -522.0, 'std': nan, 'min': -522, 'max': -522}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 404.0, 'median': 404.0, 'std': nan, 'min': 404, 'max': 404}","{'mean': -143.0, 'median': -143.0, 'std': nan, 'min': -143, 'max': -143}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 404.0, 'median': 404.0, 'std': nan, 'min': 404, 'max': 404}","{'mean': -143.0, 'median': -143.0, 'std': nan, 'min': -143, 'max': -143}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,django.contrib,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 549.0, 'median': 549.0, 'std': nan, 'min': 549, 'max': 549}","{'mean': -287.0, 'median': -287.0, 'std': nan, 'min': -287, 'max': -287}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,-,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 542.0, 'median': 542.0, 'std': nan, 'min': 542, 'max': 542}","{'mean': -280.0, 'median': -280.0, 'std': nan, 'min': -280, 'max': -280}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,django.contrib,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.3,"{'mean': 262.0, 'median': 262.0, 'std': nan, 'min': 262, 'max': 262}","{'mean': 559.0, 'median': 559.0, 'std': nan, 'min': 559, 'max': 559}","{'mean': -298.0, 'median': -298.0, 'std': nan, 'min': -298, 'max': -298}","{'mean': Timestamp('2012-12-10 21:46:28'), 'median': Timestamp('2012-12-10 21:46:28'), 'std': NaT, 'min': Timestamp('2012-12-10 21:46:28'), 'max': Timestamp('2012-12-10 21:46:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.1,"{'mean': 129.0, 'median': 129.0, 'std': nan, 'min': 129, 'max': 129}","{'mean': 129.0, 'median': 129.0, 'std': nan, 'min': 129, 'max': 129}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2012-07-30 22:48:27'), 'median': Timestamp('2012-07-30 22:48:27'), 'std': NaT, 'min': Timestamp('2012-07-30 22:48:27'), 'max': Timestamp('2012-07-30 22:48:27')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.1,"{'mean': 129.0, 'median': 129.0, 'std': nan, 'min': 129, 'max': 129}","{'mean': 129.0, 'median': 129.0, 'std': nan, 'min': 129, 'max': 129}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2012-07-30 22:48:27'), 'median': Timestamp('2012-07-30 22:48:27'), 'std': NaT, 'min': Timestamp('2012-07-30 22:48:27'), 'max': Timestamp('2012-07-30 22:48:27')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.1,"{'mean': 129.0, 'median': 129.0, 'std': nan, 'min': 129, 'max': 129}","{'mean': 129.0, 'median': 129.0, 'std': nan, 'min': 129, 'max': 129}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2012-07-30 22:48:27'), 'median': Timestamp('2012-07-30 22:48:27'), 'std': NaT, 'min': Timestamp('2012-07-30 22:48:27'), 'max': Timestamp('2012-07-30 22:48:27')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,django.http,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,4,81219.0,django,1.4,Direct,django,1.4,,,False,1.4,1.4.2,"{'mean': 208.0, 'median': 208.0, 'std': nan, 'min': 208, 'max': 208}","{'mean': 240.0, 'median': 240.0, 'std': nan, 'min': 240, 'max': 240}","{'mean': -33.0, 'median': -33.0, 'std': nan, 'min': -33, 'max': -33}","{'mean': Timestamp('2012-10-17 22:18:35'), 'median': Timestamp('2012-10-17 22:18:35'), 'std': NaT, 'min': Timestamp('2012-10-17 22:18:35'), 'max': Timestamp('2012-10-17 22:18:35')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,72525.0,django,1.3.7,Direct,django,1.3.7,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,72525.0,django,1.3.6,Direct,django,1.3.6,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,72419.0,django,1.3.5,Direct,django,1.3.5,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,72416.0,django,1.3.4,Direct,django,1.3.4,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 771.0, 'median': 771.0, 'std': nan, 'min': 771, 'max': 771}","{'mean': -58.0, 'median': -58.0, 'std': nan, 'min': -58, 'max': -58}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 771.0, 'median': 771.0, 'std': nan, 'min': 771, 'max': 771}","{'mean': -58.0, 'median': -58.0, 'std': nan, 'min': -58, 'max': -58}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,django.http,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,3,72384.0,django,1.3.3,Direct,django,1.3.3,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 606.0, 'median': 606.0, 'std': nan, 'min': 606, 'max': 606}","{'mean': 106.0, 'median': 106.0, 'std': nan, 'min': 106, 'max': 106}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 771.0, 'median': 771.0, 'std': nan, 'min': 771, 'max': 771}","{'mean': -58.0, 'median': -58.0, 'std': nan, 'min': -58, 'max': -58}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 771.0, 'median': 771.0, 'std': nan, 'min': 771, 'max': 771}","{'mean': -58.0, 'median': -58.0, 'std': nan, 'min': -58, 'max': -58}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,django.http,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,3,72384.0,django,1.3.2,Direct,django,1.3.2,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 606.0, 'median': 606.0, 'std': nan, 'min': 606, 'max': 606}","{'mean': 106.0, 'median': 106.0, 'std': nan, 'min': 106, 'max': 106}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 771.0, 'median': 771.0, 'std': nan, 'min': 771, 'max': 771}","{'mean': -58.0, 'median': -58.0, 'std': nan, 'min': -58, 'max': -58}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 771.0, 'median': 771.0, 'std': nan, 'min': 771, 'max': 771}","{'mean': -58.0, 'median': -58.0, 'std': nan, 'min': -58, 'max': -58}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,django.http,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,3,72336.0,django,1.3.1,Direct,django,1.3.1,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 606.0, 'median': 606.0, 'std': nan, 'min': 606, 'max': 606}","{'mean': 106.0, 'median': 106.0, 'std': nan, 'min': 106, 'max': 106}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 771.0, 'median': 771.0, 'std': nan, 'min': 771, 'max': 771}","{'mean': -58.0, 'median': -58.0, 'std': nan, 'min': -58, 'max': -58}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,-,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 771.0, 'median': 771.0, 'std': nan, 'min': 771, 'max': 771}","{'mean': -58.0, 'median': -58.0, 'std': nan, 'min': -58, 'max': -58}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,django.http,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.3,1.3.4,"{'mean': 713.0, 'median': 713.0, 'std': nan, 'min': 713, 'max': 713}","{'mean': 606.0, 'median': 606.0, 'std': nan, 'min': 606, 'max': 606}","{'mean': 106.0, 'median': 106.0, 'std': nan, 'min': 106, 'max': 106}","{'mean': Timestamp('2013-03-05 22:33:47'), 'median': Timestamp('2013-03-05 22:33:47'), 'std': NaT, 'min': Timestamp('2013-03-05 22:33:47'), 'max': Timestamp('2013-03-05 22:33:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,django.contrib,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.3,1.3.1,"{'mean': 170.0, 'median': 170.0, 'std': nan, 'min': 170, 'max': 170}","{'mean': 210.0, 'median': 210.0, 'std': nan, 'min': 210, 'max': 210}","{'mean': -40.0, 'median': -40.0, 'std': nan, 'min': -40, 'max': -40}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.3,1.3.1,"{'mean': 170.0, 'median': 170.0, 'std': nan, 'min': 170, 'max': 170}","{'mean': 210.0, 'median': 210.0, 'std': nan, 'min': 210, 'max': 210}","{'mean': -40.0, 'median': -40.0, 'std': nan, 'min': -40, 'max': -40}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.3,1.3.1,"{'mean': 170.0, 'median': 170.0, 'std': nan, 'min': 170, 'max': 170}","{'mean': 210.0, 'median': 210.0, 'std': nan, 'min': 210, 'max': 210}","{'mean': -40.0, 'median': -40.0, 'std': nan, 'min': -40, 'max': -40}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.3,1.3.1,"{'mean': 170.0, 'median': 170.0, 'std': nan, 'min': 170, 'max': 170}","{'mean': 210.0, 'median': 210.0, 'std': nan, 'min': 210, 'max': 210}","{'mean': -40.0, 'median': -40.0, 'std': nan, 'min': -40, 'max': -40}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,3,72202.0,django,1.3,Direct,django,1.3,,,False,1.3,1.3.1,"{'mean': 170.0, 'median': 170.0, 'std': nan, 'min': 170, 'max': 170}","{'mean': 210.0, 'median': 210.0, 'std': nan, 'min': 210, 'max': 210}","{'mean': -40.0, 'median': -40.0, 'std': nan, 'min': -40, 'max': -40}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64739.0,django,1.2.7,Direct,django,1.2.7,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,django.contrib,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.2.6,"{'mean': 481.0, 'median': 481.0, 'std': nan, 'min': 481, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2011-09-11 03:05:18'), 'median': Timestamp('2011-09-11 03:05:18'), 'std': NaT, 'min': Timestamp('2011-09-11 03:05:18'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.2.6,"{'mean': 481.0, 'median': 481.0, 'std': nan, 'min': 481, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2011-09-11 03:05:18'), 'median': Timestamp('2011-09-11 03:05:18'), 'std': NaT, 'min': Timestamp('2011-09-11 03:05:18'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.2.6,"{'mean': 481.0, 'median': 481.0, 'std': nan, 'min': 481, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2011-09-11 03:05:18'), 'median': Timestamp('2011-09-11 03:05:18'), 'std': NaT, 'min': Timestamp('2011-09-11 03:05:18'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.2.6,"{'mean': 481.0, 'median': 481.0, 'std': nan, 'min': 481, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2011-09-11 03:05:18'), 'median': Timestamp('2011-09-11 03:05:18'), 'std': NaT, 'min': Timestamp('2011-09-11 03:05:18'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,64739.0,django,1.2.6,Direct,django,1.2.6,,,False,1.2,1.2.6,"{'mean': 481.0, 'median': 481.0, 'std': nan, 'min': 481, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': nan, 'min': 519, 'max': 519}","{'mean': -39.0, 'median': -39.0, 'std': nan, 'min': -39, 'max': -39}","{'mean': Timestamp('2011-09-11 03:05:18'), 'median': Timestamp('2011-09-11 03:05:18'), 'std': NaT, 'min': Timestamp('2011-09-11 03:05:18'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,django.contrib,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,64460.0,django,1.2.5,Direct,django,1.2.5,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.3,"{'mean': 370.0, 'median': 370.0, 'std': 155.56349186104046, 'min': 260, 'max': 480}","{'mean': 695.5, 'median': 695.5, 'std': 154.8563850798539, 'min': 586, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': 0.0, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': Timedelta('0 days 00:00:00'), 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,-,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,django.contrib,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,64180.0,django,1.2.4,Direct,django,1.2.4,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.3,"{'mean': 480.0, 'median': 480.0, 'std': nan, 'min': 480, 'max': 480}","{'mean': 805.0, 'median': 805.0, 'std': nan, 'min': 805, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': nan, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.3,"{'mean': 480.0, 'median': 480.0, 'std': nan, 'min': 480, 'max': 480}","{'mean': 805.0, 'median': 805.0, 'std': nan, 'min': 805, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': nan, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.3,"{'mean': 480.0, 'median': 480.0, 'std': nan, 'min': 480, 'max': 480}","{'mean': 805.0, 'median': 805.0, 'std': nan, 'min': 805, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': nan, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,-,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,django.contrib,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,63819.0,django,1.2.3,Direct,django,1.2.3,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.3,"{'mean': 241.0, 'median': 241.0, 'std': 337.9970414071697, 'min': 2, 'max': 480}","{'mean': 748.0, 'median': 748.0, 'std': 80.61017305526642, 'min': 691, 'max': 805}","{'mean': -508.0, 'median': -508.0, 'std': 257.3868683519033, 'min': -690, 'max': -326}","{'mean': Timestamp('2011-03-12 06:13:30'), 'median': Timestamp('2011-03-12 06:13:30'), 'std': Timedelta('257 days 05:34:50.805924828'), 'min': Timestamp('2010-09-11 08:50:39'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.3,"{'mean': 241.0, 'median': 241.0, 'std': 337.9970414071697, 'min': 2, 'max': 480}","{'mean': 748.0, 'median': 748.0, 'std': 80.61017305526642, 'min': 691, 'max': 805}","{'mean': -508.0, 'median': -508.0, 'std': 257.3868683519033, 'min': -690, 'max': -326}","{'mean': Timestamp('2011-03-12 06:13:30'), 'median': Timestamp('2011-03-12 06:13:30'), 'std': Timedelta('257 days 05:34:50.805924828'), 'min': Timestamp('2010-09-11 08:50:39'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.3,"{'mean': 241.0, 'median': 241.0, 'std': 337.9970414071697, 'min': 2, 'max': 480}","{'mean': 748.0, 'median': 748.0, 'std': 80.61017305526642, 'min': 691, 'max': 805}","{'mean': -508.0, 'median': -508.0, 'std': 257.3868683519033, 'min': -690, 'max': -326}","{'mean': Timestamp('2011-03-12 06:13:30'), 'median': Timestamp('2011-03-12 06:13:30'), 'std': Timedelta('257 days 05:34:50.805924828'), 'min': Timestamp('2010-09-11 08:50:39'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,-,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,django.contrib,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,63865.0,django,1.2.2,Direct,django,1.2.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.3,"{'mean': 480.0, 'median': 480.0, 'std': nan, 'min': 480, 'max': 480}","{'mean': 805.0, 'median': 805.0, 'std': nan, 'min': 805, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': nan, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.3,"{'mean': 480.0, 'median': 480.0, 'std': nan, 'min': 480, 'max': 480}","{'mean': 805.0, 'median': 805.0, 'std': nan, 'min': 805, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': nan, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.3,"{'mean': 480.0, 'median': 480.0, 'std': nan, 'min': 480, 'max': 480}","{'mean': 805.0, 'median': 805.0, 'std': nan, 'min': 805, 'max': 805}","{'mean': -326.0, 'median': -326.0, 'std': nan, 'min': -326, 'max': -326}","{'mean': Timestamp('2011-09-10 03:36:21'), 'median': Timestamp('2011-09-10 03:36:21'), 'std': NaT, 'min': Timestamp('2011-09-10 03:36:21'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,-,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,django.contrib,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,63460.0,django,1.2.1,Direct,django,1.2.1,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,django.contrib,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,2.2.24,"{'mean': 4033.0, 'median': 4033.0, 'std': nan, 'min': 4033, 'max': 4033}","{'mean': 4039.0, 'median': 4039.0, 'std': nan, 'min': 4039, 'max': 4039}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2021-06-02 08:53:39'), 'median': Timestamp('2021-06-02 08:53:39'), 'std': NaT, 'min': Timestamp('2021-06-02 08:53:39'), 'max': Timestamp('2021-06-02 08:53:39')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,-,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.11.27,"{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': 3501.0, 'median': 3501.0, 'std': nan, 'min': 3501, 'max': 3501}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-12-18 08:59:02'), 'median': Timestamp('2019-12-18 08:59:02'), 'std': NaT, 'min': Timestamp('2019-12-18 08:59:02'), 'max': Timestamp('2019-12-18 08:59:02')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,django.contrib,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.8.13,"{'mean': 2253.0, 'median': 2253.0, 'std': nan, 'min': 2253, 'max': 2253}","{'mean': 2271.0, 'median': 2271.0, 'std': nan, 'min': 2271, 'max': 2271}","{'mean': -18.0, 'median': -18.0, 'std': nan, 'min': -18, 'max': -18}","{'mean': Timestamp('2016-07-18 18:38:12'), 'median': Timestamp('2016-07-18 18:38:12'), 'std': NaT, 'min': Timestamp('2016-07-18 18:38:12'), 'max': Timestamp('2016-07-18 18:38:12')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,-,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.8.14,"{'mean': 2323.0, 'median': 2323.0, 'std': nan, 'min': 2323, 'max': 2323}","{'mean': 2330.0, 'median': 2330.0, 'std': nan, 'min': 2330, 'max': 2330}","{'mean': -8.0, 'median': -8.0, 'std': nan, 'min': -8, 'max': -8}","{'mean': Timestamp('2016-09-26 18:30:16'), 'median': Timestamp('2016-09-26 18:30:16'), 'std': NaT, 'min': Timestamp('2016-09-26 18:30:16'), 'max': Timestamp('2016-09-26 18:30:16')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,-,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,django.util,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,django.views,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,django.db,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.17,"{'mean': 1701.0, 'median': 1701.0, 'std': nan, 'min': 1701, 'max': 1701}","{'mean': 1704.0, 'median': 1704.0, 'std': nan, 'min': 1704, 'max': 1704}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-01-13 18:54:01'), 'median': Timestamp('2015-01-13 18:54:01'), 'std': NaT, 'min': Timestamp('2015-01-13 18:54:01'), 'max': Timestamp('2015-01-13 18:54:01')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,django.contrib,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.7.5,"{'mean': 1756.0, 'median': 1756.0, 'std': nan, 'min': 1756, 'max': 1756}","{'mean': 1759.0, 'median': 1759.0, 'std': nan, 'min': 1759, 'max': 1759}","{'mean': -3.0, 'median': -3.0, 'std': nan, 'min': -3, 'max': -3}","{'mean': Timestamp('2015-03-09 15:30:40'), 'median': Timestamp('2015-03-09 15:30:40'), 'std': NaT, 'min': Timestamp('2015-03-09 15:30:40'), 'max': Timestamp('2015-03-09 15:30:40')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,django.utils,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.19,"{'mean': 1766.0, 'median': 1766.0, 'std': nan, 'min': 1766, 'max': 1766}","{'mean': 1772.0, 'median': 1772.0, 'std': nan, 'min': 1772, 'max': 1772}","{'mean': -7.0, 'median': -7.0, 'std': nan, 'min': -7, 'max': -7}","{'mean': Timestamp('2015-03-19 00:03:58'), 'median': Timestamp('2015-03-19 00:03:58'), 'std': NaT, 'min': Timestamp('2015-03-19 00:03:58'), 'max': Timestamp('2015-03-19 00:03:58')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,django.core,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.20,"{'mean': 1877.0, 'median': 1877.0, 'std': nan, 'min': 1877, 'max': 1877}","{'mean': 1883.0, 'median': 1883.0, 'std': nan, 'min': 1883, 'max': 1883}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2015-07-08 19:56:26'), 'median': Timestamp('2015-07-08 19:56:26'), 'std': NaT, 'min': Timestamp('2015-07-08 19:56:26'), 'max': Timestamp('2015-07-08 19:56:26')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,django.utils,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.7.10,"{'mean': 2016.0, 'median': 2016.0, 'std': nan, 'min': 2016, 'max': 2016}","{'mean': 2030.0, 'median': 2030.0, 'std': nan, 'min': 2030, 'max': 2030}","{'mean': -14.0, 'median': -14.0, 'std': nan, 'min': -14, 'max': -14}","{'mean': Timestamp('2015-11-24 17:19:47'), 'median': Timestamp('2015-11-24 17:19:47'), 'std': NaT, 'min': Timestamp('2015-11-24 17:19:47'), 'max': Timestamp('2015-11-24 17:19:47')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,django.core,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,-,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,django.db,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.10,"{'mean': 1435.0, 'median': 1435.0, 'std': nan, 'min': 1435, 'max': 1435}","{'mean': 1436.0, 'median': 1436.0, 'std': nan, 'min': 1436, 'max': 1436}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2014-04-21 22:40:17'), 'median': Timestamp('2014-04-21 22:40:17'), 'std': NaT, 'min': Timestamp('2014-04-21 22:40:17'), 'max': Timestamp('2014-04-21 22:40:17')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,django.core,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,-,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,django.contrib,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.4.13,"{'mean': 1555.0, 'median': 1555.0, 'std': nan, 'min': 1555, 'max': 1555}","{'mean': 1561.0, 'median': 1561.0, 'std': nan, 'min': 1561, 'max': 1561}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2014-08-20 20:01:35'), 'median': Timestamp('2014-08-20 20:01:35'), 'std': NaT, 'min': Timestamp('2014-08-20 20:01:35'), 'max': Timestamp('2014-08-20 20:01:35')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.3,"{'mean': 245.0, 'median': 245.0, 'std': 332.34018715767735, 'min': 10, 'max': 480}","{'mean': 807.0, 'median': 807.0, 'std': 2.8284271247461903, 'min': 805, 'max': 809}","{'mean': -562.5, 'median': -562.5, 'std': 334.46150750123695, 'min': -799, 'max': -326}","{'mean': Timestamp('2011-01-16 12:27:54.500000'), 'median': Timestamp('2011-01-16 12:27:54.500000'), 'std': Timedelta('334 days 15:31:04.053749848'), 'min': Timestamp('2010-05-24 21:19:28'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.3,"{'mean': 245.0, 'median': 245.0, 'std': 332.34018715767735, 'min': 10, 'max': 480}","{'mean': 807.0, 'median': 807.0, 'std': 2.8284271247461903, 'min': 805, 'max': 809}","{'mean': -562.5, 'median': -562.5, 'std': 334.46150750123695, 'min': -799, 'max': -326}","{'mean': Timestamp('2011-01-16 12:27:54.500000'), 'median': Timestamp('2011-01-16 12:27:54.500000'), 'std': Timedelta('334 days 15:31:04.053749848'), 'min': Timestamp('2010-05-24 21:19:28'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.3,"{'mean': 245.0, 'median': 245.0, 'std': 332.34018715767735, 'min': 10, 'max': 480}","{'mean': 807.0, 'median': 807.0, 'std': 2.8284271247461903, 'min': 805, 'max': 809}","{'mean': -562.5, 'median': -562.5, 'std': 334.46150750123695, 'min': -799, 'max': -326}","{'mean': Timestamp('2011-01-16 12:27:54.500000'), 'median': Timestamp('2011-01-16 12:27:54.500000'), 'std': Timedelta('334 days 15:31:04.053749848'), 'min': Timestamp('2010-05-24 21:19:28'), 'max': Timestamp('2011-09-10 03:36:21')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,-,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.2.5,"{'mean': 267.0, 'median': 267.0, 'std': nan, 'min': 267, 'max': 267}","{'mean': 273.0, 'median': 273.0, 'std': nan, 'min': 273, 'max': 273}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:08:37'), 'median': Timestamp('2011-02-09 04:08:37'), 'std': NaT, 'min': Timestamp('2011-02-09 04:08:37'), 'max': Timestamp('2011-02-09 04:08:37')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,django.contrib,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,2,63401.0,django,1.2,Direct,django,1.2,,,False,1.2,1.2.6,"{'mean': 480.5, 'median': 480.5, 'std': 0.7071067811865476, 'min': 480, 'max': 481}","{'mean': 519.0, 'median': 519.0, 'std': 0.0, 'min': 519, 'max': 519}","{'mean': -39.5, 'median': -39.5, 'std': 0.7071067811865476, 'min': -40, 'max': -39}","{'mean': Timestamp('2011-09-10 15:23:43.500000'), 'median': Timestamp('2011-09-10 15:23:43.500000'), 'std': Timedelta('0 days 16:32:10.612801314'), 'min': Timestamp('2011-09-10 03:42:09'), 'max': Timestamp('2011-09-11 03:05:18')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,58615.0,django,1.1.4,Direct,django,1.1.4,,,False,1.1.2,1.2.1,"{'mean': 10.0, 'median': 10.0, 'std': nan, 'min': 10, 'max': 10}","{'mean': 809.0, 'median': 809.0, 'std': nan, 'min': 809, 'max': 809}","{'mean': -799.0, 'median': -799.0, 'std': nan, 'min': -799, 'max': -799}","{'mean': Timestamp('2010-05-24 21:19:28'), 'median': Timestamp('2010-05-24 21:19:28'), 'std': NaT, 'min': Timestamp('2010-05-24 21:19:28'), 'max': Timestamp('2010-05-24 21:19:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,58615.0,django,1.1.4,Direct,django,1.1.4,,,False,1.1.2,1.2.1,"{'mean': 10.0, 'median': 10.0, 'std': nan, 'min': 10, 'max': 10}","{'mean': 809.0, 'median': 809.0, 'std': nan, 'min': 809, 'max': 809}","{'mean': -799.0, 'median': -799.0, 'std': nan, 'min': -799, 'max': -799}","{'mean': Timestamp('2010-05-24 21:19:28'), 'median': Timestamp('2010-05-24 21:19:28'), 'std': NaT, 'min': Timestamp('2010-05-24 21:19:28'), 'max': Timestamp('2010-05-24 21:19:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,58615.0,django,1.1.4,Direct,django,1.1.4,,,False,1.1.2,1.2.1,"{'mean': 10.0, 'median': 10.0, 'std': nan, 'min': 10, 'max': 10}","{'mean': 809.0, 'median': 809.0, 'std': nan, 'min': 809, 'max': 809}","{'mean': -799.0, 'median': -799.0, 'std': nan, 'min': -799, 'max': -799}","{'mean': Timestamp('2010-05-24 21:19:28'), 'median': Timestamp('2010-05-24 21:19:28'), 'std': NaT, 'min': Timestamp('2010-05-24 21:19:28'), 'max': Timestamp('2010-05-24 21:19:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,django.http,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.2.1,"{'mean': 10.0, 'median': 10.0, 'std': nan, 'min': 10, 'max': 10}","{'mean': 809.0, 'median': 809.0, 'std': nan, 'min': 809, 'max': 809}","{'mean': -799.0, 'median': -799.0, 'std': nan, 'min': -799, 'max': -799}","{'mean': Timestamp('2010-05-24 21:19:28'), 'median': Timestamp('2010-05-24 21:19:28'), 'std': NaT, 'min': Timestamp('2010-05-24 21:19:28'), 'max': Timestamp('2010-05-24 21:19:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,django.forms,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.2.1,"{'mean': 10.0, 'median': 10.0, 'std': nan, 'min': 10, 'max': 10}","{'mean': 809.0, 'median': 809.0, 'std': nan, 'min': 809, 'max': 809}","{'mean': -799.0, 'median': -799.0, 'std': nan, 'min': -799, 'max': -799}","{'mean': Timestamp('2010-05-24 21:19:28'), 'median': Timestamp('2010-05-24 21:19:28'), 'std': NaT, 'min': Timestamp('2010-05-24 21:19:28'), 'max': Timestamp('2010-05-24 21:19:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,django.core,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.2.1,"{'mean': 10.0, 'median': 10.0, 'std': nan, 'min': 10, 'max': 10}","{'mean': 809.0, 'median': 809.0, 'std': nan, 'min': 809, 'max': 809}","{'mean': -799.0, 'median': -799.0, 'std': nan, 'min': -799, 'max': -799}","{'mean': Timestamp('2010-05-24 21:19:28'), 'median': Timestamp('2010-05-24 21:19:28'), 'std': NaT, 'min': Timestamp('2010-05-24 21:19:28'), 'max': Timestamp('2010-05-24 21:19:28')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.1.4,"{'mean': 270.0, 'median': 270.0, 'std': nan, 'min': 270, 'max': 270}","{'mean': 276.0, 'median': 276.0, 'std': nan, 'min': 276, 'max': 276}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:13:07'), 'median': Timestamp('2011-02-09 04:13:07'), 'std': NaT, 'min': Timestamp('2011-02-09 04:13:07'), 'max': Timestamp('2011-02-09 04:13:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,-,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.1.4,"{'mean': 270.0, 'median': 270.0, 'std': nan, 'min': 270, 'max': 270}","{'mean': 276.0, 'median': 276.0, 'std': nan, 'min': 276, 'max': 276}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:13:07'), 'median': Timestamp('2011-02-09 04:13:07'), 'std': NaT, 'min': Timestamp('2011-02-09 04:13:07'), 'max': Timestamp('2011-02-09 04:13:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,-,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.1.4,"{'mean': 270.0, 'median': 270.0, 'std': nan, 'min': 270, 'max': 270}","{'mean': 276.0, 'median': 276.0, 'std': nan, 'min': 276, 'max': 276}","{'mean': -6.0, 'median': -6.0, 'std': nan, 'min': -6, 'max': -6}","{'mean': Timestamp('2011-02-09 04:13:07'), 'median': Timestamp('2011-02-09 04:13:07'), 'std': NaT, 'min': Timestamp('2011-02-09 04:13:07'), 'max': Timestamp('2011-02-09 04:13:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,django.contrib,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.1.4,"{'mean': 270.0, 'median': 270.0, 'std': nan, 'min': 270, 'max': 270}","{'mean': 523.0, 'median': 523.0, 'std': nan, 'min': 523, 'max': 523}","{'mean': -253.0, 'median': -253.0, 'std': nan, 'min': -253, 'max': -253}","{'mean': Timestamp('2011-02-09 04:13:07'), 'median': Timestamp('2011-02-09 04:13:07'), 'std': NaT, 'min': Timestamp('2011-02-09 04:13:07'), 'max': Timestamp('2011-02-09 04:13:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.1.4,"{'mean': 270.0, 'median': 270.0, 'std': nan, 'min': 270, 'max': 270}","{'mean': 523.0, 'median': 523.0, 'std': nan, 'min': 523, 'max': 523}","{'mean': -253.0, 'median': -253.0, 'std': nan, 'min': -253, 'max': -253}","{'mean': Timestamp('2011-02-09 04:13:07'), 'median': Timestamp('2011-02-09 04:13:07'), 'std': NaT, 'min': Timestamp('2011-02-09 04:13:07'), 'max': Timestamp('2011-02-09 04:13:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,django.forms,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.1.4,"{'mean': 270.0, 'median': 270.0, 'std': nan, 'min': 270, 'max': 270}","{'mean': 523.0, 'median': 523.0, 'std': nan, 'min': 523, 'max': 523}","{'mean': -253.0, 'median': -253.0, 'std': nan, 'min': -253, 'max': -253}","{'mean': Timestamp('2011-02-09 04:13:07'), 'median': Timestamp('2011-02-09 04:13:07'), 'std': NaT, 'min': Timestamp('2011-02-09 04:13:07'), 'max': Timestamp('2011-02-09 04:13:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.1.4,"{'mean': 270.0, 'median': 270.0, 'std': nan, 'min': 270, 'max': 270}","{'mean': 523.0, 'median': 523.0, 'std': nan, 'min': 523, 'max': 523}","{'mean': -253.0, 'median': -253.0, 'std': nan, 'min': -253, 'max': -253}","{'mean': Timestamp('2011-02-09 04:13:07'), 'median': Timestamp('2011-02-09 04:13:07'), 'std': NaT, 'min': Timestamp('2011-02-09 04:13:07'), 'max': Timestamp('2011-02-09 04:13:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,-,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,1,1,58590.0,django,1.1.3,Direct,django,1.1.3,,,False,1.1.2,1.1.4,"{'mean': 270.0, 'median': 270.0, 'std': nan, 'min': 270, 'max': 270}","{'mean': 523.0, 'median': 523.0, 'std': nan, 'min': 523, 'max': 523}","{'mean': -253.0, 'median': -253.0, 'std': nan, 'min': -253, 'max': -253}","{'mean': Timestamp('2011-02-09 04:13:07'), 'median': Timestamp('2011-02-09 04:13:07'), 'std': NaT, 'min': Timestamp('2011-02-09 04:13:07'), 'max': Timestamp('2011-02-09 04:13:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,jinja2.,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,11458.0,flask,3.0.0,Indirect,jinja2,3.1.2,>=3.1.2,,False,2.0,3.1.3,"{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-01-10 23:12:19'), 'median': Timestamp('2024-01-10 23:12:19'), 'std': NaT, 'min': Timestamp('2024-01-10 23:12:19'), 'max': Timestamp('2024-01-10 23:12:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,3,0,16337.0,flask,3.0.0,Indirect,werkzeug,3.0.0,>=3.0.0,,False,3.0.0,3.0.1,"{'mean': 24.0, 'median': 24.0, 'std': nan, 'min': 24, 'max': 24}","{'mean': 25.0, 'median': 25.0, 'std': nan, 'min': 25, 'max': 25}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-10-24 20:57:47'), 'median': Timestamp('2023-10-24 20:57:47'), 'std': NaT, 'min': Timestamp('2023-10-24 20:57:47'), 'max': Timestamp('2023-10-24 20:57:47')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,3,18386.0,flask,2.3.3,Indirect,werkzeug,2.3.7,>=2.3.7,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,3,18391.0,flask,2.3.2,Indirect,werkzeug,2.3.3,>=2.3.3,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,3,6943.0,flask,2.3.1,Direct,flask,2.3.1,,,False,2.3.0,2.3.2,"{'mean': 5.0, 'median': 5.0, 'std': nan, 'min': 5, 'max': 5}","{'mean': 6.0, 'median': 6.0, 'std': nan, 'min': 6, 'max': 6}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2023-05-01 15:42:08'), 'median': Timestamp('2023-05-01 15:42:08'), 'std': NaT, 'min': Timestamp('2023-05-01 15:42:08'), 'max': Timestamp('2023-05-01 15:42:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,3,18359.0,flask,2.3.1,Indirect,werkzeug,2.3.0,>=2.3.0,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,3,6943.0,flask,2.3.0,Direct,flask,2.3.0,,,False,2.3.0,2.3.2,"{'mean': 5.0, 'median': 5.0, 'std': nan, 'min': 5, 'max': 5}","{'mean': 6.0, 'median': 6.0, 'std': nan, 'min': 6, 'max': 6}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2023-05-01 15:42:08'), 'median': Timestamp('2023-05-01 15:42:08'), 'std': NaT, 'min': Timestamp('2023-05-01 15:42:08'), 'max': Timestamp('2023-05-01 15:42:08')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,7541.0,flask,2.2.4,Direct,flask,2.2.4,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,17547.0,flask,2.2.4,Indirect,werkzeug,2.2.3,>=2.2.2,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,7537.0,flask,2.2.3,Direct,flask,2.2.3,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,7488.0,flask,2.2.2,Direct,flask,2.2.2,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,2,17466.0,flask,2.2.2,Indirect,werkzeug,2.2.2,>=2.2.2,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,17466.0,flask,2.2.2,Indirect,werkzeug,2.2.2,>=2.2.2,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,17466.0,flask,2.2.2,Indirect,werkzeug,2.2.2,>=2.2.2,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,7494.0,flask,2.2.1,Direct,flask,2.2.1,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,2,17428.0,flask,2.2.1,Indirect,werkzeug,2.2.1,>=2.2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,17428.0,flask,2.2.1,Indirect,werkzeug,2.2.1,>=2.2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,2,17428.0,flask,2.2.1,Indirect,werkzeug,2.2.1,>=2.2.0,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,2,7367.0,flask,2.2.0,Direct,flask,2.2.0,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,1,6536.0,flask,2.1.3,Direct,flask,2.1.3,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,1,17032.0,flask,2.1.3,Indirect,werkzeug,2.1.2,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,17032.0,flask,2.1.3,Indirect,werkzeug,2.1.2,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,17032.0,flask,2.1.3,Indirect,werkzeug,2.1.2,>=2.0,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,1,6514.0,flask,2.1.2,Direct,flask,2.1.2,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,1,6507.0,flask,2.1.1,Direct,flask,2.1.1,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,jinja2.,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,11422.0,flask,2.1.1,Indirect,jinja2,3.1.1,>=3.0,,False,2.0,3.1.3,"{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-01-10 23:12:19'), 'median': Timestamp('2024-01-10 23:12:19'), 'std': NaT, 'min': Timestamp('2024-01-10 23:12:19'), 'max': Timestamp('2024-01-10 23:12:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,1,17019.0,flask,2.1.1,Indirect,werkzeug,2.1.0,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,17019.0,flask,2.1.1,Indirect,werkzeug,2.1.0,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,1,17019.0,flask,2.1.1,Indirect,werkzeug,2.1.0,>=2.0,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,werkzeug.,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,1,17019.0,flask,2.1.1,Indirect,werkzeug,2.1.0,>=2.0,,False,0.9.1,2.1.0,"{'mean': 3213.0, 'median': 3213.0, 'std': nan, 'min': 3213, 'max': 3213}","{'mean': 3266.0, 'median': 3266.0, 'std': nan, 'min': 3266, 'max': 3266}","{'mean': -54.0, 'median': -54.0, 'std': nan, 'min': -54, 'max': -54}","{'mean': Timestamp('2022-04-01 16:01:11'), 'median': Timestamp('2022-04-01 16:01:11'), 'std': NaT, 'min': Timestamp('2022-04-01 16:01:11'), 'max': Timestamp('2022-04-01 16:01:11')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,1,6507.0,flask,2.1.0,Direct,flask,2.1.0,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,6570.0,flask,2.0.3,Direct,flask,2.0.3,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,jinja2.,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,11598.0,flask,2.0.3,Indirect,jinja2,3.0.3,>=3.0,,False,2.0,3.1.3,"{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-01-10 23:12:19'), 'median': Timestamp('2024-01-10 23:12:19'), 'std': NaT, 'min': Timestamp('2024-01-10 23:12:19'), 'max': Timestamp('2024-01-10 23:12:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,0,18516.0,flask,2.0.3,Indirect,werkzeug,2.0.3,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,18516.0,flask,2.0.3,Indirect,werkzeug,2.0.3,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,18516.0,flask,2.0.3,Indirect,werkzeug,2.0.3,>=2.0,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,werkzeug.,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,0,18516.0,flask,2.0.3,Indirect,werkzeug,2.0.3,>=2.0,,False,0.9.1,2.1.0,"{'mean': 3213.0, 'median': 3213.0, 'std': nan, 'min': 3213, 'max': 3213}","{'mean': 3266.0, 'median': 3266.0, 'std': nan, 'min': 3266, 'max': 3266}","{'mean': -54.0, 'median': -54.0, 'std': nan, 'min': -54, 'max': -54}","{'mean': Timestamp('2022-04-01 16:01:11'), 'median': Timestamp('2022-04-01 16:01:11'), 'std': NaT, 'min': Timestamp('2022-04-01 16:01:11'), 'max': Timestamp('2022-04-01 16:01:11')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,6540.0,flask,2.0.2,Direct,flask,2.0.2,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,jinja2.,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,11609.0,flask,2.0.2,Indirect,jinja2,3.0.1,>=3.0,,False,2.0,3.1.3,"{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-01-10 23:12:19'), 'median': Timestamp('2024-01-10 23:12:19'), 'std': NaT, 'min': Timestamp('2024-01-10 23:12:19'), 'max': Timestamp('2024-01-10 23:12:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,0,18434.0,flask,2.0.2,Indirect,werkzeug,2.0.1,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,18434.0,flask,2.0.2,Indirect,werkzeug,2.0.1,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,18434.0,flask,2.0.2,Indirect,werkzeug,2.0.1,>=2.0,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,werkzeug.,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,0,18434.0,flask,2.0.2,Indirect,werkzeug,2.0.1,>=2.0,,False,0.9.1,2.1.0,"{'mean': 3213.0, 'median': 3213.0, 'std': nan, 'min': 3213, 'max': 3213}","{'mean': 3266.0, 'median': 3266.0, 'std': nan, 'min': 3266, 'max': 3266}","{'mean': -54.0, 'median': -54.0, 'std': nan, 'min': -54, 'max': -54}","{'mean': Timestamp('2022-04-01 16:01:11'), 'median': Timestamp('2022-04-01 16:01:11'), 'std': NaT, 'min': Timestamp('2022-04-01 16:01:11'), 'max': Timestamp('2022-04-01 16:01:11')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,6517.0,flask,2.0.1,Direct,flask,2.0.1,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,2,0,6358.0,flask,2.0.0,Direct,flask,2.0.0,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,jinja2.,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,11585.0,flask,2.0.0,Indirect,jinja2,3.0.0,>=3.0,,False,2.0,3.1.3,"{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-01-10 23:12:19'), 'median': Timestamp('2024-01-10 23:12:19'), 'std': NaT, 'min': Timestamp('2024-01-10 23:12:19'), 'max': Timestamp('2024-01-10 23:12:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,2,0,18422.0,flask,2.0.0,Indirect,werkzeug,2.0.0,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,18422.0,flask,2.0.0,Indirect,werkzeug,2.0.0,>=2.0,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,2,0,18422.0,flask,2.0.0,Indirect,werkzeug,2.0.0,>=2.0,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,werkzeug.,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,2,0,18422.0,flask,2.0.0,Indirect,werkzeug,2.0.0,>=2.0,,False,0.9.1,2.1.0,"{'mean': 3213.0, 'median': 3213.0, 'std': nan, 'min': 3213, 'max': 3213}","{'mean': 3266.0, 'median': 3266.0, 'std': nan, 'min': 3266, 'max': 3266}","{'mean': -54.0, 'median': -54.0, 'std': nan, 'min': -54, 'max': -54}","{'mean': Timestamp('2022-04-01 16:01:11'), 'median': Timestamp('2022-04-01 16:01:11'), 'std': NaT, 'min': Timestamp('2022-04-01 16:01:11'), 'max': Timestamp('2022-04-01 16:01:11')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,4377.0,flask,1.1.4,Direct,flask,1.1.4,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,jinja2.,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,8848.0,flask,1.1.4,Indirect,jinja2,2.11.3,"<3.0,>=2.10.1",,True,2.0,3.1.3,"{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-01-10 23:12:19'), 'median': Timestamp('2024-01-10 23:12:19'), 'std': NaT, 'min': Timestamp('2024-01-10 23:12:19'), 'max': Timestamp('2024-01-10 23:12:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,1,1,14235.0,flask,1.1.4,Indirect,werkzeug,1.0.1,"<2.0,>=0.15",,True,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,1,14235.0,flask,1.1.4,Indirect,werkzeug,1.0.1,"<2.0,>=0.15",,True,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,1,14235.0,flask,1.1.4,Indirect,werkzeug,1.0.1,"<2.0,>=0.15",,True,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,werkzeug.,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,1,14235.0,flask,1.1.4,Indirect,werkzeug,1.0.1,"<2.0,>=0.15",,True,0.9.1,2.1.0,"{'mean': 3213.0, 'median': 3213.0, 'std': nan, 'min': 3213, 'max': 3213}","{'mean': 3266.0, 'median': 3266.0, 'std': nan, 'min': 3266, 'max': 3266}","{'mean': -54.0, 'median': -54.0, 'std': nan, 'min': -54, 'max': -54}","{'mean': Timestamp('2022-04-01 16:01:11'), 'median': Timestamp('2022-04-01 16:01:11'), 'std': NaT, 'min': Timestamp('2022-04-01 16:01:11'), 'max': Timestamp('2022-04-01 16:01:11')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,4377.0,flask,1.1.3,Direct,flask,1.1.3,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,4377.0,flask,1.1.2,Direct,flask,1.1.2,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,jinja2.,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,8905.0,flask,1.1.2,Indirect,jinja2,2.11.1,>=2.10.1,,False,2.0,3.1.3,"{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-01-10 23:12:19'), 'median': Timestamp('2024-01-10 23:12:19'), 'std': NaT, 'min': Timestamp('2024-01-10 23:12:19'), 'max': Timestamp('2024-01-10 23:12:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
83668,CVE-2020-28493,"This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",2021-02-01 20:15:00,,2023-11-07 03:21:00,2024-03-19 15:39:52.395808,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,1,8905.0,flask,1.1.2,Indirect,jinja2,2.11.1,>=2.10.1,,False,2.0,2.11.3,"{'mean': 4580.0, 'median': 4580.0, 'std': nan, 'min': 4580, 'max': 4580}","{'mean': 4581.0, 'median': 4581.0, 'std': nan, 'min': 4581, 'max': 4581}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-01-31 16:33:07'), 'median': Timestamp('2021-01-31 16:33:07'), 'std': NaT, 'min': Timestamp('2021-01-31 16:33:07'), 'max': Timestamp('2021-01-31 16:33:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,4374.0,flask,1.1.1,Direct,flask,1.1.1,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,jinja2.,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,8473.0,flask,1.1.1,Indirect,jinja2,2.10.1,>=2.10.1,,False,2.0,3.1.3,"{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-01-10 23:12:19'), 'median': Timestamp('2024-01-10 23:12:19'), 'std': NaT, 'min': Timestamp('2024-01-10 23:12:19'), 'max': Timestamp('2024-01-10 23:12:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
83668,CVE-2020-28493,"This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",2021-02-01 20:15:00,,2023-11-07 03:21:00,2024-03-19 15:39:52.395808,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,1,8473.0,flask,1.1.1,Indirect,jinja2,2.10.1,>=2.10.1,,False,2.0,2.11.3,"{'mean': 4580.0, 'median': 4580.0, 'std': nan, 'min': 4580, 'max': 4580}","{'mean': 4581.0, 'median': 4581.0, 'std': nan, 'min': 4581, 'max': 4581}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-01-31 16:33:07'), 'median': Timestamp('2021-01-31 16:33:07'), 'std': NaT, 'min': Timestamp('2021-01-31 16:33:07'), 'max': Timestamp('2021-01-31 16:33:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,1,1,16754.0,flask,1.1.1,Indirect,werkzeug,0.15.4,>=0.15,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,1,16754.0,flask,1.1.1,Indirect,werkzeug,0.15.4,>=0.15,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,1,16754.0,flask,1.1.1,Indirect,werkzeug,0.15.4,>=0.15,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,werkzeug.,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,1,16754.0,flask,1.1.1,Indirect,werkzeug,0.15.4,>=0.15,,False,0.9.1,2.1.0,"{'mean': 3213.0, 'median': 3213.0, 'std': nan, 'min': 3213, 'max': 3213}","{'mean': 3266.0, 'median': 3266.0, 'std': nan, 'min': 3266, 'max': 3266}","{'mean': -54.0, 'median': -54.0, 'std': nan, 'min': -54, 'max': -54}","{'mean': Timestamp('2022-04-01 16:01:11'), 'median': Timestamp('2022-04-01 16:01:11'), 'std': NaT, 'min': Timestamp('2022-04-01 16:01:11'), 'max': Timestamp('2022-04-01 16:01:11')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
95539,CVE-2019-14322,"In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames.",2019-07-28 13:15:00,-,2023-01-31 20:18:00,2024-03-19 16:27:50.017905,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,16754.0,flask,1.1.1,Indirect,werkzeug,0.15.4,>=0.15,,False,0.9.1,0.15.5,"{'mean': 2224.0, 'median': 2224.0, 'std': nan, 'min': 2224, 'max': 2224}","{'mean': 2235.0, 'median': 2235.0, 'std': nan, 'min': 2235, 'max': 2235}","{'mean': -11.0, 'median': -11.0, 'std': nan, 'min': -11, 'max': -11}","{'mean': Timestamp('2019-07-17 15:31:42'), 'median': Timestamp('2019-07-17 15:31:42'), 'std': NaT, 'min': Timestamp('2019-07-17 15:31:42'), 'max': Timestamp('2019-07-17 15:31:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,1,4353.0,flask,1.1.0,Direct,flask,1.1.0,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,3999.0,flask,1.0.4,Direct,flask,1.0.4,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,3944.0,flask,1.0.3,Direct,flask,1.0.3,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,3925.0,flask,1.0.2,Direct,flask,1.0.2,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,jinja2.,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,0,8465.0,flask,1.0.2,Indirect,jinja2,2.10,>=2.10,,False,2.0,3.1.3,"{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': 5655.0, 'median': 5655.0, 'std': nan, 'min': 5655, 'max': 5655}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2024-01-10 23:12:19'), 'median': Timestamp('2024-01-10 23:12:19'), 'std': NaT, 'min': Timestamp('2024-01-10 23:12:19'), 'max': Timestamp('2024-01-10 23:12:19')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
83668,CVE-2020-28493,"This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",2021-02-01 20:15:00,,2023-11-07 03:21:00,2024-03-19 15:39:52.395808,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,1,0,8465.0,flask,1.0.2,Indirect,jinja2,2.10,>=2.10,,False,2.0,2.11.3,"{'mean': 4580.0, 'median': 4580.0, 'std': nan, 'min': 4580, 'max': 4580}","{'mean': 4581.0, 'median': 4581.0, 'std': nan, 'min': 4581, 'max': 4581}","{'mean': -2.0, 'median': -2.0, 'std': nan, 'min': -2, 'max': -2}","{'mean': Timestamp('2021-01-31 16:33:07'), 'median': Timestamp('2021-01-31 16:33:07'), 'std': NaT, 'min': Timestamp('2021-01-31 16:33:07'), 'max': Timestamp('2021-01-31 16:33:07')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
92679,CVE-2019-10906,"In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape.",2019-04-07 00:29:00,jinja2.str,2023-11-07 03:02:00,2024-03-19 16:26:18.287014,3.1,3.9,4.0,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,CHANGED,HIGH,NONE,NONE,8.6,HIGH,False,1,0,8465.0,flask,1.0.2,Indirect,jinja2,2.10,>=2.10,,False,2.0,2.10.1,"{'mean': 3914.0, 'median': 3914.0, 'std': nan, 'min': 3914, 'max': 3914}","{'mean': 3915.0, 'median': 3915.0, 'std': nan, 'min': 3915, 'max': 3915}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2019-04-06 18:59:59'), 'median': Timestamp('2019-04-06 18:59:59'), 'std': NaT, 'min': Timestamp('2019-04-06 18:59:59'), 'max': Timestamp('2019-04-06 18:59:59')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,-,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,1,0,14774.0,flask,1.0.2,Indirect,werkzeug,0.14.1,>=0.14,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,werkzeug.request,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,0,14774.0,flask,1.0.2,Indirect,werkzeug,0.14.1,>=0.14,,False,0.9.1,2.2.3,"{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': 3532.0, 'median': 3532.0, 'std': nan, 'min': 3532, 'max': 3532}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-02-14 17:18:42'), 'median': Timestamp('2023-02-14 17:18:42'), 'std': NaT, 'min': Timestamp('2023-02-14 17:18:42'), 'max': Timestamp('2023-02-14 17:18:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,werkzeug.,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,1,0,14774.0,flask,1.0.2,Indirect,werkzeug,0.14.1,>=0.14,,False,0.9.1,2.3.8,"{'mean': 3799.0, 'median': 3799.0, 'std': nan, 'min': 3799, 'max': 3799}","{'mean': 3785.0, 'median': 3785.0, 'std': nan, 'min': 3785, 'max': 3785}","{'mean': 14.0, 'median': 14.0, 'std': nan, 'min': 14, 'max': 14}","{'mean': Timestamp('2023-11-08 18:37:01'), 'median': Timestamp('2023-11-08 18:37:01'), 'std': NaT, 'min': Timestamp('2023-11-08 18:37:01'), 'max': Timestamp('2023-11-08 18:37:01')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,werkzeug.,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,1,0,14774.0,flask,1.0.2,Indirect,werkzeug,0.14.1,>=0.14,,False,0.9.1,2.1.0,"{'mean': 3213.0, 'median': 3213.0, 'std': nan, 'min': 3213, 'max': 3213}","{'mean': 3266.0, 'median': 3266.0, 'std': nan, 'min': 3266, 'max': 3266}","{'mean': -54.0, 'median': -54.0, 'std': nan, 'min': -54, 'max': -54}","{'mean': Timestamp('2022-04-01 16:01:11'), 'median': Timestamp('2022-04-01 16:01:11'), 'std': NaT, 'min': Timestamp('2022-04-01 16:01:11'), 'max': Timestamp('2022-04-01 16:01:11')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
95539,CVE-2019-14322,"In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames.",2019-07-28 13:15:00,-,2023-01-31 20:18:00,2024-03-19 16:27:50.017905,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,14774.0,flask,1.0.2,Indirect,werkzeug,0.14.1,>=0.14,,False,0.9.1,0.15.5,"{'mean': 2224.0, 'median': 2224.0, 'std': nan, 'min': 2224, 'max': 2224}","{'mean': 2235.0, 'median': 2235.0, 'std': nan, 'min': 2235, 'max': 2235}","{'mean': -11.0, 'median': -11.0, 'std': nan, 'min': -11, 'max': -11}","{'mean': Timestamp('2019-07-17 15:31:42'), 'median': Timestamp('2019-07-17 15:31:42'), 'std': NaT, 'min': Timestamp('2019-07-17 15:31:42'), 'max': Timestamp('2019-07-17 15:31:42')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
95918,CVE-2019-14806,"Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id.",2019-08-09 15:15:00,-,2023-03-03 19:34:00,2024-03-19 16:28:05.854981,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,14774.0,flask,1.0.2,Indirect,werkzeug,0.14.1,>=0.14,,False,0.9.1,0.15.3,"{'mean': 2160.0, 'median': 2160.0, 'std': nan, 'min': 2160, 'max': 2160}","{'mean': 2247.0, 'median': 2247.0, 'std': nan, 'min': 2247, 'max': 2247}","{'mean': -87.0, 'median': -87.0, 'std': nan, 'min': -87, 'max': -87}","{'mean': Timestamp('2019-05-14 21:10:46'), 'median': Timestamp('2019-05-14 21:10:46'), 'std': NaT, 'min': Timestamp('2019-05-14 21:10:46'), 'max': Timestamp('2019-05-14 21:10:46')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,3919.0,flask,1.0.1,Direct,flask,1.0.1,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,1,0,3907.0,flask,1.0,Direct,flask,1.0,,,False,0.10,2.2.5,"{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': 3610.0, 'median': 3610.0, 'std': nan, 'min': 3610, 'max': 3610}","{'mean': -1.0, 'median': -1.0, 'std': nan, 'min': -1, 'max': -1}","{'mean': Timestamp('2023-05-02 14:42:34'), 'median': Timestamp('2023-05-02 14:42:34'), 'std': NaT, 'min': Timestamp('2023-05-02 14:42:34'), 'max': Timestamp('2023-05-02 14:42:34')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,3,33444.0,tornado,6.3.1,Direct,tornado,6.3.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,3,,tornado,6.3,Direct,tornado,6.3,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,2,,tornado,6.2,Direct,tornado,6.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,1,,tornado,6.1,Direct,tornado,6.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,32369.0,tornado,6.0.4,Direct,tornado,6.0.4,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,32310.0,tornado,6.0.3,Direct,tornado,6.0.3,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,32298.0,tornado,6.0.2,Direct,tornado,6.0.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,32283.0,tornado,6.0.1,Direct,tornado,6.0.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,6,0,,tornado,6.0,Direct,tornado,6.0,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,1,29954.0,tornado,5.1.1,Direct,tornado,5.1.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,1,,tornado,5.1,Direct,tornado,5.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,0,28909.0,tornado,5.0.2,Direct,tornado,5.0.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,0,28809.0,tornado,5.0.1,Direct,tornado,5.0.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,5,0,,tornado,5.0,Direct,tornado,5.0,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,5,27479.0,tornado,4.5.3,Direct,tornado,4.5.3,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,5,27413.0,tornado,4.5.2,Direct,tornado,4.5.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,5,27406.0,tornado,4.5.1,Direct,tornado,4.5.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,5,,tornado,4.5,Direct,tornado,4.5,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,4,26136.0,tornado,4.4.3,Direct,tornado,4.4.3,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,4,26136.0,tornado,4.4.2,Direct,tornado,4.4.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,4,26067.0,tornado,4.4.1,Direct,tornado,4.4.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,4,,tornado,4.4,Direct,tornado,4.4,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,3,,tornado,4.3,Direct,tornado,4.3,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,2,24481.0,tornado,4.2.1,Direct,tornado,4.2.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,2,,tornado,4.2,Direct,tornado,4.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,1,,tornado,4.1,Direct,tornado,4.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,21362.0,tornado,4.0.2,Direct,tornado,4.0.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,21324.0,tornado,4.0.1,Direct,tornado,4.0.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,4,0,,tornado,4.0,Direct,tornado,4.0,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,18666.0,tornado,3.2.2,Direct,tornado,3.2.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,18501.0,tornado,3.2.1,Direct,tornado,3.2.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,2,18501.0,tornado,3.2.1,Direct,tornado,3.2.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,2,,tornado,3.2,Direct,tornado,3.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,2,,tornado,3.2,Direct,tornado,3.2,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,17473.0,tornado,3.1.1,Direct,tornado,3.1.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,1,17473.0,tornado,3.1.1,Direct,tornado,3.1.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,1,,tornado,3.1,Direct,tornado,3.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,1,,tornado,3.1,Direct,tornado,3.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,16131.0,tornado,3.0.2,Direct,tornado,3.0.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,0,16131.0,tornado,3.0.2,Direct,tornado,3.0.2,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,16130.0,tornado,3.0.1,Direct,tornado,3.0.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,0,16130.0,tornado,3.0.1,Direct,tornado,3.0.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,3,0,,tornado,3.0,Direct,tornado,3.0,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,3,0,,tornado,3.0,Direct,tornado,3.0,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,4,12530.0,tornado,2.4.1,Direct,tornado,2.4.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,4,12530.0,tornado,2.4.1,Direct,tornado,2.4.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,4,,tornado,2.4,Direct,tornado,2.4,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,4,,tornado,2.4,Direct,tornado,2.4,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,3,,tornado,2.3,Direct,tornado,2.3,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,3,,tornado,2.3,Direct,tornado,2.3,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,11323.0,tornado,2.2.1,Direct,tornado,2.2.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,2,11323.0,tornado,2.2.1,Direct,tornado,2.2.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,2,,tornado,2.2,Direct,tornado,2.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,2,,tornado,2.2,Direct,tornado,2.2,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,tornado.web,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,2,2,,tornado,2.2,Direct,tornado,2.2,,,False,1.0,2.2,"{'mean': 1398.0, 'median': 1398.0, 'std': nan, 'min': 1398, 'max': 1398}","{'mean': 670.0, 'median': 670.0, 'std': nan, 'min': 670, 'max': 670}","{'mean': 728.0, 'median': 728.0, 'std': nan, 'min': 728, 'max': 728}","{'mean': Timestamp('2014-05-22 01:35:53'), 'median': Timestamp('2014-05-22 01:35:53'), 'std': NaT, 'min': Timestamp('2014-05-22 01:35:53'), 'max': Timestamp('2014-05-22 01:35:53')}","{'mean': 0.0, 'median': 0.0, 'std': nan, 'min': False, 'max': False}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,10563.0,tornado,2.1.1,Direct,tornado,2.1.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,1,10563.0,tornado,2.1.1,Direct,tornado,2.1.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,tornado.web,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,2,1,10563.0,tornado,2.1.1,Direct,tornado,2.1.1,,,False,1.0,2.2,"{'mean': 1398.0, 'median': 1398.0, 'std': 0.0, 'min': 1398, 'max': 1398}","{'mean': 670.0, 'median': 670.0, 'std': 0.0, 'min': 670, 'max': 670}","{'mean': 728.0, 'median': 728.0, 'std': 0.0, 'min': 728, 'max': 728}","{'mean': Timestamp('2014-05-22 01:36:15'), 'median': Timestamp('2014-05-22 01:36:15'), 'std': Timedelta('0 days 00:00:31.112698372'), 'min': Timestamp('2014-05-22 01:35:53'), 'max': Timestamp('2014-05-22 01:36:37')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,1,,tornado,2.1,Direct,tornado,2.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,1,,tornado,2.1,Direct,tornado,2.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,tornado.web,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,2,1,,tornado,2.1,Direct,tornado,2.1,,,False,1.0,2.2,"{'mean': 1398.0, 'median': 1398.0, 'std': 0.0, 'min': 1398, 'max': 1398}","{'mean': 670.0, 'median': 670.0, 'std': 0.0, 'min': 670, 'max': 670}","{'mean': 728.0, 'median': 728.0, 'std': 0.0, 'min': 728, 'max': 728}","{'mean': Timestamp('2014-05-22 01:36:15'), 'median': Timestamp('2014-05-22 01:36:15'), 'std': Timedelta('0 days 00:00:31.112698372'), 'min': Timestamp('2014-05-22 01:35:53'), 'max': Timestamp('2014-05-22 01:36:37')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,2,0,,tornado,2.0,Direct,tornado,2.0,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,2,0,,tornado,2.0,Direct,tornado,2.0,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,tornado.web,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,2,0,,tornado,2.0,Direct,tornado,2.0,,,False,1.0,2.2,"{'mean': 1398.0, 'median': 1398.0, 'std': 0.0, 'min': 1398, 'max': 1398}","{'mean': 670.0, 'median': 670.0, 'std': 0.0, 'min': 670, 'max': 670}","{'mean': 728.0, 'median': 728.0, 'std': 0.0, 'min': 728, 'max': 728}","{'mean': Timestamp('2014-05-22 01:36:15'), 'median': Timestamp('2014-05-22 01:36:15'), 'std': Timedelta('0 days 00:00:31.112698372'), 'min': Timestamp('2014-05-22 01:35:53'), 'max': Timestamp('2014-05-22 01:36:37')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,6963.0,tornado,1.2.1,Direct,tornado,1.2.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,2,6963.0,tornado,1.2.1,Direct,tornado,1.2.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,tornado.web,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,6963.0,tornado,1.2.1,Direct,tornado,1.2.1,,,False,1.0,2.2,"{'mean': 1398.0, 'median': 1398.0, 'std': 0.0, 'min': 1398, 'max': 1398}","{'mean': 670.0, 'median': 670.0, 'std': 0.0, 'min': 670, 'max': 670}","{'mean': 728.0, 'median': 728.0, 'std': 0.0, 'min': 728, 'max': 728}","{'mean': Timestamp('2014-05-22 01:36:15'), 'median': Timestamp('2014-05-22 01:36:15'), 'std': Timedelta('0 days 00:00:31.112698372'), 'min': Timestamp('2014-05-22 01:35:53'), 'max': Timestamp('2014-05-22 01:36:37')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,2,,tornado,1.2,Direct,tornado,1.2,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,2,,tornado,1.2,Direct,tornado,1.2,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,tornado.web,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,2,,tornado,1.2,Direct,tornado,1.2,,,False,1.0,2.2,"{'mean': 1398.0, 'median': 1398.0, 'std': 0.0, 'min': 1398, 'max': 1398}","{'mean': 670.0, 'median': 670.0, 'std': 0.0, 'min': 670, 'max': 670}","{'mean': 728.0, 'median': 728.0, 'std': 0.0, 'min': 728, 'max': 728}","{'mean': Timestamp('2014-05-22 01:36:15'), 'median': Timestamp('2014-05-22 01:36:15'), 'std': Timedelta('0 days 00:00:31.112698372'), 'min': Timestamp('2014-05-22 01:35:53'), 'max': Timestamp('2014-05-22 01:36:37')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,5967.0,tornado,1.1.1,Direct,tornado,1.1.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,1,5967.0,tornado,1.1.1,Direct,tornado,1.1.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,tornado.web,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,1,5967.0,tornado,1.1.1,Direct,tornado,1.1.1,,,False,1.0,2.2,"{'mean': 1398.0, 'median': 1398.0, 'std': 0.0, 'min': 1398, 'max': 1398}","{'mean': 670.0, 'median': 670.0, 'std': 0.0, 'min': 670, 'max': 670}","{'mean': 728.0, 'median': 728.0, 'std': 0.0, 'min': 728, 'max': 728}","{'mean': Timestamp('2014-05-22 01:36:15'), 'median': Timestamp('2014-05-22 01:36:15'), 'std': Timedelta('0 days 00:00:31.112698372'), 'min': Timestamp('2014-05-22 01:35:53'), 'max': Timestamp('2014-05-22 01:36:37')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,1,,tornado,1.1,Direct,tornado,1.1,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,1,,tornado,1.1,Direct,tornado,1.1,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,tornado.web,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,1,,tornado,1.1,Direct,tornado,1.1,,,False,1.0,2.2,"{'mean': 1398.0, 'median': 1398.0, 'std': 0.0, 'min': 1398, 'max': 1398}","{'mean': 670.0, 'median': 670.0, 'std': 0.0, 'min': 670, 'max': 670}","{'mean': 728.0, 'median': 728.0, 'std': 0.0, 'min': 728, 'max': 728}","{'mean': Timestamp('2014-05-22 01:36:15'), 'median': Timestamp('2014-05-22 01:36:15'), 'std': Timedelta('0 days 00:00:31.112698372'), 'min': Timestamp('2014-05-22 01:35:53'), 'max': Timestamp('2014-05-22 01:36:37')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,tornado.,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,1,0,,tornado,1.0,Direct,tornado,1.0,,,False,1.0,6.3.2,"{'mean': 4677.0, 'median': 4677.0, 'std': nan, 'min': 4677, 'max': 4677}","{'mean': 4688.0, 'median': 4688.0, 'std': nan, 'min': 4688, 'max': 4688}","{'mean': -12.0, 'median': -12.0, 'std': nan, 'min': -12, 'max': -12}","{'mean': Timestamp('2023-05-14 03:41:12'), 'median': Timestamp('2023-05-14 03:41:12'), 'std': NaT, 'min': Timestamp('2023-05-14 03:41:12'), 'max': Timestamp('2023-05-14 03:41:12')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,tornado.,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,1,0,,tornado,1.0,Direct,tornado,1.0,,,False,1.0,3.2.2,"{'mean': 1411.0, 'median': 1411.0, 'std': nan, 'min': 1411, 'max': 1411}","{'mean': 3472.0, 'median': 3472.0, 'std': nan, 'min': 3472, 'max': 3472}","{'mean': -2061.0, 'median': -2061.0, 'std': nan, 'min': -2061, 'max': -2061}","{'mean': Timestamp('2014-06-04 03:40:48'), 'median': Timestamp('2014-06-04 03:40:48'), 'std': NaT, 'min': Timestamp('2014-06-04 03:40:48'), 'max': Timestamp('2014-06-04 03:40:48')}","{'mean': 1.0, 'median': 1.0, 'std': nan, 'min': True, 'max': True}"
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,tornado.web,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,1,0,,tornado,1.0,Direct,tornado,1.0,,,False,1.0,2.2,"{'mean': 1398.0, 'median': 1398.0, 'std': 0.0, 'min': 1398, 'max': 1398}","{'mean': 670.0, 'median': 670.0, 'std': 0.0, 'min': 670, 'max': 670}","{'mean': 728.0, 'median': 728.0, 'std': 0.0, 'min': 728, 'max': 728}","{'mean': Timestamp('2014-05-22 01:36:15'), 'median': Timestamp('2014-05-22 01:36:15'), 'std': Timedelta('0 days 00:00:31.112698372'), 'min': Timestamp('2014-05-22 01:35:53'), 'max': Timestamp('2014-05-22 01:36:37')}","{'mean': 0.5, 'median': 0.5, 'std': 0.7071067811865476, 'min': False, 'max': True}"
