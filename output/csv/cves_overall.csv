id,cve_id,description,published_at,last_modified_at,updated_at,cvss_version,cvss_exploitability_score,cvss_impact_score,cvss_vector_string,cvss_attack_vector,cvss_attack_complexity,cvss_privileges_required,cvss_user_interaction,cvss_scope,cvss_confidentiality_impact,cvss_integrity_impact,cvss_availability_impact,cvss_base_score,cvss_base_severity,has_cwe,project,source,release,release_requirements,inherited_from,technical_lag,applicability,start_to_patched,start_to_patched_std,start_to_published,start_to_published_std,published_to_patched,published_to_patched_std
1711,CVE-2024-24680,"An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.",2024-02-06 22:16:00,2024-02-15 18:46:00,2024-03-19 14:51:31.691131,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,django,Direct,django,,,False,"[5.0,5.0.2),[3.2,3.2.24),[4.2,4.2.10)",469.6666666666667,412.76008635633474,469.6666666666667,412.76008635633474,-1.0,0.0
7014,CVE-2023-23969,"In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.",2023-02-01 19:15:00,2023-11-07 04:08:00,2024-03-19 14:55:02.186442,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[4.1,4.1.6),[4.0,4.0.9),[3.2,3.2.17)",423.0,197.59723344891918,423.0,197.59723344891918,-1.0,0.0
7471,CVE-2023-24580,"An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.",2023-02-15 01:15:00,2023-11-07 04:08:00,2024-03-19 14:55:11.256112,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[3.2,3.2.18),[4.0,4.0.10),[4.1,4.1.7)",435.0,197.59723344891918,436.0,197.59723344891918,-1.0,0.0
12317,CVE-2023-31047,"In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's ""Uploading multiple files"" documentation suggested otherwise.",2023-05-07 02:15:00,2023-11-07 04:14:00,2024-03-19 14:58:31.876818,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,django,Direct,django,,,False,"[4.0,4.1.9),[3.2,3.2.19),[4.2,4.2.1)",433.0,302.00772617048506,436.0,302.00772617048506,-4.0,0.0
15663,CVE-2023-36053,"In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, EmailValidator and URLValidator are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.",2023-07-03 13:15:00,2023-11-15 03:18:00,2024-03-19 15:00:47.609699,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[4.2,4.2.3),[4.0,4.1.10),[3.2,3.2.20)",493.0,302.00772617048506,494.0,302.00772617048506,-1.0,0.0
19161,CVE-2023-41164,"In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-03 05:15:00,2023-12-14 10:15:00,2024-03-19 15:02:08.523751,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[4.2,4.2.5),[4.1,4.1.11),[3.2,3.2.21)",477.3333333333333,302.18353510555283,536.3333333333334,302.18353510555283,-60.0,0.0
20561,CVE-2023-43665,"In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",2023-11-03 05:15:00,2023-12-21 22:15:00,2024-03-19 15:02:56.392980,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[4.2,4.2.6),[4.1,4.1.12),[3.2,3.2.22)",507.3333333333333,302.18353510555283,536.3333333333334,302.18353510555283,-30.0,0.0
22296,CVE-2023-46695,"An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.",2023-11-02 06:15:00,2023-12-14 10:15:00,2024-03-19 15:03:40.390738,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[4.2.,4.2.7),[4.1,4.1.13),[3.2,3.2.23)",2102.3333333333335,1998.6469311900878,2103.3333333333335,1998.6469311900878,-1.0,0.0
31455,CVE-2022-22818,"The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",2022-02-03 02:15:00,2023-11-07 03:43:00,2024-03-19 15:07:50.786386,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,django,Direct,django,,,False,"[3.2,3.2.12),[4.0,4.0.2),[2.2,2.2.27)",463.6666666666667,416.87754663556643,465.6666666666667,416.87754663556643,-2.0,0.0
32319,CVE-2022-23833,"An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",2022-02-03 02:15:00,2023-11-22 23:15:00,2024-03-19 15:08:12.436531,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[3.2,3.2.12),[4.0,4.0.2),[2.2,2.2.27)",463.6666666666667,416.87754663556643,465.6666666666667,416.87754663556643,-2.0,0.0
35957,CVE-2022-28346,"An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.381357,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,django,Direct,django,,,False,"[4.0,4.0.4),[3.2,3.2.13),[2.2,2.2.28)",532.6666666666666,416.8775466355665,533.6666666666666,416.8775466355665,-1.0,0.0
35958,CVE-2022-28347,"A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.",2022-04-12 05:15:00,2023-11-07 03:45:00,2024-03-19 15:10:25.401846,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,django,Direct,django,,,False,"[4.0,4.0.4),[3.2,3.2.13),[2.2,2.2.28)",532.6666666666666,416.8775466355665,533.6666666666666,416.8775466355665,-1.0,0.0
40495,CVE-2022-34265,An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.,2022-07-04 16:15:00,2023-11-07 03:48:00,2024-03-19 15:13:24.281576,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,django,Direct,django,,,False,"[4.0,4.0.6),[3.2,3.2.14)",330.5,122.5,331.5,122.5,-1.0,0.0
42181,CVE-2022-36359,An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.,2022-08-03 14:15:00,2023-11-07 03:49:00,2024-03-19 15:14:09.512750,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,django,Direct,django,,,False,"[4.0,4.0.7),[3.2,3.2.15)",360.5,122.5,361.5,122.5,-1.0,0.0
45693,CVE-2022-41323,"In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",2022-10-16 06:15:00,2023-11-07 03:52:00,2024-03-19 15:15:57.456696,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,django,Direct,django,,,False,"[3.2,3.2.16),[4.1,4.1.2),[4.0,4.0.8)",302.0,197.59723344891918,314.0,197.59723344891918,-12.0,0.0
55304,CVE-2021-23336,"The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",2021-02-15 13:15:00,2023-11-07 03:30:00,2024-03-19 15:22:10.161847,3.1,1.6,4.2,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:H,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,NONE,LOW,HIGH,5.9,MEDIUM,True,django,Direct,django,,,False,"[3.1,3.1.7),[3.0,3.0.13),[2.2,2.2.19)",444.0,200.04166232729287,440.6666666666667,200.45004919486107,3.0,0.0
59100,CVE-2021-28658,"In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",2021-04-06 15:15:00,2023-11-07 03:32:00,2024-03-19 15:23:53.516946,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,django,Direct,django,,,False,"[3.1,3.1.8),[3.0,3.0.14),[2.2,2.2.20)",489.6666666666667,200.45004919486107,490.6666666666667,200.45004919486107,-1.0,0.0
61123,CVE-2021-31542,"In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.",2021-05-05 15:15:00,2023-12-07 22:15:00,2024-03-19 15:25:35.377520,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,django,Direct,django,,,False,"[3.2,3.2.1),[3.1,3.1.9),[2.2,2.2.21)",354.3333333333333,305.92519056498475,356.0,306.01416089237875,-2.0,0.0
61512,CVE-2021-32052,"In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.",2021-05-06 16:15:00,2023-11-07 03:35:00,2024-03-19 15:25:43.885065,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,django,Direct,django,,,False,"[2.2,2.2.22),[3.1,3.1.10),[3.2,3.2.2)",356.0,306.01416089237875,357.0,306.01416089237875,-1.0,0.0
61986,CVE-2021-3281,"In Django 2.2 before 2.2.18, 3.0 before 3.0.12, and 3.1 before 3.1.6, the django.utils.archive.extract method (used by ""startapp --template"" and ""startproject --template"") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",2021-02-02 07:15:00,2023-11-07 03:37:00,2024-03-19 15:25:53.231017,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,NONE,5.3,MEDIUM,True,django,Direct,django,,,False,"[3.1,3.1.6),[3.0,3.0.12),[2.2,2.2.18)",426.0,200.04166232729287,426.6666666666667,200.45004919486107,-1.0,0.0
62277,CVE-2021-33203,"Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",2021-06-08 18:15:00,2023-11-07 03:35:00,2024-03-19 15:26:10.616385,3.1,1.2,3.6,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,django,Direct,django,,,False,"[3.2.0,3.2.4),[3.0.0,3.1.12),[1.2,2.2.24)",4033.0,0.0,4039.0,0.0,-7.0,0.0
62517,CVE-2021-33571,"In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",2021-06-08 18:15:00,2023-12-07 22:15:00,2024-03-19 15:26:17.723987,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,django,Direct,django,,,False,"[3.2,3.2.4),[3.0,3.1.12),[2.2,2.2.24)",465.0,306.01416089237875,472.0,306.01416089237875,-7.0,0.0
63633,CVE-2021-35042,Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.,2021-07-02 10:15:00,2023-11-07 03:36:00,2024-03-19 15:26:49.316323,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,django,Direct,django,,,False,"[3.2,3.2.5),[3.1,3.1.13)",207.5,122.5,209.5,122.5,-2.0,0.0
70436,CVE-2021-44420,"In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",2021-12-08 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:04.239098,3.1,3.9,3.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,LOW,7.3,HIGH,False,django,Direct,django,,,False,"[2.2,2.2.25),[3.1,3.1.14),[3.2,3.2.10)",571.0,306.01416089237875,572.0,306.01416089237875,-1.0,0.0
70840,CVE-2021-45115,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.708582,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,django,Direct,django,,,False,"[2.2,2.2.26),[3.2,3.2.11),[4.0,4.0.1)",436.3333333333333,416.4199269434108,436.6666666666667,416.87754663556643,-1.0,0.0
70841,CVE-2021-45116,"An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:16.726108,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,django,Direct,django,,,False,"[2.2,2.2.26),[3.2,3.2.11),[4.0,4.0.1)",436.3333333333333,416.4199269434108,436.6666666666667,416.87754663556643,-1.0,0.0
70941,CVE-2021-45452,"Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.",2022-01-05 00:15:00,2023-11-07 03:39:00,2024-03-19 15:30:18.634276,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,django,Direct,django,,,False,"[2.2,2.2.26),[3.2,3.2.11),[4.0,4.0.1)",436.3333333333333,416.4199269434108,436.6666666666667,416.87754663556643,-1.0,0.0
75539,CVE-2020-13254,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:44.794497,3.1,2.2,3.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,5.9,MEDIUM,True,django,Direct,django,,,False,"[3.0,3.0.7),[2.2,2.2.13)",305.5,122.5,306.5,122.5,-1.0,0.0
75862,CVE-2020-13596,"An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",2020-06-03 14:15:00,2023-11-07 03:16:00,2024-03-19 15:36:51.153608,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,django,Direct,django,,,False,"[3.0,3.0.7),[2.2,2.2.13)",305.5,122.5,306.5,122.5,-1.0,0.0
81114,CVE-2020-24583,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.271683,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,django,Direct,django,,,False,"[3.1,3.1.1),[3.0,3.0.10),[2.2,2.2.16)",273.0,200.04166232729287,273.6666666666667,200.45004919486107,-1.0,0.0
81115,CVE-2020-24584,"An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",2020-09-01 13:15:00,2023-11-07 03:20:00,2024-03-19 15:38:51.296022,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,django,Direct,django,,,False,"[3.1,3.1.1),[3.0,3.0.10),[2.2,2.2.16)",273.0,200.04166232729287,273.6666666666667,200.45004919486107,-1.0,0.0
88741,CVE-2020-7471,"Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",2020-02-03 12:15:00,2023-11-07 03:26:00,2024-03-19 15:42:17.200540,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,django,Direct,django,,,False,"[3.0,3.0.3),[2.2,2.2.10),[1.11,1.11.28)",467.6666666666667,412.7600863563347,468.0,412.43262075964196,-1.0,0.0
90248,CVE-2020-9402,"Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",2020-03-05 15:15:00,2023-11-07 03:26:00,2024-03-19 15:42:58.486579,3.1,2.8,5.9,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,LOW,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.8,HIGH,True,django,Direct,django,,,False,"[3.0,3.0.4),[2.2,2.2.11),[1.11,1.11.29)",497.6666666666667,412.7600863563347,499.3333333333333,412.3027474508939,-2.0,0.0
93863,CVE-2019-12308,"An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",2019-06-03 17:29:00,2023-11-07 03:03:00,2024-03-19 16:26:50.785850,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,django,Direct,django,,,False,"[2.2,2.2.2),[2.1,2.1.9),[1.11,1.11.21)",385.3333333333333,302.18353510555283,386.3333333333333,302.18353510555283,-1.0,0.0
94296,CVE-2019-12781,"An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",2019-07-01 14:15:00,2023-11-07 03:03:00,2024-03-19 16:27:00.989295,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,NONE,5.3,MEDIUM,True,django,Direct,django,,,False,"[1.11,1.11.22),[2.1,2.1.10),[2.2,2.2.3)",413.3333333333333,302.18353510555283,414.0,301.7382972047135,-1.0,0.0
95453,CVE-2019-14232,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.575288,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[2.2,2.2.4),[2.1,2.1.11),[1.11,1.11.23)",444.3333333333333,302.18353510555283,446.0,301.7382972047135,-2.0,0.0
95454,CVE-2019-14233,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.596471,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[2.2,2.2.4),[2.1,2.1.11),[1.11,1.11.23)",444.3333333333333,302.18353510555283,446.0,301.7382972047135,-2.0,0.0
95455,CVE-2019-14234,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of ""OR 1=1"" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",2019-08-09 13:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.617661,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,django,Direct,django,,,False,"[2.2,2.2.4),[2.1,2.1.11),[1.11,1.11.23)",444.3333333333333,302.18353510555283,452.6666666666667,301.8270291997646,-9.0,0.0
95456,CVE-2019-14235,"An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",2019-08-02 15:15:00,2023-11-07 03:04:00,2024-03-19 16:27:47.642582,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[2.2,2.2.4),[2.1,2.1.11),[1.11,1.11.23)",444.3333333333333,302.18353510555283,446.0,301.7382972047135,-2.0,0.0
99049,CVE-2019-19118,"Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",2019-12-02 14:15:00,2023-11-07 03:07:00,2024-03-19 16:29:29.849423,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,LOW,NONE,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,django,Direct,django,,,False,"[2.1,2.1.15),[2.2,2.2.8)",365.5,121.5,366.5,121.5,-1.0,0.0
99621,CVE-2019-19844,"Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",2019-12-18 19:15:00,2023-11-07 03:07:00,2024-03-19 16:29:45.651866,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,django,Direct,django,,,False,"[2.2,2.2.9),[1.2,1.11.27),[3.0,3.0.1)",1258.6666666666667,1588.7207292521725,1259.3333333333333,1588.250260157035,-1.0,0.0
101578,CVE-2019-3498,"In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",2019-01-09 23:29:00,2023-11-07 03:09:00,2024-03-19 16:30:43.988698,3.0,2.8,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,HIGH,NONE,6.5,MEDIUM,True,django,Direct,django,,,False,"[1.11,1.11.18),[2.0,2.0.10),[2.1,2.1.5)",397.0,197.59217258450968,403.0,197.59217258450968,-6.0,0.0
103870,CVE-2019-6975,"Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",2019-02-11 13:29:00,2023-11-07 03:13:00,2024-03-19 16:31:57.678785,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Direct,django,,,False,"[1.11.0,1.11.19),[2.0.0,2.0.11),[2.1.0,2.1.6)",,,3191.0,0.0,,
111460,CVE-2018-14574,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.,2018-08-03 17:29:00,2019-03-01 19:32:00,2024-03-19 16:35:11.255143,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,django,Direct,django,,,False,"[2.0,2.0.8),[1.11,1.11.15)",362.0,121.0,365.0,121.0,-3.0,0.0
113314,CVE-2018-16984,"An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the ""view"" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",2018-10-02 18:29:00,2019-10-03 00:03:00,2024-03-19 16:35:54.588561,3.0,1.2,3.6,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,HIGH,NONE,NONE,4.9,MEDIUM,True,django,Direct,django,,,False,"[2.1,2.1.2)",60.0,0.0,62.0,0.0,-2.0,0.0
119588,CVE-2018-6188,"django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",2018-02-05 03:29:00,2019-03-12 17:54:00,2024-03-19 16:38:30.653600,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,django,Direct,django,,,False,"[1.11.8,1.11.10),[2.0,2.0.2)",60.5,0.5,64.0,0.0,-4.0,0.0
120487,CVE-2018-7536,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",2018-03-09 20:29:00,2023-12-07 22:15:00,2024-03-19 16:38:51.584540,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,django,Direct,django,,,False,"[1.8,1.8.19),[1.11,1.11.11),[2.0,2.0.3)",499.0,414.9827305643774,503.0,414.9827305643774,-4.0,0.0
120488,CVE-2018-7537,"An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",2018-03-09 20:29:00,2019-02-28 22:37:00,2024-03-19 16:38:51.608965,3.0,3.9,1.4,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,django,Direct,django,,,False,"[1.8,1.8.19),[1.11,1.11.11),[2.0,2.0.3)",499.0,414.9827305643774,503.0,414.9827305643774,-4.0,0.0
125614,CVE-2017-12794,"In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with ""DEBUG = True"" (which makes this page accessible) in your production settings.",2017-09-07 13:29:00,2018-03-16 01:29:00,2024-03-19 16:40:55.283196,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,django,Direct,django,,,False,"[1.10.0,1.10),[1.10.1,1.10.8),[1.11.1,1.11.5)",919.0,958.456050113932,1054.3333333333333,1146.150174376038,-135.33333333333334,188.56180831641268
134245,CVE-2017-7233,"Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an ""on success"" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs ""safe"" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",2017-04-04 17:59:00,2018-10-17 10:29:00,2024-03-19 16:45:13.555208,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,django,Direct,django,,,False,"[1.8.0,1.8),[1.8.1,1.8.18),[1.9,1.9.13),[1.10.1,1.10.7)",796.5,593.6912076155415,979.75,902.0330855905453,-184.25,317.39831048699676
134246,CVE-2017-7234,"A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",2017-04-04 17:59:00,2017-11-04 01:29:00,2024-03-19 16:45:13.612297,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,django,Direct,django,,,False,"[1.8.0,1.8),[1.8.1,1.8.18),[1.9,1.9.13),[1.10.1,1.10.7)",796.5,593.6912076155415,979.75,902.0330855905453,-184.25,317.39831048699676
139730,CVE-2016-2048,"Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the ""Save as New"" option when editing objects and leveraging the ""change"" permission.",2016-02-08 19:59:00,2016-11-28 20:02:00,2024-03-19 16:47:34.817796,3.0,1.2,4.2,CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:N,NETWORK,LOW,HIGH,NONE,UNCHANGED,LOW,HIGH,NONE,5.5,MEDIUM,True,django,Direct,django,,,False,"[1.9,1.9.2)",61.0,0.0,68.0,0.0,-8.0,0.0
140115,CVE-2016-2512,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.420635,3.0,2.8,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,NONE,HIGH,NONE,7.4,HIGH,True,django,Direct,django,,,False,"[1.8.9,1.8.10),[1.9,1.9.3)",59.0,31.0,97.0,31.0,-38.0,0.0
140116,CVE-2016-2513,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,2016-04-08 15:59:00,2017-09-08 01:29:00,2024-03-19 16:47:46.439159,3.0,1.6,1.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N,NETWORK,HIGH,NONE,REQUIRED,UNCHANGED,LOW,NONE,NONE,3.1,LOW,True,django,Direct,django,,,False,"[1.8.9,1.8.10),[1.9,1.9.3)",59.0,31.0,97.0,31.0,-38.0,0.0
143160,CVE-2016-6186,"Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",2016-08-05 15:59:00,2023-11-07 02:33:00,2024-03-19 16:49:04.802984,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,django,Direct,django,,,False,"[1.2,1.8.13],[1.9.0,1.9.8),[1.10,1.10.1)",1512.3333333333333,1047.4608451976724,1515.0,1069.1454531540599,-3.0,21.213203435596427
144154,CVE-2016-7401,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",2016-10-03 18:59:00,2018-01-05 02:31:00,2024-03-19 16:49:35.492183,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,HIGH,NONE,7.5,HIGH,True,django,Direct,django,,,False,"[1.2,1.8.14],[1.9.0,1.9),[1.9.1,1.9.10)",1538.3333333333333,906.5172671028145,1645.0,968.7362902255701,-107.66666666666667,140.94995171651846
145231,CVE-2016-9013,"Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.592469,3.0,3.9,5.9,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,django,Direct,django,,,False,"[1.8,1.8.16),[1.9,1.9.11),[1.10,1.10.3)",335.0,199.22516574636515,373.6666666666667,199.2257234618283,-39.0,0.0
145232,CVE-2016-9014,"Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",2016-12-09 20:59:00,2023-11-07 02:36:00,2024-03-19 16:50:05.636314,3.0,2.2,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,8.1,HIGH,True,django,Direct,django,,,False,"[1.8,1.8.16),[1.9,1.9.11),[1.10,1.10.3)",335.0,199.22516574636515,373.6666666666667,199.2257234618283,-39.0,0.0
146140,CVE-2015-0219,"Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.063308,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,django,Direct,django,,,False,"[1.2,1.4.17],[1.6,1.6.10),[1.7,1.7.3)",755.3333333333334,679.8844673096222,758.3333333333334,679.8844673096222,-3.0,0.0
146141,CVE-2015-0220,"The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.089111,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,django,Direct,django,,,False,"[1.2,1.4.17],[1.6,1.6.10),[1.7,1.7.3)",755.3333333333334,679.8844673096222,758.3333333333334,679.8844673096222,-3.0,0.0
146142,CVE-2015-0221,"The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.118295,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.2,1.4.17],[1.6,1.6.10),[1.7,1.7.3)",755.3333333333334,679.8844673096222,758.3333333333334,679.8844673096222,-3.0,0.0
146143,CVE-2015-0222,"ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",2015-01-16 16:59:00,2016-12-22 02:59:00,2024-03-19 16:50:32.147949,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.2,1.4.17],[1.6,1.6.10),[1.7,1.7.3)",755.3333333333334,679.8844673096222,758.3333333333334,679.8844673096222,-3.0,0.0
148085,CVE-2015-2241,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",2015-03-12 14:59:00,2016-12-03 03:04:00,2024-03-19 16:51:22.186639,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,django,Direct,django,,,False,"[1.2,1.7.5],[1.8,1.8.1)",893.0,863.0,869.0,890.0,23.5,26.5
148139,CVE-2015-2316,"The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.555781,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.6,1.6.11),[1.7,1.7.7)",347.0,150.0,353.0,150.0,-7.0,0.0
148140,CVE-2015-2317,"The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",2015-03-25 14:59:00,2018-10-30 16:27:00,2024-03-19 16:51:23.603110,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,django,Direct,django,,,False,"[1.2,1.4.19],[1.5,1.6.11),[1.7,1.7.7)",904.3333333333334,649.7714127975229,910.3333333333334,649.7714127975229,-7.0,0.0
149464,CVE-2015-3982,"The session.flush function in the cached_db backend in Django 1.8.x before 1.8.2 does not properly flush the session, which allows remote attackers to hijack user sessions via an empty string in the session key.",2015-06-02 14:59:00,2016-12-06 03:01:00,2024-03-19 16:51:57.176319,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,False,django,Direct,django,,,False,"[1.8.0,1.8),[1.8.1,1.8.2)",899.0,881.0,936.0,905.0,-37.5,24.5
150408,CVE-2015-5143,"The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.586527,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,django,Direct,django,,,False,"[1.4.20,1.4.21),[1.5,1.6.11),[1.7,1.7.10),[1.8.1,1.8.3)",319.25,270.84532024755384,342.75,315.9876382075729,-24.0,56.674509261219015
150409,CVE-2015-5144,"Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.645855,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,django,Direct,django,,,False,"[1.2,1.4.20],[1.5,1.6.11),[1.7,1.7.10),[1.8,1.8.3)",768.25,681.1766933035804,791.75,689.0411362901347,-24.0,56.674509261219015
150410,CVE-2015-5145,validators.URLValidator in Django 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (CPU consumption) via unspecified vectors.,2015-07-14 17:59:00,2017-09-22 01:29:00,2024-03-19 16:52:18.704988,2.0,10.0,6.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,COMPLETE,7.8,,True,django,Direct,django,,,False,"[1.8.0,1.8),[1.8.1,1.8.3)",923.5,856.5,978.0,905.0,-55.0,49.0
151149,CVE-2015-5963,"contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",2015-08-24 14:59:00,2017-10-03 01:29:00,2024-03-19 16:52:36.267114,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.4,1.4.3),[1.4.4,1.4.15),[1.4.17,1.4.18),[1.4.19,1.4.22),[1.7,1.7.10),[1.8,1.8.4)",253.66666666666666,172.39360648108607,517.1666666666666,415.1856679714377,-264.0,349.4199956117757
151150,CVE-2015-5964,"The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",2015-08-24 14:59:00,2016-12-24 02:59:00,2024-03-19 16:52:36.342965,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.4,1.4.3),[1.4.4,1.4.15),[1.4.17,1.4.18),[1.4.19,1.4.22),[1.7,1.7.10),[1.8,1.8.4)",253.66666666666666,172.39360648108607,517.1666666666666,415.1856679714377,-264.0,349.4199956117757
152863,CVE-2015-8213,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",2015-12-07 20:59:00,2016-12-07 18:26:00,2024-03-19 16:53:22.011116,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,django,Direct,django,,,False,"[1.2,1.7.10],[1.8.0,1.8),[1.8.1,1.8.7)",1334.0,803.4143804206311,1426.6666666666667,853.2421826317674,-93.0,111.72287142747452
154474,CVE-2014-0472,"The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a ""dotted Python path.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.561382,2.0,4.9,6.4,,NETWORK,HIGH,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,5.1,,True,django,Direct,django,,,False,"[1.2,1.4.10],[1.4,1.4.10),[1.5,1.5.6),[1.6,1.6.3),[1.7,1.7.1)",532.2,489.69843781658113,530.2,539.7126642946226,1.4,111.07402936780497
154475,CVE-2014-0473,"The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.598132,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,django,Direct,django,,,False,"[1.2,1.4.10],[1.4,1.4.10),[1.5,1.5.6),[1.6,1.6.3),[1.7,1.7.1)",532.2,489.69843781658113,530.2,539.7126642946226,1.4,111.07402936780497
154476,CVE-2014-0474,"The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to ""MySQL typecasting.""",2014-04-23 15:55:00,2017-01-07 02:59:00,2024-03-19 17:51:54.634593,2.0,10.0,10.0,,NETWORK,LOW,NONE,False,UNCHANGED,COMPLETE,COMPLETE,COMPLETE,10.0,,True,django,Direct,django,,,False,"[1.2,1.4.10],[1.4,1.4.10),[1.5,1.5.6),[1.6,1.6.3),[1.7,1.7.1)",532.2,489.69843781658113,530.2,539.7126642946226,1.4,111.07402936780497
154482,CVE-2014-0480,"The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.806967,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,NONE,5.8,,True,django,Direct,django,,,False,"[1.2,1.4.13],[1.4,1.4.3),[1.4.4,1.4.13),[1.5,1.5.9),[1.6,1.6.6),[1.7,1.7.1)",523.5,486.38624912031935,637.8333333333334,494.30335377736975,-114.83333333333333,232.53273365748365
154483,CVE-2014-0481,"The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.856544,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,4.3,,True,django,Direct,django,,,False,"[1.2,1.4.13],[1.4,1.4.3),[1.4.4,1.4.13),[1.5,1.5.9),[1.6,1.6.6),[1.7,1.7.1)",523.5,486.38624912031935,637.8333333333334,494.30335377736975,-114.83333333333333,232.53273365748365
154484,CVE-2014-0482,"The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.905128,2.0,6.8,6.4,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.0,,True,django,Direct,django,,,False,"[1.2,1.4.13],[1.4,1.4.3),[1.4.4,1.4.13),[1.5,1.5.9),[1.6,1.6.6),[1.7,1.7.1)",523.5,486.38624912031935,637.8333333333334,494.30335377736975,-114.83333333333333,232.53273365748365
154485,CVE-2014-0483,"The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.",2014-08-26 14:55:00,2018-10-30 16:27:00,2024-03-19 17:51:54.953436,2.0,6.8,2.9,,NETWORK,MEDIUM,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,3.5,,True,django,Direct,django,,,False,"[1.2,1.4.13],[1.4,1.4.3),[1.4.4,1.4.13),[1.5,1.5.9),[1.6,1.6.6),[1.7,1.7.1)",523.5,486.38624912031935,637.8333333333334,494.30335377736975,-114.83333333333333,232.53273365748365
155366,CVE-2014-1418,"Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.",2014-05-16 15:55:00,2017-01-07 02:59:00,2024-03-19 17:52:21.573110,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,False,django,Direct,django,,,False,"[1.4,1.4.3),[1.4.4,1.4.13),[1.5,1.5.8),[1.6,1.6.5),[1.7,1.7.1)",277.8,152.3724384526283,351.4,297.6606121071446,-73.8,232.61332721922878
157304,CVE-2014-3730,"The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by ""http:\\\djangoproject.com.""",2014-05-16 15:55:00,2018-10-30 16:27:00,2024-03-19 17:53:20.436466,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,django,Direct,django,,,False,"[1.4,1.4.3),[1.4.4,1.4.13),[1.5,1.5.8),[1.6,1.6.5),[1.7,1.7.1)",277.8,152.3724384526283,351.4,297.6606121071446,-73.8,232.61332721922878
162664,CVE-2013-0305,"The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.954508,2.0,8.0,2.9,,NETWORK,LOW,SINGLE,False,UNCHANGED,PARTIAL,NONE,NONE,4.0,,True,django,Direct,django,,,False,"[1.3,1.3.4),[1.4,1.4.3),[1.5,1.5.1)",335.0,283.5712726399955,413.0,288.7016914856348,-78.66666666666667,46.449494674921446
162665,CVE-2013-0306,"The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",2013-05-02 14:55:00,2013-05-15 03:34:00,2024-03-19 17:55:40.989661,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.3,1.3.4),[1.4,1.4.3),[1.5,1.5.1)",335.0,283.5712726399955,413.0,288.7016914856348,-78.66666666666667,46.449494674921446
163718,CVE-2013-1443,"The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",2013-09-23 20:55:00,2014-01-28 04:51:00,2024-03-19 17:56:25.086460,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.4,1.4.3),[1.4.4,1.4.8),[1.5,1.5.4),[1.6,1.6.1)",176.25,84.45819972033503,232.5,210.62347922299642,-56.5,137.84320802999326
166181,CVE-2013-4249,Cross-site scripting (XSS) vulnerability in the AdminURLFieldWidget widget in contrib/admin/widgets.py in Django 1.5.x before 1.5.2 and 1.6.x before 1.6 beta 2 allows remote attackers to inject arbitrary web script or HTML via a URLField.,2013-10-04 17:55:00,2017-08-29 01:33:00,2024-03-19 17:58:01.742120,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,django,Direct,django,,,False,"[1.5,1.5.2),[1.6,1.6.1)",101.5,65.5,93.0,126.0,8.0,61.0
166241,CVE-2013-4315,"Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.",2013-09-16 19:14:00,2013-12-10 06:05:00,2024-03-19 17:58:04.075259,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,django,Direct,django,,,False,"[1.4,1.4.3),[1.4.4,1.4.7),[1.5,1.5.2),[1.6,1.6.1)",167.0,82.88847929597937,225.0,210.67154530215987,-58.5,135.59221954079814
167615,CVE-2013-6044,"The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by ""the login view in django.contrib.auth.views"" and the javascript: scheme.",2013-10-04 17:55:00,2017-11-17 02:29:00,2024-03-19 17:58:53.369423,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,django,Direct,django,,,False,"[1.4,1.4.3),[1.4.4,1.4.6),[1.5,1.5.2),[1.6,1.6.1)",159.75,80.66094160124837,242.75,210.29547665130602,-83.75,133.34799398566145
171592,CVE-2012-3442,"The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.445628,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,django,Direct,django,,,False,"[1.2,1.3],[0.95,1.0.3),[1.1,1.1.1),[1.1.2,1.2.1),[1.2.2,1.2.3),[1.2.4,1.3.1),[1.4,1.4.1)",94.28571428571429,221.53665564849163,703.2857142857143,275.5196203984206,-609.5714285714286,375.4025866197732
171593,CVE-2012-3443,"The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.487854,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.2,1.3],[0.95,1.0.3),[1.1,1.1.1),[1.1.2,1.2.1),[1.2.2,1.2.3),[1.2.4,1.3.1),[1.4,1.4.1)",94.28571428571429,221.53665564849163,703.2857142857143,275.5196203984206,-609.5714285714286,375.4025866197732
171594,CVE-2012-3444,"The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",2012-07-31 17:55:00,2013-04-11 03:29:00,2024-03-19 18:01:16.524752,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.2,1.3],[0.95,1.0.3),[1.1,1.1.1),[1.1.2,1.2.1),[1.2.2,1.2.3),[1.2.4,1.3.1),[1.4,1.4.1)",94.28571428571429,221.53665564849163,703.2857142857143,275.5196203984206,-609.5714285714286,375.4025866197732
172483,CVE-2012-4520,The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.,2012-11-18 23:55:00,2013-05-04 03:20:00,2024-03-19 18:02:03.606795,2.0,10.0,4.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,NONE,6.4,,True,django,Direct,django,,,False,"[1.3,1.3.4),[1.4,1.4.2)",460.5,252.5,423.0,183.0,36.5,69.5
174649,CVE-2011-0696,"Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a ""combination of browser plugins and redirects,"" a related issue to CVE-2011-0447.",2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.839069,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,django,Direct,django,,,False,"[1.1.0,1.1.1),[1.1.2,1.1.4),[1.2,1.2.5)",105.66666666666667,230.28436527234953,274.0,1.4142135623730951,-168.33333333333334,229.57400162523243
174650,CVE-2011-0697,Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.,2011-02-14 21:00:00,2011-03-11 03:51:00,2024-03-19 18:03:28.861253,2.0,8.6,2.9,,NETWORK,MEDIUM,NONE,True,UNCHANGED,NONE,PARTIAL,NONE,4.3,,True,django,Direct,django,,,False,"[1.1.0,1.1.1),[1.1.2,1.1.4),[1.2,1.2.5)",105.66666666666667,230.28436527234953,274.0,1.4142135623730951,-168.33333333333334,229.57400162523243
174651,CVE-2011-0698,"Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",2011-02-14 21:00:00,2011-02-23 06:48:00,2024-03-19 18:03:28.883625,2.0,10.0,6.4,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,7.5,,True,django,Direct,django,,,False,"[1.1.0,1.1.1),[1.1.2,1.1.4),[1.2,1.2.5)",105.66666666666667,230.28436527234953,274.0,1.4142135623730951,-168.33333333333334,229.57400162523243
177702,CVE-2011-4136,"django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.324579,2.0,8.6,4.9,,NETWORK,MEDIUM,NONE,False,UNCHANGED,NONE,PARTIAL,PARTIAL,5.8,,True,django,Direct,django,,,False,"[1.2,1.2.6],[0.91,1.0.3),[1.1,1.1.1),[1.1.2,1.1.4),[1.2,1.2.6),[1.3,1.3.1)",196.66666666666666,265.3699723446913,517.0,173.83996471851154,-320.8333333333333,331.5857941602579
177703,CVE-2011-4137,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.355714,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,NONE,PARTIAL,5.0,,True,django,Direct,django,,,False,"[1.2,1.2.6],[0.91,1.0.3),[1.1,1.1.1),[1.1.2,1.1.4),[1.2,1.2.6),[1.3,1.3.1)",196.66666666666666,265.3699723446913,517.0,173.83996471851154,-320.8333333333333,331.5857941602579
177704,CVE-2011-4138,"The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.387598,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,PARTIAL,NONE,NONE,5.0,,True,django,Direct,django,,,False,"[1.2,1.2.6],[0.91,1.0.3),[1.1,1.1.1),[1.1.2,1.1.4),[1.2,1.2.6),[1.3,1.3.1)",196.66666666666666,265.3699723446913,517.0,173.83996471851154,-320.8333333333333,331.5857941602579
177705,CVE-2011-4139,"Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.419086,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,django,Direct,django,,,False,"[1.2,1.2.6],[0.91,1.0.3),[1.1,1.1.1),[1.1.2,1.1.4),[1.2,1.2.6),[1.3,1.3.1)",196.66666666666666,265.3699723446913,517.0,173.83996471851154,-320.8333333333333,331.5857941602579
177706,CVE-2011-4140,"The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",2011-10-19 10:55:00,2018-01-18 02:29:00,2024-03-19 18:05:26.449896,2.0,8.6,6.4,,NETWORK,MEDIUM,NONE,True,UNCHANGED,PARTIAL,PARTIAL,PARTIAL,6.8,,True,django,Direct,django,,,False,"[1.2,1.2.6],[0.91,1.0.3),[1.1,1.1.1),[1.1.2,1.1.4),[1.2,1.2.6),[1.3,1.3.1)",196.66666666666666,265.3699723446913,517.0,173.83996471851154,-320.8333333333333,331.5857941602579
11929,CVE-2023-30608,"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.
",2023-04-18 22:15:00,2023-06-14 18:14:00,2024-03-19 14:58:21.262833,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Indirect,sqlparse,>=0.3.1,,False,"[0.1.15,0.4.4)",2924.0,0.0,2925.0,0.0,-1.0,0.0
62018,CVE-2021-32839,sqlparse is a non-validating SQL parser module for Python. In sqlparse versions 0.4.0 and 0.4.1 there is a regular Expression Denial of Service in sqlparse vulnerability. The regular expression may cause exponential backtracking on strings containing many repetitions of '\r\n' in SQL comments. Only the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround don't use the sqlformat.format function with keyword strip_comments=True or the --strip-comments command line flag when using the sqlformat command line tool. The issues has been fixed in sqlparse 0.4.2.,2021-09-20 17:15:00,2021-09-29 15:04:00,2024-03-19 15:25:53.794685,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,django,Indirect,sqlparse,>=0.3.1,,False,"[0.4.0,0.4.2)",337.0,0.0,348.0,0.0,-11.0,0.0
12166,CVE-2023-30861,"Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets `session.permanent = True`
3. The application does not access or modify the session at any point during a request.
4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).
5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",2023-05-02 18:15:00,2023-08-20 21:15:00,2024-03-19 14:58:28.881205,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,flask,Direct,flask,,,False,"[0.10,2.2.5),[2.3.0,2.3.2)",1807.5,1802.5,1808.0,1802.0,-1.5,0.5
91775,CVE-2019-1010083,The Pallets Project Flask before 1.0 is affected by: unexpected memory usage. The impact is: denial of service. The attack vector is: crafted encoded JSON data. The fixed version is: 1. NOTE: this may overlap CVE-2018-1000656.,2019-07-17 14:15:00,2020-08-24 17:37:00,2024-03-19 16:25:38.055181,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,False,flask,Direct,flask,,,False,"[0.10,1.0)",1778.0,0.0,2225.0,0.0,-447.0,0.0
107577,CVE-2018-1000656,The Pallets Project flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3. NOTE: this may overlap CVE-2019-1010083.,2018-08-20 19:31:00,2020-06-09 22:15:00,2024-03-19 16:33:22.665460,3.0,3.9,3.6,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,flask,Direct,flask,,,False,"[0.10,0.12.3)",1778.0,0.0,1894.0,0.0,-116.0,0.0
1103,CVE-2024-22195,"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
",2024-01-11 03:15:00,2024-01-27 03:15:00,2024-03-19 14:51:13.539125,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,flask,Indirect,jinja2,>=3.1.2,,False,"[2.0,3.1.3)",5655.0,0.0,5655.0,0.0,-1.0,0.0
83668,CVE-2020-28493,"This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",2021-02-01 20:15:00,2023-11-07 03:21:00,2024-03-19 15:39:52.395808,3.1,3.9,1.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,LOW,5.3,MEDIUM,True,flask,Indirect,jinja2,>=3.1.2,,False,"[2.0,2.11.3)",4580.0,0.0,4581.0,0.0,-2.0,0.0
92679,CVE-2019-10906,"In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape.",2019-04-07 00:29:00,2023-11-07 03:02:00,2024-03-19 16:26:18.287014,3.1,3.9,4.0,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,CHANGED,HIGH,NONE,NONE,8.6,HIGH,False,flask,Indirect,jinja2,>=3.1.2,,False,"[2.0,2.10.1)",3914.0,0.0,3915.0,0.0,-1.0,0.0
138440,CVE-2016-10745,"In Pallets Jinja before 2.8.1, str.format allows a sandbox escape.",2019-04-08 13:29:00,2019-06-06 16:29:00,2024-03-19 16:47:00.808754,3.0,3.9,4.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,CHANGED,HIGH,NONE,NONE,8.6,HIGH,True,flask,Indirect,jinja2,>=3.1.2,,False,"[2.0,2.8.1)",3086.0,0.0,3916.0,0.0,-831.0,0.0
6987,CVE-2023-23934,"Werkzeug is a comprehensive WSGI web application library. Browsers may allow ""nameless"" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:01.525717,3.1,2.1,1.4,CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,ADJACENT_NETWORK,LOW,NONE,REQUIRED,UNCHANGED,NONE,LOW,NONE,3.5,LOW,True,flask,Indirect,werkzeug,>=3.0.0,,False,"[0.9.1,2.2.3)",3532.0,0.0,3532.0,0.0,-1.0,0.0
8200,CVE-2023-25577,"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",2023-02-14 20:15:00,2023-08-18 14:15:00,2024-03-19 14:55:35.535453,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,flask,Indirect,werkzeug,>=3.0.0,,False,"[0.9.1,2.2.3)",3532.0,0.0,3532.0,0.0,-1.0,0.0
21909,CVE-2023-46136,Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.,2023-10-25 18:17:00,2024-01-10 18:58:00,2024-03-19 15:03:31.793793,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,7.5,HIGH,True,flask,Indirect,werkzeug,>=3.0.0,,False,"[0.9.1,2.3.8),[3.0.0,3.0.1)",1911.5,1887.5,1905.0,1880.0,6.5,7.5
36786,CVE-2022-29361,Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project,2022-05-25 01:15:00,2023-11-07 03:46:00,2024-03-19 15:10:46.622119,3.1,3.9,5.9,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,9.8,CRITICAL,True,flask,Indirect,werkzeug,>=3.0.0,,False,"[0.9.1,2.1.0]",3213.0,0.0,3266.0,0.0,-54.0,0.0
83791,CVE-2020-28724,Open redirect vulnerability in werkzeug before 0.11.6 via a double slash in the URL.,2020-11-18 15:15:00,2020-12-01 16:05:00,2024-03-19 15:39:54.960483,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,flask,Indirect,werkzeug,>=3.0.0,,False,"[0.9.1,0.11.6)",1035.0,0.0,2714.0,0.0,-1680.0,0.0
95539,CVE-2019-14322,"In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames.",2019-07-28 13:15:00,2023-01-31 20:18:00,2024-03-19 16:27:50.017905,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,flask,Indirect,werkzeug,>=3.0.0,,False,"[0.9.1,0.15.5)",2224.0,0.0,2235.0,0.0,-11.0,0.0
95918,CVE-2019-14806,"Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id.",2019-08-09 15:15:00,2023-03-03 19:34:00,2024-03-19 16:28:05.854981,3.1,3.9,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,7.5,HIGH,True,flask,Indirect,werkzeug,>=3.0.0,,False,"[0.9.1,0.15.3)",2160.0,0.0,2247.0,0.0,-87.0,0.0
138190,CVE-2016-10516,Cross-site scripting (XSS) vulnerability in the render_full function in debug/tbtools.py in the debugger in Pallets Werkzeug before 0.11.11 (as used in Pallets Flask and other products) allows remote attackers to inject arbitrary web script or HTML via a field that contains an exception message.,2017-10-23 16:29:00,2018-02-04 02:29:00,2024-03-19 16:46:55.921016,3.0,2.8,2.7,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,flask,Indirect,werkzeug,>=3.0.0,,False,"[0.9.1,0.11.11)",1174.0,0.0,1592.0,0.0,-419.0,0.0
10333,CVE-2023-28370,Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.,2023-05-25 10:15:00,2023-06-01 13:04:00,2024-03-19 14:57:13.098594,3.1,2.8,2.7,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,NETWORK,LOW,NONE,REQUIRED,CHANGED,LOW,LOW,NONE,6.1,MEDIUM,True,tornado,Direct,tornado,,,False,"[1.0,6.3.2)",4677.0,0.0,4688.0,0.0,-12.0,0.0
162171,CVE-2014-9720,"Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",2020-01-24 18:15:00,2020-01-28 16:42:00,2024-03-19 17:55:25.102632,3.1,2.8,3.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,NETWORK,LOW,NONE,REQUIRED,UNCHANGED,HIGH,NONE,NONE,6.5,MEDIUM,True,tornado,Direct,tornado,,,False,"[1.0,3.2.2)",1411.0,0.0,3472.0,0.0,-2061.0,0.0
170725,CVE-2012-2374,CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.,2012-05-23 20:55:00,2012-09-05 03:23:00,2024-03-19 18:00:47.159507,2.0,10.0,2.9,,NETWORK,LOW,NONE,False,UNCHANGED,NONE,PARTIAL,NONE,5.0,,True,tornado,Direct,tornado,,,False,"[1.0,2.2],[1.0,2.2)",1398.0,0.0,670.0,0.0,728.0,0.0
