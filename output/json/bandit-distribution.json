{
    "pypi:django": [
        {
            "id": 187508,
            "report": 1379,
            "description": "Try, Except, Pass detected.",
            "true_positive": true,
            "verified": true,
            "package": "apps",
            "module": "config",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/apps/config.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "111             app_module = import_module(entry)\n112         except Exception:\n113             pass\n114         else:\n",
            "lines": "112, 113",
            "cwe_id": "CWE-703",
            "project": "django",
            "source": "Direct",
            "package_module": "apps.config",
            "project_package": "django.apps",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187509,
            "report": 1379,
            "description": "Try, Except, Pass detected.",
            "true_positive": true,
            "verified": true,
            "package": "apps",
            "module": "config",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/apps/config.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "162                 app_config_class = import_string(entry)\n163             except Exception:\n164                 pass\n165         # If both import_module and import_string failed, it means that entry\n",
            "lines": "163, 164",
            "cwe_id": "CWE-703",
            "project": "django",
            "source": "Direct",
            "package_module": "apps.config",
            "project_package": "django.apps",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187510,
            "report": 1379,
            "description": "Possible hardcoded password: ''",
            "true_positive": false,
            "verified": true,
            "package": "conf",
            "module": "global_settings",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/conf/global_settings.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "203 EMAIL_HOST_USER = \"\"\n204 EMAIL_HOST_PASSWORD = \"\"\n205 EMAIL_USE_TLS = False\n",
            "lines": "204",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "conf.global_settings",
            "project_package": "django.conf",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187511,
            "report": 1379,
            "description": "Possible hardcoded password: ''",
            "true_positive": false,
            "verified": true,
            "package": "conf",
            "module": "global_settings",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/conf/global_settings.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "269 # loudly.\n270 SECRET_KEY = \"\"\n271 \n",
            "lines": "270",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "conf.global_settings",
            "project_package": "django.conf",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187512,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": true,
            "verified": true,
            "package": "contrib.admin",
            "module": "helpers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/helpers.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "155     def errors(self):\n156         return mark_safe(\n157             \"\\n\".join(\n158                 self.form[f].errors.as_ul()\n159                 for f in self.fields\n160                 if f not in self.readonly_fields\n161             ).strip(\"\\n\")\n162         )\n163 \n",
            "lines": "156, 157, 158, 159, 160, 161, 162",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.helpers",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187513,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": true,
            "verified": true,
            "package": "contrib.admin",
            "module": "helpers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/helpers.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "155     def errors(self):\n156         return mark_safe(\n157             \"\\n\".join(\n158                 self.form[f].errors.as_ul()\n159                 for f in self.fields\n160                 if f not in self.readonly_fields\n161             ).strip(\"\\n\")\n162         )\n163 \n",
            "lines": "156, 157, 158, 159, 160, 161, 162",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.helpers",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187514,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin",
            "module": "helpers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/helpers.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "185         return self.field.label_tag(\n186             contents=mark_safe(contents),\n187             attrs=attrs,\n",
            "lines": "186",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.helpers",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187515,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin",
            "module": "helpers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/helpers.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "185         return self.field.label_tag(\n186             contents=mark_safe(contents),\n187             attrs=attrs,\n",
            "lines": "186",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.helpers",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187516,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin",
            "module": "helpers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/helpers.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "191     def errors(self):\n192         return mark_safe(self.field.errors.as_ul())\n193 \n",
            "lines": "192",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.helpers",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187517,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin",
            "module": "helpers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/helpers.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "191     def errors(self):\n192         return mark_safe(self.field.errors.as_ul())\n193 \n",
            "lines": "192",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.helpers",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187518,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin",
            "module": "options",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/options.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "377         try:\n378             return mark_safe(self.empty_value_display)\n379         except AttributeError:\n",
            "lines": "378",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.options",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187519,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin",
            "module": "options",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/options.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "377         try:\n378             return mark_safe(self.empty_value_display)\n379         except AttributeError:\n",
            "lines": "378",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.options",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187520,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin",
            "module": "options",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/options.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "379         except AttributeError:\n380             return mark_safe(self.admin_site.empty_value_display)\n381 \n",
            "lines": "380",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.options",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187521,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin",
            "module": "options",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/options.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "379         except AttributeError:\n380             return mark_safe(self.admin_site.empty_value_display)\n381 \n",
            "lines": "380",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.options",
            "project_package": "django.contrib.admin",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187522,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "48             cl.get_query_string({PAGE_VAR: i}),\n49             mark_safe(' class=\"end\"' if i == cl.paginator.num_pages else \"\"),\n50             i,\n",
            "lines": "49",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187523,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "48             cl.get_query_string({PAGE_VAR: i}),\n49             mark_safe(' class=\"end\"' if i == cl.paginator.num_pages else \"\"),\n50             i,\n",
            "lines": "49",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187524,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "101                 yield {\n102                     \"text\": mark_safe(\n103                         f'<input type=\"checkbox\" id=\"action-toggle\" '\n104                         f'aria-label=\"{aria_label}\">'\n105                     ),\n106                     \"class_attrib\": mark_safe(' class=\"action-checkbox-column\"'),\n",
            "lines": "102, 103, 104, 105",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187525,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "101                 yield {\n102                     \"text\": mark_safe(\n103                         f'<input type=\"checkbox\" id=\"action-toggle\" '\n104                         f'aria-label=\"{aria_label}\">'\n105                     ),\n106                     \"class_attrib\": mark_safe(' class=\"action-checkbox-column\"'),\n",
            "lines": "102, 103, 104, 105",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187526,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "105                     ),\n106                     \"class_attrib\": mark_safe(' class=\"action-checkbox-column\"'),\n107                     \"sortable\": False,\n",
            "lines": "106",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187527,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "246                     row_classes.append(\"nowrap\")\n247         row_class = mark_safe(' class=\"%s\"' % \" \".join(row_classes))\n248         # If list_display_links not defined, add the link tag to the first field\n",
            "lines": "247",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187528,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "246                     row_classes.append(\"nowrap\")\n247         row_class = mark_safe(' class=\"%s\"' % \" \".join(row_classes))\n248         # If list_display_links not defined, add the link tag to the first field\n",
            "lines": "247",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187529,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "296                 bf = form[field_name]\n297                 result_repr = mark_safe(str(bf.errors) + str(bf))\n298             yield format_html(\"<td{}>{}</td>\", row_class, result_repr)\n",
            "lines": "297",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187530,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "296                 bf = form[field_name]\n297                 result_repr = mark_safe(str(bf.errors) + str(bf))\n298             yield format_html(\"<td{}>{}</td>\", row_class, result_repr)\n",
            "lines": "297",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187531,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "327             if form[cl.model._meta.pk.name].is_hidden:\n328                 yield mark_safe(form[cl.model._meta.pk.name])\n329 \n",
            "lines": "328",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187532,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admin.templatetags",
            "module": "admin_list",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admin/templatetags/admin_list.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "327             if form[cl.model._meta.pk.name].is_hidden:\n328                 yield mark_safe(form[cl.model._meta.pk.name])\n329 \n",
            "lines": "328",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admin.templatetags.admin_list",
            "project_package": "django.contrib.admin.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187533,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admindocs",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admindocs/utils.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "87     )\n88     return mark_safe(parts[\"fragment\"])\n89 \n",
            "lines": "88",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admindocs.utils",
            "project_package": "django.contrib.admindocs",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187534,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.admindocs",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/admindocs/utils.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "87     )\n88     return mark_safe(parts[\"fragment\"])\n89 \n",
            "lines": "88",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.admindocs.utils",
            "project_package": "django.contrib.admindocs",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187535,
            "report": 1379,
            "description": "Possible hardcoded password: '!'",
            "true_positive": false,
            "verified": true,
            "package": "contrib.auth",
            "module": "hashers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/auth/hashers.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "22 \n23 UNUSABLE_PASSWORD_PREFIX = \"!\"  # This will never be a valid encoded hash\n24 UNUSABLE_PASSWORD_SUFFIX_LENGTH = (\n",
            "lines": "23",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.auth.hashers",
            "project_package": "django.contrib.auth",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187536,
            "report": 1379,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "contrib.auth",
            "module": "hashers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/auth/hashers.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "661         self._check_encode_args(password, salt)\n662         hash = hashlib.sha1((salt + password).encode()).hexdigest()\n663         return \"%s$%s$%s\" % (self.algorithm, salt, hash)\n",
            "lines": "662",
            "cwe_id": "CWE-327",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.auth.hashers",
            "project_package": "django.contrib.auth",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187537,
            "report": 1379,
            "description": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "contrib.auth",
            "module": "hashers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/auth/hashers.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "703         self._check_encode_args(password, salt)\n704         hash = hashlib.md5((salt + password).encode()).hexdigest()\n705         return \"%s$%s$%s\" % (self.algorithm, salt, hash)\n",
            "lines": "704",
            "cwe_id": "CWE-327",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.auth.hashers",
            "project_package": "django.contrib.auth",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187538,
            "report": 1379,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "contrib.auth",
            "module": "hashers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/auth/hashers.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "763             raise ValueError(\"salt must be empty.\")\n764         hash = hashlib.sha1(password.encode()).hexdigest()\n765         return \"sha1$$%s\" % hash\n",
            "lines": "764",
            "cwe_id": "CWE-327",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.auth.hashers",
            "project_package": "django.contrib.auth",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187539,
            "report": 1379,
            "description": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "contrib.auth",
            "module": "hashers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/auth/hashers.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "818             raise ValueError(\"salt must be empty.\")\n819         return hashlib.md5(password.encode()).hexdigest()\n820 \n",
            "lines": "819",
            "cwe_id": "CWE-327",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.auth.hashers",
            "project_package": "django.contrib.auth",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187540,
            "report": 1379,
            "description": "Possible hardcoded password: 'password'",
            "true_positive": false,
            "verified": true,
            "package": "contrib.auth.management.commands",
            "module": "createsuperuser",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/auth/management/commands/createsuperuser.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "22 \n23 PASSWORD_FIELD = \"password\"\n24 \n",
            "lines": "23",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.auth.management.commands.createsuperuser",
            "project_package": "django.contrib.auth.management.commands",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187541,
            "report": 1379,
            "description": "Possible hardcoded password: '_password_reset_token'",
            "true_positive": false,
            "verified": true,
            "package": "contrib.auth",
            "module": "views",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/auth/views.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "243 \n244 INTERNAL_RESET_SESSION_TOKEN = \"_password_reset_token\"\n245 \n",
            "lines": "244",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.auth.views",
            "project_package": "django.contrib.auth",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187542,
            "report": 1379,
            "description": "Possible hardcoded password: 'set-password'",
            "true_positive": false,
            "verified": true,
            "package": "contrib.auth",
            "module": "views",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/auth/views.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "255     post_reset_login_backend = None\n256     reset_url_token = \"set-password\"\n257     success_url = reverse_lazy(\"password_reset_complete\")\n",
            "lines": "256",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.auth.views",
            "project_package": "django.contrib.auth",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187543,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.flatpages",
            "module": "views",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/flatpages/views.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "66     # content in the first place).\n67     f.title = mark_safe(f.title)\n68     f.content = mark_safe(f.content)\n",
            "lines": "67",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.flatpages.views",
            "project_package": "django.contrib.flatpages",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187544,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.flatpages",
            "module": "views",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/flatpages/views.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "66     # content in the first place).\n67     f.title = mark_safe(f.title)\n68     f.content = mark_safe(f.content)\n",
            "lines": "67",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.flatpages.views",
            "project_package": "django.contrib.flatpages",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187545,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.flatpages",
            "module": "views",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/flatpages/views.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "67     f.title = mark_safe(f.title)\n68     f.content = mark_safe(f.content)\n69 \n",
            "lines": "68",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.flatpages.views",
            "project_package": "django.contrib.flatpages",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187546,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.flatpages",
            "module": "views",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/flatpages/views.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "67     f.title = mark_safe(f.title)\n68     f.content = mark_safe(f.content)\n69 \n",
            "lines": "68",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.flatpages.views",
            "project_package": "django.contrib.flatpages",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187547,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": false,
            "verified": true,
            "package": "contrib.gis.db.backends.postgis",
            "module": "operations",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/gis/db/backends/postgis/operations.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "203                 raise ImproperlyConfigured(\n204                     'Cannot determine PostGIS version for database \"%s\" '\n205                     'using command \"SELECT postgis_lib_version()\". '\n206                     \"GeoDjango requires at least PostGIS version 2.5. \"\n207                     \"Was the database created from a spatial database \"\n208                     \"template?\" % self.connection.settings_dict[\"NAME\"]\n209                 )\n",
            "lines": "204, 205, 206, 207, 208",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.gis.db.backends.postgis.operations",
            "project_package": "django.contrib.gis.db.backends.postgis",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187548,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.humanize.templatetags",
            "module": "humanize",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/humanize/templatetags/humanize.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "60     # Mark value safe so i18n does not break with <sup> or <sub> see #19988\n61     return mark_safe(value)\n62 \n",
            "lines": "61",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.humanize.templatetags.humanize",
            "project_package": "django.contrib.humanize.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187549,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.humanize.templatetags",
            "module": "humanize",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/humanize/templatetags/humanize.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "60     # Mark value safe so i18n does not break with <sup> or <sub> see #19988\n61     return mark_safe(value)\n62 \n",
            "lines": "61",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.humanize.templatetags.humanize",
            "project_package": "django.contrib.humanize.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187550,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.messages.storage",
            "module": "cookie",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/messages/storage/cookie.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "37                 if obj[1]:\n38                     obj[3] = mark_safe(obj[3])\n39                 return Message(*obj[2:])\n",
            "lines": "38",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.messages.storage.cookie",
            "project_package": "django.contrib.messages.storage",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187551,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.messages.storage",
            "module": "cookie",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/messages/storage/cookie.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "37                 if obj[1]:\n38                     obj[3] = mark_safe(obj[3])\n39                 return Message(*obj[2:])\n",
            "lines": "38",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.messages.storage.cookie",
            "project_package": "django.contrib.messages.storage",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187552,
            "report": 1379,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "contrib.sessions.backends",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/contrib/sessions/backends/base.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "108             logger.warning(\"Session data corrupted\")\n109         except Exception:\n110             # ValueError, unpickling exceptions. If any of these happen, just\n111             # return an empty dictionary (an empty session).\n112             pass\n113         return {}\n",
            "lines": "109, 110, 111, 112",
            "cwe_id": "CWE-703",
            "project": "django",
            "source": "Direct",
            "package_module": "contrib.sessions.backends.base",
            "project_package": "django.contrib.sessions.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187553,
            "report": 1379,
            "description": "Consider possible security implications associated with pickle module.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle",
            "test_id": "B403",
            "test_name": "blacklist",
            "code": "2 import base64\n3 import pickle\n4 from datetime import datetime, timezone\n",
            "lines": "3",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187554,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "68             cursor.execute(\n69                 \"SELECT %s, %s, %s FROM %s WHERE %s IN (%s)\"\n70                 % (\n71                     quote_name(\"cache_key\"),\n72                     quote_name(\"value\"),\n73                     quote_name(\"expires\"),\n74                     table,\n75                     quote_name(\"cache_key\"),\n76                     \", \".join([\"%s\"] * len(key_map)),\n77                 ),\n78                 list(key_map),\n",
            "lines": "69, 70, 71, 72, 73, 74, 75, 76, 77",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187555,
            "report": 1379,
            "description": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle",
            "test_id": "B301",
            "test_name": "blacklist",
            "code": "94                 value = connection.ops.process_clob(value)\n95                 value = pickle.loads(base64.b64decode(value.encode()))\n96                 result[key_map.get(key)] = value\n",
            "lines": "95",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187556,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "119         with connection.cursor() as cursor:\n120             cursor.execute(\"SELECT COUNT(*) FROM %s\" % table)\n121             num = cursor.fetchone()[0]\n",
            "lines": "120",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187557,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "142                     cursor.execute(\n143                         \"SELECT %s, %s FROM %s WHERE %s = %%s\"\n144                         % (\n145                             quote_name(\"cache_key\"),\n146                             quote_name(\"expires\"),\n147                             table,\n148                             quote_name(\"cache_key\"),\n149                         ),\n150                         [key],\n",
            "lines": "143, 144, 145, 146, 147, 148, 149",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187558,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "168                         cursor.execute(\n169                             \"UPDATE %s SET %s = %%s WHERE %s = %%s\"\n170                             % (table, quote_name(\"expires\"), quote_name(\"cache_key\")),\n171                             [exp, key],\n",
            "lines": "169, 170",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187559,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "176                         cursor.execute(\n177                             \"UPDATE %s SET %s = %%s, %s = %%s WHERE %s = %%s\"\n178                             % (\n179                                 table,\n180                                 quote_name(\"value\"),\n181                                 quote_name(\"expires\"),\n182                                 quote_name(\"cache_key\"),\n183                             ),\n184                             [b64encoded, exp, key],\n",
            "lines": "177, 178, 179, 180, 181, 182, 183",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187560,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "187                         cursor.execute(\n188                             \"INSERT INTO %s (%s, %s, %s) VALUES (%%s, %%s, %%s)\"\n189                             % (\n190                                 table,\n191                                 quote_name(\"cache_key\"),\n192                                 quote_name(\"value\"),\n193                                 quote_name(\"expires\"),\n194                             ),\n195                             [key, b64encoded, exp],\n",
            "lines": "188, 189, 190, 191, 192, 193, 194",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187561,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "223             cursor.execute(\n224                 \"DELETE FROM %s WHERE %s IN (%s)\"\n225                 % (\n226                     table,\n227                     quote_name(\"cache_key\"),\n228                     \", \".join([\"%s\"] * len(keys)),\n229                 ),\n230                 keys,\n",
            "lines": "224, 225, 226, 227, 228, 229",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187562,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "244             cursor.execute(\n245                 \"SELECT %s FROM %s WHERE %s = %%s and %s > %%s\"\n246                 % (\n247                     quote_name(\"cache_key\"),\n248                     quote_name(self._table),\n249                     quote_name(\"cache_key\"),\n250                     quote_name(\"expires\"),\n251                 ),\n252                 [key, connection.ops.adapt_datetimefield_value(now)],\n",
            "lines": "245, 246, 247, 248, 249, 250, 251",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187563,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "262             cursor.execute(\n263                 \"DELETE FROM %s WHERE %s < %%s\"\n264                 % (\n265                     table,\n266                     connection.ops.quote_name(\"expires\"),\n267                 ),\n268                 [connection.ops.adapt_datetimefield_value(now)],\n",
            "lines": "263, 264, 265, 266, 267",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187564,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "279                     cursor.execute(\n280                         \"DELETE FROM %s WHERE %s < %%s\"\n281                         % (\n282                             table,\n283                             connection.ops.quote_name(\"cache_key\"),\n284                         ),\n285                         [last_cache_key[0]],\n",
            "lines": "280, 281, 282, 283, 284",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187565,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": true,
            "verified": true,
            "package": "core.cache.backends",
            "module": "db",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/db.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "292         with connection.cursor() as cursor:\n293             cursor.execute(\"DELETE FROM %s\" % table)\n",
            "lines": "293",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.db",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187566,
            "report": 1379,
            "description": "Consider possible security implications associated with pickle module.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "filebased",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/filebased.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle",
            "test_id": "B403",
            "test_name": "blacklist",
            "code": "3 import os\n4 import pickle\n5 import random\n",
            "lines": "4",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.filebased",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187567,
            "report": 1379,
            "description": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "filebased",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/filebased.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle",
            "test_id": "B301",
            "test_name": "blacklist",
            "code": "35                 if not self._is_expired(f):\n36                     return pickle.loads(zlib.decompress(f.read()))\n37         except FileNotFoundError:\n",
            "lines": "36",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.filebased",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187568,
            "report": 1379,
            "description": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "filebased",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/filebased.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle",
            "test_id": "B301",
            "test_name": "blacklist",
            "code": "68                     else:\n69                         previous_value = pickle.loads(zlib.decompress(f.read()))\n70                         f.seek(0)\n",
            "lines": "69",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.filebased",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187569,
            "report": 1379,
            "description": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "filebased",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/filebased.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle",
            "test_id": "B301",
            "test_name": "blacklist",
            "code": "152         try:\n153             exp = pickle.load(f)\n154         except EOFError:\n",
            "lines": "153",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.filebased",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187570,
            "report": 1379,
            "description": "Consider possible security implications associated with pickle module.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "locmem",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/locmem.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle",
            "test_id": "B403",
            "test_name": "blacklist",
            "code": "1 \"Thread-safe in-memory cache backend.\"\n2 import pickle\n3 import time\n",
            "lines": "2",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.locmem",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187571,
            "report": 1379,
            "description": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "locmem",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/locmem.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle",
            "test_id": "B301",
            "test_name": "blacklist",
            "code": "41             self._cache.move_to_end(key, last=False)\n42         return pickle.loads(pickled)\n43 \n",
            "lines": "42",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.locmem",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187572,
            "report": 1379,
            "description": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "locmem",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/locmem.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle",
            "test_id": "B301",
            "test_name": "blacklist",
            "code": "71             pickled = self._cache[key]\n72             value = pickle.loads(pickled)\n73             new_value = value + delta\n",
            "lines": "72",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.locmem",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187573,
            "report": 1379,
            "description": "Consider possible security implications associated with pickle module.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "redis",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/redis.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle",
            "test_id": "B403",
            "test_name": "blacklist",
            "code": "2 \n3 import pickle\n4 import random\n",
            "lines": "3",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.redis",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187574,
            "report": 1379,
            "description": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "redis",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/redis.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle",
            "test_id": "B301",
            "test_name": "blacklist",
            "code": "26         except ValueError:\n27             return pickle.loads(data)\n28 \n",
            "lines": "27",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.redis",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187575,
            "report": 1379,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "core.cache.backends",
            "module": "redis",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/cache/backends/redis.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "67             return 0\n68         return random.randint(1, len(self._servers) - 1)\n69 \n",
            "lines": "68",
            "cwe_id": "CWE-330",
            "project": "django",
            "source": "Direct",
            "package_module": "core.cache.backends.redis",
            "project_package": "django.core.cache.backends",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187576,
            "report": 1379,
            "description": "Possible hardcoded password: 'django-insecure-'",
            "true_positive": false,
            "verified": true,
            "package": "core.checks.security",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/checks/security/base.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "21 \n22 SECRET_KEY_INSECURE_PREFIX = \"django-insecure-\"\n23 SECRET_KEY_MIN_LENGTH = 50\n",
            "lines": "22",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "core.checks.security.base",
            "project_package": "django.core.checks.security",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187577,
            "report": 1379,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "core.management.commands",
            "module": "dbshell",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/management/commands/dbshell.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "1 import subprocess\n2 \n3 from django.core.management.base import BaseCommand, CommandError\n",
            "lines": "1",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "core.management.commands.dbshell",
            "project_package": "django.core.management.commands",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187578,
            "report": 1379,
            "description": "Possible binding to all interfaces.",
            "true_positive": false,
            "verified": true,
            "package": "core.management.commands",
            "module": "runserver",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/management/commands/runserver.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html",
            "test_id": "B104",
            "test_name": "hardcoded_bind_all_interfaces",
            "code": "173         elif self.addr == \"0\":\n174             addr = \"0.0.0.0\"\n175         else:\n",
            "lines": "174",
            "cwe_id": "CWE-605",
            "project": "django",
            "source": "Direct",
            "package_module": "core.management.commands.runserver",
            "project_package": "django.core.management.commands",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187579,
            "report": 1379,
            "description": "Use of exec detected.",
            "true_positive": null,
            "verified": false,
            "package": "core.management.commands",
            "module": "shell",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/management/commands/shell.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html",
            "test_id": "B102",
            "test_name": "exec_used",
            "code": "77                 try:\n78                     exec(compile(pythonrc_code, pythonrc, \"exec\"), imported_objects)\n79                 except Exception:\n",
            "lines": "78",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "core.management.commands.shell",
            "project_package": "django.core.management.commands",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187580,
            "report": 1379,
            "description": "Use of exec detected.",
            "true_positive": null,
            "verified": false,
            "package": "core.management.commands",
            "module": "shell",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/management/commands/shell.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html",
            "test_id": "B102",
            "test_name": "exec_used",
            "code": "116         if options[\"command\"]:\n117             exec(options[\"command\"], globals())\n118             return\n",
            "lines": "117",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "core.management.commands.shell",
            "project_package": "django.core.management.commands",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187581,
            "report": 1379,
            "description": "Use of exec detected.",
            "true_positive": null,
            "verified": false,
            "package": "core.management.commands",
            "module": "shell",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/management/commands/shell.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html",
            "test_id": "B102",
            "test_name": "exec_used",
            "code": "126         ):\n127             exec(sys.stdin.read(), globals())\n128             return\n",
            "lines": "127",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "core.management.commands.shell",
            "project_package": "django.core.management.commands",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187582,
            "report": 1379,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "core.management",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/management/utils.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "3 import shutil\n4 import subprocess\n5 from pathlib import Path\n",
            "lines": "4",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "core.management.utils",
            "project_package": "django.core.management",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187583,
            "report": 1379,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "core.management",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/management/utils.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "5 from pathlib import Path\n6 from subprocess import run\n7 \n",
            "lines": "6",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "core.management.utils",
            "project_package": "django.core.management",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187584,
            "report": 1379,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "core.management",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/management/utils.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "21     try:\n22         p = run(args, capture_output=True, close_fds=os.name != \"nt\")\n23     except OSError as err:\n",
            "lines": "22",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "core.management.utils",
            "project_package": "django.core.management",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187585,
            "report": 1379,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "core.management",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/management/utils.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "171     if black_path:\n172         subprocess.run(\n173             [black_path, \"--fast\", \"--\", *written_files],\n174             capture_output=True,\n175         )\n",
            "lines": "172, 173, 174, 175",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "core.management.utils",
            "project_package": "django.core.management",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187586,
            "report": 1379,
            "description": "Using pulldom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace pulldom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
            "true_positive": null,
            "verified": false,
            "package": "core.serializers",
            "module": "xml_serializer",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/serializers/xml_serializer.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b409-import-xml-pulldom",
            "test_id": "B409",
            "test_name": "blacklist",
            "code": "5 import json\n6 from xml.dom import pulldom\n7 from xml.sax import handler\n",
            "lines": "6",
            "cwe_id": "CWE-20",
            "project": "django",
            "source": "Direct",
            "package_module": "core.serializers.xml_serializer",
            "project_package": "django.core.serializers",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187587,
            "report": 1379,
            "description": "Using handler to parse untrusted XML data is known to be vulnerable to XML attacks. Replace handler with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
            "true_positive": null,
            "verified": false,
            "package": "core.serializers",
            "module": "xml_serializer",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/serializers/xml_serializer.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b406-import-xml-sax",
            "test_id": "B406",
            "test_name": "blacklist",
            "code": "6 from xml.dom import pulldom\n7 from xml.sax import handler\n8 from xml.sax.expatreader import ExpatParser as _ExpatParser\n",
            "lines": "7",
            "cwe_id": "CWE-20",
            "project": "django",
            "source": "Direct",
            "package_module": "core.serializers.xml_serializer",
            "project_package": "django.core.serializers",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187588,
            "report": 1379,
            "description": "Using ExpatParser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ExpatParser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
            "true_positive": null,
            "verified": false,
            "package": "core.serializers",
            "module": "xml_serializer",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/serializers/xml_serializer.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b406-import-xml-sax",
            "test_id": "B406",
            "test_name": "blacklist",
            "code": "7 from xml.sax import handler\n8 from xml.sax.expatreader import ExpatParser as _ExpatParser\n9 \n",
            "lines": "8",
            "cwe_id": "CWE-20",
            "project": "django",
            "source": "Direct",
            "package_module": "core.serializers.xml_serializer",
            "project_package": "django.core.serializers",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187589,
            "report": 1379,
            "description": "Using xml.dom.pulldom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
            "true_positive": null,
            "verified": false,
            "package": "core.serializers",
            "module": "xml_serializer",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/core/serializers/xml_serializer.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-pulldom",
            "test_id": "B319",
            "test_name": "blacklist",
            "code": "200         self.handle_forward_references = options.pop(\"handle_forward_references\", False)\n201         self.event_stream = pulldom.parse(self.stream, self._make_parser())\n202         self.db = using\n",
            "lines": "201",
            "cwe_id": "CWE-20",
            "project": "django",
            "source": "Direct",
            "package_module": "core.serializers.xml_serializer",
            "project_package": "django.core.serializers",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187590,
            "report": 1379,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.base",
            "module": "client",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/base/client.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "1 import os\n2 import subprocess\n3 \n",
            "lines": "2",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.base.client",
            "project_package": "django.db.backends.base",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187591,
            "report": 1379,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.base",
            "module": "client",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/base/client.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "27         env = {**os.environ, **env} if env else None\n28         subprocess.run(args, env=env, check=True)\n",
            "lines": "28",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.base.client",
            "project_package": "django.db.backends.base",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187592,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.base",
            "module": "operations",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/base/operations.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "96         cache_key = self.quote_name(\"cache_key\")\n97         return f\"SELECT {cache_key} FROM %s ORDER BY {cache_key} LIMIT 1 OFFSET %%s\"\n98 \n",
            "lines": "97",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.base.operations",
            "project_package": "django.db.backends.base",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187593,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.mysql",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/mysql/base.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "345                     cursor.execute(\n346                         \"\"\"\n347                         SELECT REFERRING.`%s`, REFERRING.`%s` FROM `%s` as REFERRING\n348                         LEFT JOIN `%s` as REFERRED\n349                         ON (REFERRING.`%s` = REFERRED.`%s`)\n350                         WHERE REFERRING.`%s` IS NOT NULL AND REFERRED.`%s` IS NULL\n351                         \"\"\"\n352                         % (\n353                             primary_key_column_name,\n354                             column_name,\n355                             table_name,\n356                             referenced_table_name,\n357                             column_name,\n358                             referenced_column_name,\n359                             column_name,\n360                             referenced_column_name,\n361                         )\n362                     )\n",
            "lines": "346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.mysql.base",
            "project_package": "django.db.backends.mysql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187594,
            "report": 1379,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.mysql",
            "module": "creation",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/mysql/creation.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "1 import os\n2 import subprocess\n3 import sys\n",
            "lines": "2",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.mysql.creation",
            "project_package": "django.db.backends.mysql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187595,
            "report": 1379,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.mysql",
            "module": "creation",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/mysql/creation.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "76 \n77         with subprocess.Popen(\n78             dump_cmd, stdout=subprocess.PIPE, env=dump_env\n79         ) as dump_proc:\n80             with subprocess.Popen(\n",
            "lines": "77, 78, 79",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.mysql.creation",
            "project_package": "django.db.backends.mysql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187596,
            "report": 1379,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.mysql",
            "module": "creation",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/mysql/creation.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "79         ) as dump_proc:\n80             with subprocess.Popen(\n81                 load_cmd,\n82                 stdin=dump_proc.stdout,\n83                 stdout=subprocess.DEVNULL,\n84                 env=load_env,\n85             ):\n86                 # Allow dump_proc to receive a SIGPIPE if the load process exits.\n",
            "lines": "80, 81, 82, 83, 84, 85",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.mysql.creation",
            "project_package": "django.db.backends.mysql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187597,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.mysql",
            "module": "introspection",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/mysql/introspection.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "154         cursor.execute(\n155             \"SELECT * FROM %s LIMIT 1\" % self.connection.ops.quote_name(table_name)\n156         )\n",
            "lines": "155",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.mysql.introspection",
            "project_package": "django.db.backends.mysql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187598,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.mysql",
            "module": "schema",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/mysql/schema.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "109             self.execute(\n110                 \"UPDATE %(table)s SET %(column)s = %%s\"\n111                 % {\n112                     \"table\": self.quote_name(model._meta.db_table),\n113                     \"column\": self.quote_name(field.column),\n114                 },\n115                 [effective_default],\n",
            "lines": "110, 111, 112, 113, 114",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.mysql.schema",
            "project_package": "django.db.backends.mysql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187599,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.oracle",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/oracle/base.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "285                 cursor.execute(\n286                     \"SELECT 1 FROM DUAL WHERE DUMMY %s\"\n287                     % self._standard_operators[\"contains\"],\n288                     [\"X\"],\n",
            "lines": "286, 287",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.oracle.base",
            "project_package": "django.db.backends.oracle",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187600,
            "report": 1379,
            "description": "Possible hardcoded password: 'ALTER USER %(user)s IDENTIFIED BY \"%(password)s\"'",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.oracle",
            "module": "creation",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/oracle/creation.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "285         if not success and self._test_settings_get(\"PASSWORD\") is None:\n286             set_password = 'ALTER USER %(user)s IDENTIFIED BY \"%(password)s\"'\n287             self._execute_statements(cursor, [set_password], parameters, verbosity)\n",
            "lines": "286",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.oracle.creation",
            "project_package": "django.db.backends.oracle",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187601,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.oracle",
            "module": "introspection",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/oracle/introspection.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "179         cursor.execute(\n180             \"SELECT * FROM {} WHERE ROWNUM < 2 AND {} > 0\".format(\n181                 self.connection.ops.quote_name(table_name), self.cache_bust_counter\n",
            "lines": "180",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.oracle.introspection",
            "project_package": "django.db.backends.oracle",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187602,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.oracle",
            "module": "operations",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/oracle/operations.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "74         return (\n75             f\"SELECT {cache_key} \"\n76             f\"FROM %s \"\n77             f\"ORDER BY {cache_key} OFFSET %%s ROWS FETCH FIRST 1 ROWS ONLY\"\n78         )\n",
            "lines": "75, 76, 77",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.oracle.operations",
            "project_package": "django.db.backends.oracle",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187603,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.oracle",
            "module": "operations",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/oracle/operations.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "685                 select.append(placeholder)\n686             query.append(\"SELECT %s FROM DUAL\" % \", \".join(select))\n687         # Bulk insert to tables with Oracle identity columns causes Oracle to\n",
            "lines": "686",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.oracle.operations",
            "project_package": "django.db.backends.oracle",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187604,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.oracle",
            "module": "operations",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/oracle/operations.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "689         # UNION operator. To prevent incorrect SQL, move UNION to a subquery.\n690         return \"SELECT * FROM (%s)\" % \" UNION ALL \".join(query)\n691 \n",
            "lines": "690",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.oracle.operations",
            "project_package": "django.db.backends.oracle",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187605,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.oracle",
            "module": "schema",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/oracle/schema.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "54         self.execute(\n55             \"\"\"\n56             DECLARE\n57                 i INTEGER;\n58             BEGIN\n59                 SELECT COUNT(1) INTO i FROM USER_SEQUENCES\n60                     WHERE SEQUENCE_NAME = '%(sq_name)s';\n61                 IF i = 1 THEN\n62                     EXECUTE IMMEDIATE 'DROP SEQUENCE \"%(sq_name)s\"';\n63                 END IF;\n64             END;\n65         /\"\"\"\n66             % {\n67                 \"sq_name\": self.connection.ops._get_no_autofield_sequence_name(\n68                     model._meta.db_table\n69                 )\n70             }\n71         )\n",
            "lines": "55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.oracle.schema",
            "project_package": "django.db.backends.oracle",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187606,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.oracle",
            "module": "schema",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/oracle/schema.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "144         self.execute(\n145             \"UPDATE %s set %s=%s\"\n146             % (\n147                 self.quote_name(model._meta.db_table),\n148                 self.quote_name(new_temp_field.column),\n149                 new_value,\n150             )\n151         )\n",
            "lines": "145, 146, 147, 148, 149, 150",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.oracle.schema",
            "project_package": "django.db.backends.oracle",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187607,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.postgresql",
            "module": "introspection",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/postgresql/introspection.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "112         cursor.execute(\n113             \"SELECT * FROM %s LIMIT 1\" % self.connection.ops.quote_name(table_name)\n114         )\n",
            "lines": "113",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.postgresql.introspection",
            "project_package": "django.db.backends.postgresql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187608,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.postgresql",
            "module": "operations",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/postgresql/operations.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "390         if on_conflict == OnConflict.UPDATE:\n391             return \"ON CONFLICT(%s) DO UPDATE SET %s\" % (\n392                 \", \".join(map(self.quote_name, unique_fields)),\n393                 \", \".join(\n394                     [\n395                         f\"{field} = EXCLUDED.{field}\"\n396                         for field in map(self.quote_name, update_fields)\n397                     ]\n398                 ),\n399             )\n400         return super().on_conflict_suffix_sql(\n",
            "lines": "391, 392, 393, 394, 395, 396, 397, 398, 399",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.postgresql.operations",
            "project_package": "django.db.backends.postgresql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187609,
            "report": 1379,
            "description": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.sqlite3",
            "module": "_functions",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/sqlite3/_functions.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "397         return None\n398     return md5(text.encode()).hexdigest()\n399 \n",
            "lines": "398",
            "cwe_id": "CWE-327",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.sqlite3._functions",
            "project_package": "django.db.backends.sqlite3",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187610,
            "report": 1379,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.sqlite3",
            "module": "_functions",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/sqlite3/_functions.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "443         return None\n444     return sha1(text.encode()).hexdigest()\n445 \n",
            "lines": "444",
            "cwe_id": "CWE-327",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.sqlite3._functions",
            "project_package": "django.db.backends.sqlite3",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187611,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.sqlite3",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/sqlite3/base.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "267                 primary_key_value, bad_value = cursor.execute(\n268                     \"SELECT %s, %s FROM %s WHERE rowid = %%s\"\n269                     % (\n270                         self.ops.quote_name(primary_key_column_name),\n271                         self.ops.quote_name(column_name),\n272                         self.ops.quote_name(table_name),\n273                     ),\n274                     (rowid,),\n",
            "lines": "268, 269, 270, 271, 272, 273",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.sqlite3.base",
            "project_package": "django.db.backends.sqlite3",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187612,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.sqlite3",
            "module": "introspection",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/sqlite3/introspection.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "318             table_schema = cursor.execute(\n319                 \"SELECT sql FROM sqlite_master WHERE type='table' and name=%s\"\n320                 % (self.connection.ops.quote_name(table_name),)\n321             ).fetchone()[0]\n",
            "lines": "319, 320",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.sqlite3.introspection",
            "project_package": "django.db.backends.sqlite3",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187613,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.sqlite3",
            "module": "introspection",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/sqlite3/introspection.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "339             cursor.execute(\n340                 \"SELECT sql FROM sqlite_master \"\n341                 \"WHERE type='index' AND name=%s\" % self.connection.ops.quote_name(index)\n342             )\n",
            "lines": "340, 341",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.sqlite3.introspection",
            "project_package": "django.db.backends.sqlite3",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187614,
            "report": 1379,
            "description": "Possible hardcoded password: 'COLLATE'",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.sqlite3",
            "module": "introspection",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/sqlite3/introspection.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "433             for index, token in enumerate(tokens):\n434                 if token == \"COLLATE\":\n435                     collation = tokens[index + 1]\n",
            "lines": "434",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.sqlite3.introspection",
            "project_package": "django.db.backends.sqlite3",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187615,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.sqlite3",
            "module": "operations",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/sqlite3/operations.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "426         ):\n427             return \"ON CONFLICT(%s) DO UPDATE SET %s\" % (\n428                 \", \".join(map(self.quote_name, unique_fields)),\n429                 \", \".join(\n430                     [\n431                         f\"{field} = EXCLUDED.{field}\"\n432                         for field in map(self.quote_name, update_fields)\n433                     ]\n434                 ),\n435             )\n436         return super().on_conflict_suffix_sql(\n",
            "lines": "427, 428, 429, 430, 431, 432, 433, 434, 435",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.sqlite3.operations",
            "project_package": "django.db.backends.sqlite3",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187616,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.sqlite3",
            "module": "schema",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/sqlite3/schema.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "246         self.execute(\n247             \"INSERT INTO %s (%s) SELECT %s FROM %s\"\n248             % (\n249                 self.quote_name(new_model._meta.db_table),\n250                 \", \".join(self.quote_name(x) for x in mapping),\n251                 \", \".join(mapping.values()),\n252                 self.quote_name(model._meta.db_table),\n253             )\n254         )\n",
            "lines": "247, 248, 249, 250, 251, 252, 253",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.sqlite3.schema",
            "project_package": "django.db.backends.sqlite3",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187617,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.backends.sqlite3",
            "module": "schema",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/backends/sqlite3/schema.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "446         self.execute(\n447             \"INSERT INTO %s (%s) SELECT %s FROM %s\"\n448             % (\n449                 self.quote_name(new_field.remote_field.through._meta.db_table),\n450                 \", \".join(\n451                     [\n452                         \"id\",\n453                         new_field.m2m_column_name(),\n454                         new_field.m2m_reverse_name(),\n455                     ]\n456                 ),\n457                 \", \".join(\n458                     [\n459                         \"id\",\n460                         old_field.m2m_column_name(),\n461                         old_field.m2m_reverse_name(),\n462                     ]\n463                 ),\n464                 self.quote_name(old_field.remote_field.through._meta.db_table),\n465             )\n466         )\n",
            "lines": "447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.backends.sqlite3.schema",
            "project_package": "django.db.backends.sqlite3",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187618,
            "report": 1379,
            "description": "Use of possibly insecure function - consider using safer ast.literal_eval.",
            "true_positive": null,
            "verified": false,
            "package": "db.migrations",
            "module": "questioner",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/migrations/questioner.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval",
            "test_id": "B307",
            "test_name": "blacklist",
            "code": "161                 try:\n162                     return eval(code, {}, {\"datetime\": datetime, \"timezone\": timezone})\n163                 except (SyntaxError, NameError) as e:\n",
            "lines": "162",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "db.migrations.questioner",
            "project_package": "django.db.migrations",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187619,
            "report": 1379,
            "description": "Use of extra potential SQL attack vector.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.fields",
            "module": "related_descriptors",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/fields/related_descriptors.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b610_django_extra_used.html",
            "test_id": "B610",
            "test_name": "django_extra_used",
            "code": "1170             qn = connection.ops.quote_name\n1171             queryset = queryset.extra(\n1172                 select={\n1173                     \"_prefetch_related_val_%s\"\n1174                     % f.attname: \"%s.%s\"\n1175                     % (qn(join_table), qn(f.column))\n1176                     for f in fk.local_related_fields\n1177                 }\n1178             )\n1179             return (\n",
            "lines": "1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.fields.related_descriptors",
            "project_package": "django.db.models.fields",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187620,
            "report": 1379,
            "description": "Use of RawSQL potential SQL attack vector.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b611_django_rawsql_used.html",
            "test_id": "B611",
            "test_name": "django_rawsql_used",
            "code": "252             annotations[alias] = select_idx\n253             select.append((RawSQL(sql, params), alias))\n254             select_idx += 1\n",
            "lines": "253",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187621,
            "report": 1379,
            "description": "Use of RawSQL potential SQL attack vector.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b611_django_rawsql_used.html",
            "test_id": "B611",
            "test_name": "django_rawsql_used",
            "code": "410                     OrderBy(\n411                         RawSQL(\n412                             \"%s.%s\" % (self.quote_name_unless_alias(table), col), []\n413                         ),\n414                         descending=descending,\n",
            "lines": "411, 412, 413",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187622,
            "report": 1379,
            "description": "Use of RawSQL potential SQL attack vector.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b611_django_rawsql_used.html",
            "test_id": "B611",
            "test_name": "django_rawsql_used",
            "code": "423                         OrderBy(\n424                             Ref(col, RawSQL(*self.query.extra[col])),\n425                             descending=descending,\n",
            "lines": "424",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187623,
            "report": 1379,
            "description": "Use of RawSQL potential SQL attack vector.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b611_django_rawsql_used.html",
            "test_id": "B611",
            "test_name": "django_rawsql_used",
            "code": "430                     yield (\n431                         OrderBy(RawSQL(*self.query.extra[col]), descending=descending),\n432                         False,\n",
            "lines": "431",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187624,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "591                     if not features.supports_parentheses_in_compound:\n592                         part_sql = \"SELECT * FROM ({})\".format(part_sql)\n593                     # Add parentheses when combining with compound query if not\n",
            "lines": "592",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187625,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "939                         sub_params.extend(subparams)\n940                 return \"SELECT %s FROM (%s) subquery\" % (\n941                     \", \".join(sub_selects),\n942                     \" \".join(result),\n943                 ), tuple(sub_params + params)\n944 \n",
            "lines": "940, 941, 942, 943",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187626,
            "report": 1379,
            "description": "Use of RawSQL potential SQL attack vector.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b611_django_rawsql_used.html",
            "test_id": "B611",
            "test_name": "django_rawsql_used",
            "code": "1604             rhs = \"%s.%s\" % (qn(alias), qn2(columns[index]))\n1605             self.query.where.add(RawSQL(\"%s = %s\" % (lhs_sql, rhs), lhs_params), AND)\n1606 \n",
            "lines": "1605",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187627,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "1885     def _as_sql(self, query):\n1886         delete = \"DELETE FROM %s\" % self.quote_name_unless_alias(query.base_table)\n1887         try:\n",
            "lines": "1886",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187628,
            "report": 1379,
            "description": "Use of RawSQL potential SQL attack vector.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b611_django_rawsql_used.html",
            "test_id": "B611",
            "test_name": "django_rawsql_used",
            "code": "1912             sql, params = innerq.get_compiler(connection=self.connection).as_sql()\n1913             innerq = RawSQL(\"SELECT * FROM (%s) subquery\" % sql, params)\n1914         outerq.add_filter(\"pk__in\", innerq)\n",
            "lines": "1913",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187629,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "1912             sql, params = innerq.get_compiler(connection=self.connection).as_sql()\n1913             innerq = RawSQL(\"SELECT * FROM (%s) subquery\" % sql, params)\n1914         outerq.add_filter(\"pk__in\", innerq)\n",
            "lines": "1913",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187630,
            "report": 1379,
            "description": "Possible SQL injection vector through string-based query construction.",
            "true_positive": null,
            "verified": false,
            "package": "db.models.sql",
            "module": "compiler",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/db/models/sql/compiler.py",
            "score": 1,
            "confidence": "low",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions",
            "code": "2087         ).as_sql(with_col_aliases=True)\n2088         sql = \"SELECT %s FROM (%s) subquery\" % (sql, inner_query_sql)\n2089         params += inner_query_params\n",
            "lines": "2088",
            "cwe_id": "CWE-89",
            "project": "django",
            "source": "Direct",
            "package_module": "db.models.sql.compiler",
            "project_package": "django.db.models.sql",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187631,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "forms",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/forms/utils.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "54         context = context or self.get_context()\n55         return mark_safe(renderer.render(template, context))\n56 \n",
            "lines": "55",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "forms.utils",
            "project_package": "django.forms",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187632,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "forms",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/forms/utils.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "54         context = context or self.get_context()\n55         return mark_safe(renderer.render(template, context))\n56 \n",
            "lines": "55",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "forms.utils",
            "project_package": "django.forms",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187633,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "forms",
            "module": "widgets",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/forms/widgets.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "93     def render(self):\n94         return mark_safe(\n95             \"\\n\".join(\n96                 chain.from_iterable(\n97                     getattr(self, \"render_\" + name)() for name in MEDIA_TYPES\n98                 )\n99             )\n100         )\n101 \n",
            "lines": "94, 95, 96, 97, 98, 99, 100",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "forms.widgets",
            "project_package": "django.forms",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187634,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "forms",
            "module": "widgets",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/forms/widgets.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "93     def render(self):\n94         return mark_safe(\n95             \"\\n\".join(\n96                 chain.from_iterable(\n97                     getattr(self, \"render_\" + name)() for name in MEDIA_TYPES\n98                 )\n99             )\n100         )\n101 \n",
            "lines": "94, 95, 96, 97, 98, 99, 100",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "forms.widgets",
            "project_package": "django.forms",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187635,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "forms",
            "module": "widgets",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/forms/widgets.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "283             renderer = get_default_renderer()\n284         return mark_safe(renderer.render(template_name, context))\n285 \n",
            "lines": "284",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "forms.widgets",
            "project_package": "django.forms",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187636,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "forms",
            "module": "widgets",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/forms/widgets.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "283             renderer = get_default_renderer()\n284         return mark_safe(renderer.render(template_name, context))\n285 \n",
            "lines": "284",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "forms.widgets",
            "project_package": "django.forms",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187637,
            "report": 1379,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "http",
            "module": "response",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/http/response.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "329                 closer()\n330             except Exception:\n331                 pass\n332         # Free resources that were still referenced.\n",
            "lines": "330, 331",
            "cwe_id": "CWE-703",
            "project": "django",
            "source": "Direct",
            "package_module": "http.response",
            "project_package": "django.http",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187638,
            "report": 1379,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "http",
            "module": "response",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/http/response.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "404                     value.close()\n405                 except Exception:\n406                     pass\n407         else:\n",
            "lines": "405, 406",
            "cwe_id": "CWE-703",
            "project": "django",
            "source": "Direct",
            "package_module": "http.response",
            "project_package": "django.http",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187639,
            "report": 1379,
            "description": "Possible hardcoded password: 'CSRF token missing.'",
            "true_positive": null,
            "verified": false,
            "package": "middleware",
            "module": "csrf",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/middleware/csrf.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "32 REASON_NO_CSRF_COOKIE = \"CSRF cookie not set.\"\n33 REASON_CSRF_TOKEN_MISSING = \"CSRF token missing.\"\n34 REASON_MALFORMED_REFERER = \"Referer checking failed - Referer is malformed.\"\n",
            "lines": "33",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "middleware.csrf",
            "project_package": "django.middleware",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187640,
            "report": 1379,
            "description": "Possible hardcoded password: 'POST'",
            "true_positive": null,
            "verified": false,
            "package": "middleware",
            "module": "csrf",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/middleware/csrf.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "342     def _bad_token_message(self, reason, token_source):\n343         if token_source != \"POST\":\n344             # Assume it is a settings.CSRF_HEADER_NAME value.\n",
            "lines": "343",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "middleware.csrf",
            "project_package": "django.middleware",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187641,
            "report": 1379,
            "description": "Possible hardcoded password: ''",
            "true_positive": null,
            "verified": false,
            "package": "middleware",
            "module": "csrf",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/middleware/csrf.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "364         # Check non-cookie token for match.\n365         request_csrf_token = \"\"\n366         if request.method == \"POST\":\n",
            "lines": "365",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "middleware.csrf",
            "project_package": "django.middleware",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187642,
            "report": 1379,
            "description": "Possible hardcoded password: ''",
            "true_positive": null,
            "verified": false,
            "package": "middleware",
            "module": "csrf",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/middleware/csrf.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "375 \n376         if request_csrf_token == \"\":\n377             # Fall back to X-CSRFToken, to make things easier for AJAX, and\n",
            "lines": "376",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "middleware.csrf",
            "project_package": "django.middleware",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187643,
            "report": 1379,
            "description": "Possible hardcoded password: 'POST'",
            "true_positive": null,
            "verified": false,
            "package": "middleware",
            "module": "csrf",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/middleware/csrf.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "388         else:\n389             token_source = \"POST\"\n390 \n",
            "lines": "389",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "middleware.csrf",
            "project_package": "django.middleware",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187644,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/base.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "728                 if not lookup:\n729                     arg_vals.append(mark_safe(arg))\n730                 else:\n",
            "lines": "729",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.base",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187645,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/base.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "728                 if not lookup:\n729                     arg_vals.append(mark_safe(arg))\n730                 else:\n",
            "lines": "729",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.base",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187646,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/base.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "738             if getattr(func, \"is_safe\", False) and isinstance(obj, SafeData):\n739                 obj = mark_safe(new_obj)\n740             else:\n",
            "lines": "739",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.base",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187647,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/base.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "738             if getattr(func, \"is_safe\", False) and isinstance(obj, SafeData):\n739                 obj = mark_safe(new_obj)\n740             else:\n",
            "lines": "739",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.base",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187648,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/base.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "826             try:\n827                 self.literal = mark_safe(unescape_string_literal(var))\n828             except ValueError:\n",
            "lines": "827",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.base",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187649,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/base.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "826             try:\n827                 self.literal = mark_safe(unescape_string_literal(var))\n828             except ValueError:\n",
            "lines": "827",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.base",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187650,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/base.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "848             msgid = value.replace(\"%\", \"%%\")\n849             msgid = mark_safe(msgid) if is_safe else msgid\n850             if self.message_context:\n",
            "lines": "849",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.base",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187651,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/base.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "848             msgid = value.replace(\"%\", \"%%\")\n849             msgid = mark_safe(msgid) if is_safe else msgid\n850             if self.message_context:\n",
            "lines": "849",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.base",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187652,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "base",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/base.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "999     def render(self, context):\n1000         return SafeString(\"\".join([node.render_annotated(context) for node in self]))\n1001 \n",
            "lines": "1000",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.base",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187653,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "50         if isinstance(first, SafeData) and getattr(unwrap(func), \"is_safe\", False):\n51             result = mark_safe(result)\n52         return result\n",
            "lines": "51",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187654,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "50         if isinstance(first, SafeData) and getattr(unwrap(func), \"is_safe\", False):\n51             result = mark_safe(result)\n52         return result\n",
            "lines": "51",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187655,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "172     if not m and p <= 0:\n173         return mark_safe(\n174             formats.number_format(\n175                 \"%d\" % (int(d)),\n176                 0,\n177                 use_l10n=use_l10n,\n178                 force_grouping=force_grouping,\n179             )\n180         )\n181 \n",
            "lines": "173, 174, 175, 176, 177, 178, 179, 180",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187656,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "172     if not m and p <= 0:\n173         return mark_safe(\n174             formats.number_format(\n175                 \"%d\" % (int(d)),\n176                 0,\n177                 use_l10n=use_l10n,\n178                 force_grouping=force_grouping,\n179             )\n180         )\n181 \n",
            "lines": "173, 174, 175, 176, 177, 178, 179, 180",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187657,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "200     number = \"\".join(reversed(digits))\n201     return mark_safe(\n202         formats.number_format(\n203             number,\n204             abs(p),\n205             use_l10n=use_l10n,\n206             force_grouping=force_grouping,\n207         )\n208     )\n209 \n",
            "lines": "201, 202, 203, 204, 205, 206, 207, 208",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187658,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "200     number = \"\".join(reversed(digits))\n201     return mark_safe(\n202         formats.number_format(\n203             number,\n204             abs(p),\n205             use_l10n=use_l10n,\n206             force_grouping=force_grouping,\n207         )\n208     )\n209 \n",
            "lines": "201, 202, 203, 204, 205, 206, 207, 208",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187659,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "231             lines[i] = (\"%0\" + width + \"d. %s\") % (i + 1, escape(line))\n232     return mark_safe(\"\\n\".join(lines))\n233 \n",
            "lines": "232",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187660,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "231             lines[i] = (\"%0\" + width + \"d. %s\") % (i + 1, escape(line))\n232     return mark_safe(\"\\n\".join(lines))\n233 \n",
            "lines": "232",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187661,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "372     \"\"\"Convert URLs in plain text into clickable links.\"\"\"\n373     return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))\n374 \n",
            "lines": "373",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187662,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "372     \"\"\"Convert URLs in plain text into clickable links.\"\"\"\n373     return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))\n374 \n",
            "lines": "373",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187663,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "384     \"\"\"\n385     return mark_safe(\n386         _urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape)\n387     )\n388 \n",
            "lines": "385, 386, 387",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187664,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "384     \"\"\"\n385     return mark_safe(\n386         _urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape)\n387     )\n388 \n",
            "lines": "385, 386, 387",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187665,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "431     if safe and arg != \";\":\n432         return mark_safe(value)\n433     return value\n",
            "lines": "432",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187666,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "431     if safe and arg != \";\":\n432         return mark_safe(value)\n433     return value\n",
            "lines": "432",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187667,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "477     autoescape = autoescape and not isinstance(value, SafeData)\n478     return mark_safe(linebreaks(value, autoescape))\n479 \n",
            "lines": "478",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187668,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "477     autoescape = autoescape and not isinstance(value, SafeData)\n478     return mark_safe(linebreaks(value, autoescape))\n479 \n",
            "lines": "478",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187669,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "491         value = escape(value)\n492     return mark_safe(value.replace(\"\\n\", \"<br>\"))\n493 \n",
            "lines": "492",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187670,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "491         value = escape(value)\n492     return mark_safe(value.replace(\"\\n\", \"<br>\"))\n493 \n",
            "lines": "492",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187671,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "498     \"\"\"Mark the value as a string that should not be auto-escaped.\"\"\"\n499     return mark_safe(value)\n500 \n",
            "lines": "499",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187672,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "498     \"\"\"Mark the value as a string that should not be auto-escaped.\"\"\"\n499     return mark_safe(value)\n500 \n",
            "lines": "499",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187673,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "508     \"\"\"\n509     return [mark_safe(obj) for obj in value]\n510 \n",
            "lines": "509",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187674,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "508     \"\"\"\n509     return [mark_safe(obj) for obj in value]\n510 \n",
            "lines": "509",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187675,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "604         return value\n605     return mark_safe(data)\n606 \n",
            "lines": "605",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187676,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "604         return value\n605     return mark_safe(data)\n606 \n",
            "lines": "605",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187677,
            "report": 1379,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "643     try:\n644         return random_module.choice(value)\n645     except IndexError:\n",
            "lines": "644",
            "cwe_id": "CWE-330",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187678,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "734 \n735     return mark_safe(list_formatter(value))\n736 \n",
            "lines": "735",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187679,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaultfilters",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaultfilters.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "734 \n735     return mark_safe(list_formatter(value))\n736 \n",
            "lines": "735",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaultfilters",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187680,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaulttags",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaulttags.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "56         if self.setting:\n57             return mark_safe(output)\n58         else:\n",
            "lines": "57",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaulttags",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187681,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaulttags",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaulttags.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "56         if self.setting:\n57             return mark_safe(output)\n58         else:\n",
            "lines": "57",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaulttags",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187682,
            "report": 1379,
            "description": "Possible hardcoded password: 'NOTPROVIDED'",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaulttags",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaulttags.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "74         if csrf_token:\n75             if csrf_token == \"NOTPROVIDED\":\n76                 return format_html(\"\")\n",
            "lines": "75",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaulttags",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187683,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaulttags",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaulttags.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "248                     context.pop()\n249         return mark_safe(\"\".join(nodelist))\n250 \n",
            "lines": "249",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaulttags",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187684,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "defaulttags",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/defaulttags.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "248                     context.pop()\n249         return mark_safe(\"\".join(nodelist))\n250 \n",
            "lines": "249",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.defaulttags",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187685,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "loader_tags",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/loader_tags.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "80         ):\n81             return mark_safe(self.render(self.context))\n82         return \"\"\n",
            "lines": "81",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "template.loader_tags",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187686,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "loader_tags",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/loader_tags.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "80         ):\n81             return mark_safe(self.render(self.context))\n82         return \"\"\n",
            "lines": "81",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "template.loader_tags",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187687,
            "report": 1379,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "template.loaders",
            "module": "cached",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/loaders/cached.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "95     def generate_hash(self, values):\n96         return hashlib.sha1(\"|\".join(values).encode()).hexdigest()\n97 \n",
            "lines": "96",
            "cwe_id": "CWE-327",
            "project": "django",
            "source": "Direct",
            "package_module": "template.loaders.cached",
            "project_package": "django.template.loaders",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187688,
            "report": 1379,
            "description": "Possible hardcoded password: 'is'",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "smartif",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/smartif.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "164             token = tokens[i]\n165             if token == \"is\" and i + 1 < num_tokens and tokens[i + 1] == \"not\":\n166                 token = \"is not\"\n",
            "lines": "165",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "template.smartif",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187689,
            "report": 1379,
            "description": "Possible hardcoded password: 'is not'",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "smartif",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/smartif.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "165             if token == \"is\" and i + 1 < num_tokens and tokens[i + 1] == \"not\":\n166                 token = \"is not\"\n167                 i += 1  # skip 'not'\n",
            "lines": "166",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "template.smartif",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187690,
            "report": 1379,
            "description": "Possible hardcoded password: 'not'",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "smartif",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/smartif.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "167                 i += 1  # skip 'not'\n168             elif token == \"not\" and i + 1 < num_tokens and tokens[i + 1] == \"in\":\n169                 token = \"not in\"\n",
            "lines": "168",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "template.smartif",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187691,
            "report": 1379,
            "description": "Possible hardcoded password: 'not in'",
            "true_positive": null,
            "verified": false,
            "package": "template",
            "module": "smartif",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/template/smartif.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "168             elif token == \"not\" and i + 1 < num_tokens and tokens[i + 1] == \"in\":\n169                 token = \"not in\"\n170                 i += 1  # skip 'in'\n",
            "lines": "169",
            "cwe_id": "CWE-259",
            "project": "django",
            "source": "Direct",
            "package_module": "template.smartif",
            "project_package": "django.template",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187692,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "templatetags",
            "module": "i18n",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/templatetags/i18n.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "95         value = value.replace(\"%%\", \"%\")\n96         value = mark_safe(value) if is_safe else value\n97         if self.asvar:\n",
            "lines": "96",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "templatetags.i18n",
            "project_package": "django.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187693,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "templatetags",
            "module": "i18n",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/templatetags/i18n.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "95         value = value.replace(\"%%\", \"%\")\n96         value = mark_safe(value) if is_safe else value\n97         if self.asvar:\n",
            "lines": "96",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "templatetags.i18n",
            "project_package": "django.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187694,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "templatetags",
            "module": "i18n",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/templatetags/i18n.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "200         if self.asvar:\n201             context[self.asvar] = SafeString(result)\n202             return \"\"\n",
            "lines": "201",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "templatetags.i18n",
            "project_package": "django.templatetags",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187695,
            "report": 1379,
            "description": "Consider possible security implications associated with pickle module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "runner",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/test/runner.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle",
            "test_id": "B403",
            "test_name": "blacklist",
            "code": "9 import os\n10 import pickle\n11 import random\n",
            "lines": "10",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "test.runner",
            "project_package": "django.test",
            "project_version": "5.0.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 187696,
            "report": 1379,
            "description": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "runner",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/test/runner.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle",
            "test_id": "B301",
            "test_name": "blacklist",
            "code": "184         \"\"\"\n185         pickle.loads(pickle.dumps(obj))\n186 \n",
            "lines": "185",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "test.runner",
            "project_package": "django.test",
            "project_version": "5.0.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 187697,
            "report": 1379,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "runner",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/test/runner.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "598             # Limit seeds to 10 digits for simpler output.\n599             seed = random.randint(0, 10**10 - 1)\n600             seed_source = \"generated\"\n",
            "lines": "599",
            "cwe_id": "CWE-330",
            "project": "django",
            "source": "Direct",
            "package_module": "test.runner",
            "project_package": "django.test",
            "project_version": "5.0.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 187698,
            "report": 1379,
            "description": "Possible binding to all interfaces.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "selenium",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/test/selenium.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html",
            "test_id": "B104",
            "test_name": "hardcoded_bind_all_interfaces",
            "code": "41             # Listen on an external interface if using a selenium hub.\n42             host = test_class.host if not test_class.selenium_hub else \"0.0.0.0\"\n43             test_class.host = host\n",
            "lines": "42",
            "cwe_id": "CWE-605",
            "project": "django",
            "source": "Direct",
            "package_module": "test.selenium",
            "project_package": "django.test",
            "project_version": "5.0.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 187699,
            "report": 1379,
            "description": "Using Node to parse untrusted XML data is known to be vulnerable to XML attacks. Replace Node with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/test/utils.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b408-import-xml-minidom",
            "test_id": "B408",
            "test_name": "blacklist",
            "code": "13 from unittest import TestCase, skipIf, skipUnless\n14 from xml.dom.minidom import Node, parseString\n15 \n",
            "lines": "14",
            "cwe_id": "CWE-20",
            "project": "django",
            "source": "Direct",
            "package_module": "test.utils",
            "project_package": "django.test",
            "project_version": "5.0.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 187700,
            "report": 1379,
            "description": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/test/utils.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
            "test_id": "B318",
            "test_name": "blacklist",
            "code": "683     # Parse the want and got strings, and compare the parsings.\n684     want_root = first_node(parseString(want))\n685     got_root = first_node(parseString(got))\n",
            "lines": "684",
            "cwe_id": "CWE-20",
            "project": "django",
            "source": "Direct",
            "package_module": "test.utils",
            "project_package": "django.test",
            "project_version": "5.0.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 187701,
            "report": 1379,
            "description": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/test/utils.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
            "test_id": "B318",
            "test_name": "blacklist",
            "code": "684     want_root = first_node(parseString(want))\n685     got_root = first_node(parseString(got))\n686 \n",
            "lines": "685",
            "cwe_id": "CWE-20",
            "project": "django",
            "source": "Direct",
            "package_module": "test.utils",
            "project_package": "django.test",
            "project_version": "5.0.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 187702,
            "report": 1379,
            "description": "Consider possible security implications associated with PicklingError module.",
            "true_positive": null,
            "verified": false,
            "package": "urls",
            "module": "resolvers",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/urls/resolvers.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle",
            "test_id": "B403",
            "test_name": "blacklist",
            "code": "13 from importlib import import_module\n14 from pickle import PicklingError\n15 from urllib.parse import quote\n",
            "lines": "14",
            "cwe_id": "CWE-502",
            "project": "django",
            "source": "Direct",
            "package_module": "urls.resolvers",
            "project_package": "django.urls",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187703,
            "report": 1379,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "autoreload",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/autoreload.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "4 import signal\n5 import subprocess\n6 import sys\n",
            "lines": "5",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.autoreload",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187704,
            "report": 1379,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "autoreload",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/autoreload.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "273     while True:\n274         p = subprocess.run(args, env=new_environ, close_fds=False)\n275         if p.returncode != 3:\n",
            "lines": "274",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.autoreload",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187705,
            "report": 1379,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "autoreload",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/autoreload.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "337             get_resolver().urlconf_module\n338         except Exception:\n339             # Loading the urlconf can result in errors during development.\n340             # If this occurs then swallow the error and continue.\n341             pass\n342         logger.debug(\"Apps ready_event triggered. Sending autoreload_started signal.\")\n",
            "lines": "338, 339, 340, 341",
            "cwe_id": "CWE-703",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.autoreload",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187706,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "49     \"\"\"\n50     return SafeString(html.escape(str(text)))\n51 \n",
            "lines": "50",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187707,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "74     \"\"\"Hex encode characters for use in JavaScript strings.\"\"\"\n75     return mark_safe(str(value).translate(_js_escapes))\n76 \n",
            "lines": "75",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187708,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "74     \"\"\"Hex encode characters for use in JavaScript strings.\"\"\"\n75     return mark_safe(str(value).translate(_js_escapes))\n76 \n",
            "lines": "75",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187709,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "97         template = '<script id=\"{}\" type=\"application/json\">{}</script>'\n98         args = (element_id, mark_safe(json_str))\n99     else:\n",
            "lines": "98",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187710,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "97         template = '<script id=\"{}\" type=\"application/json\">{}</script>'\n98         args = (element_id, mark_safe(json_str))\n99     else:\n",
            "lines": "98",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187711,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "100         template = '<script type=\"application/json\">{}</script>'\n101         args = (mark_safe(json_str),)\n102     return format_html(template, *args)\n",
            "lines": "101",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187712,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "100         template = '<script type=\"application/json\">{}</script>'\n101         args = (mark_safe(json_str),)\n102     return format_html(template, *args)\n",
            "lines": "101",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187713,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "134     kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}\n135     return mark_safe(format_string.format(*args_safe, **kwargs_safe))\n136 \n",
            "lines": "135",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187714,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "134     kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}\n135     return mark_safe(format_string.format(*args_safe, **kwargs_safe))\n136 \n",
            "lines": "135",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187715,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "151     \"\"\"\n152     return mark_safe(\n153         conditional_escape(sep).join(\n154             format_html(format_string, *args) for args in args_generator\n155         )\n156     )\n157 \n",
            "lines": "152, 153, 154, 155, 156",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187716,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "151     \"\"\"\n152     return mark_safe(\n153         conditional_escape(sep).join(\n154             format_html(format_string, *args) for args in args_generator\n155         )\n156     )\n157 \n",
            "lines": "152, 153, 154, 155, 156",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187717,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "345                 )\n346                 return mark_safe(f\"{lead}{middle}{trail}\")\n347             else:\n",
            "lines": "346",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187718,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "345                 )\n346                 return mark_safe(f\"{lead}{middle}{trail}\")\n347             else:\n",
            "lines": "346",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187719,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "348                 if safe_input:\n349                     return mark_safe(word)\n350                 elif autoescape:\n",
            "lines": "349",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187720,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "348                 if safe_input:\n349                     return mark_safe(word)\n350                 elif autoescape:\n",
            "lines": "349",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187721,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "352         elif safe_input:\n353             return mark_safe(word)\n354         elif autoescape:\n",
            "lines": "353",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187722,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "352         elif safe_input:\n353             return mark_safe(word)\n354         elif autoescape:\n",
            "lines": "353",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187723,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "449     klass_str = klass.__str__\n450     klass.__str__ = lambda self: mark_safe(klass_str(self))\n451     klass.__html__ = lambda self: str(self)\n",
            "lines": "450",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187724,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "html",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/html.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "449     klass_str = klass.__str__\n450     klass.__str__ = lambda self: mark_safe(klass_str(self))\n451     klass.__html__ = lambda self: str(self)\n",
            "lines": "450",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.html",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187725,
            "report": 1379,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "http",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/http.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "143         return parse_http_date(date)\n144     except Exception:\n145         pass\n146 \n",
            "lines": "144, 145",
            "cwe_id": "CWE-703",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.http",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187726,
            "report": 1379,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "lorem_ipsum",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/lorem_ipsum.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "234     sections = [\n235         \" \".join(random.sample(WORDS, random.randint(3, 12)))\n236         for i in range(random.randint(1, 5))\n",
            "lines": "235",
            "cwe_id": "CWE-330",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.lorem_ipsum",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187727,
            "report": 1379,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "lorem_ipsum",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/lorem_ipsum.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "235         \" \".join(random.sample(WORDS, random.randint(3, 12)))\n236         for i in range(random.randint(1, 5))\n237     ]\n",
            "lines": "236",
            "cwe_id": "CWE-330",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.lorem_ipsum",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187728,
            "report": 1379,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "lorem_ipsum",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/lorem_ipsum.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "239     # Convert to sentence case and add end punctuation.\n240     return \"%s%s%s\" % (s[0].upper(), s[1:], random.choice(\"?.\"))\n241 \n",
            "lines": "240",
            "cwe_id": "CWE-330",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.lorem_ipsum",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187729,
            "report": 1379,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "lorem_ipsum",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/lorem_ipsum.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "248     \"\"\"\n249     return \" \".join(sentence() for i in range(random.randint(1, 4)))\n250 \n",
            "lines": "249",
            "cwe_id": "CWE-330",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.lorem_ipsum",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187730,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "numberformat",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/numberformat.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "28     if number is None or number == \"\":\n29         return mark_safe(number)\n30     if use_l10n is None:\n",
            "lines": "29",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.numberformat",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187731,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "numberformat",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/numberformat.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "28     if number is None or number == \"\":\n29         return mark_safe(number)\n30     if use_l10n is None:\n",
            "lines": "29",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.numberformat",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187732,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "numberformat",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/numberformat.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "36     if isinstance(number, int) and not use_grouping and not decimal_pos:\n37         return mark_safe(number)\n38     # sign\n",
            "lines": "37",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.numberformat",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187733,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "numberformat",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/numberformat.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "36     if isinstance(number, int) and not use_grouping and not decimal_pos:\n37         return mark_safe(number)\n38     # sign\n",
            "lines": "37",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.numberformat",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187734,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils.translation",
            "module": "trans_real",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/translation/trans_real.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "389     if isinstance(message, SafeData):\n390         return mark_safe(result)\n391 \n",
            "lines": "390",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.translation.trans_real",
            "project_package": "django.utils.translation",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187735,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils.translation",
            "module": "trans_real",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/translation/trans_real.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "389     if isinstance(message, SafeData):\n390         return mark_safe(result)\n391 \n",
            "lines": "390",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.translation.trans_real",
            "project_package": "django.utils.translation",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187736,
            "report": 1379,
            "description": "Potential XSS on mark_safe function.",
            "true_positive": null,
            "verified": false,
            "package": "utils.translation",
            "module": "trans_real",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/translation/trans_real.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html",
            "test_id": "B703",
            "test_name": "django_mark_safe",
            "code": "401     elif isinstance(message, SafeData):\n402         result = mark_safe(result)\n403     return result\n",
            "lines": "402",
            "cwe_id": "CWE-80",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.translation.trans_real",
            "project_package": "django.utils.translation",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B7"
        },
        {
            "id": 187737,
            "report": 1379,
            "description": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
            "true_positive": null,
            "verified": false,
            "package": "utils.translation",
            "module": "trans_real",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/translation/trans_real.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe",
            "test_id": "B308",
            "test_name": "blacklist",
            "code": "401     elif isinstance(message, SafeData):\n402         result = mark_safe(result)\n403     return result\n",
            "lines": "402",
            "cwe_id": "CWE-79",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.translation.trans_real",
            "project_package": "django.utils.translation",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187738,
            "report": 1379,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "version",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/version.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "3 import os\n4 import subprocess\n5 import sys\n",
            "lines": "4",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.version",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 187739,
            "report": 1379,
            "description": "Starting a process with a partial executable path",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "version",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/version.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html",
            "test_id": "B607",
            "test_name": "start_process_with_partial_path",
            "code": "87     repo_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n88     git_log = subprocess.run(\n89         \"git log --pretty=format:%ct --quiet -1 HEAD\",\n90         capture_output=True,\n91         shell=True,\n92         cwd=repo_dir,\n93         text=True,\n94     )\n95     timestamp = git_log.stdout\n",
            "lines": "88, 89, 90, 91, 92, 93, 94",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.version",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187740,
            "report": 1379,
            "description": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "version",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/version.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html",
            "test_id": "B602",
            "test_name": "subprocess_popen_with_shell_equals_true",
            "code": "90         capture_output=True,\n91         shell=True,\n92         cwd=repo_dir,\n93         text=True,\n94     )\n95     timestamp = git_log.stdout\n96     tz = datetime.timezone.utc\n97     try:\n98         timestamp = datetime.datetime.fromtimestamp(int(timestamp), tz=tz)\n",
            "lines": "88, 89, 90, 91, 92, 93, 94",
            "cwe_id": "CWE-78",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.version",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 187741,
            "report": 1379,
            "description": "Using XMLGenerator to parse untrusted XML data is known to be vulnerable to XML attacks. Replace XMLGenerator with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
            "true_positive": null,
            "verified": false,
            "package": "utils",
            "module": "xmlutils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/django/django/utils/xmlutils.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b406-import-xml-sax",
            "test_id": "B406",
            "test_name": "blacklist",
            "code": "5 import re\n6 from xml.sax.saxutils import XMLGenerator\n7 \n",
            "lines": "6",
            "cwe_id": "CWE-20",
            "project": "django",
            "source": "Direct",
            "package_module": "utils.xmlutils",
            "project_package": "django.utils",
            "project_version": "5.0.3",
            "is_test": false,
            "test_category": "B4"
        }
    ],
    "pypi:flask": [
        {
            "id": 187334,
            "report": 1324,
            "description": "Use of possibly insecure function - consider using safer ast.literal_eval.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "cli",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/flask/src/flask/cli.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval",
            "test_id": "B307",
            "test_name": "blacklist",
            "code": "1006         with open(startup) as f:\n1007             eval(compile(f.read(), startup, \"exec\"), ctx)\n1008 \n",
            "lines": "1007",
            "cwe_id": "CWE-78",
            "project": "flask",
            "source": "Direct",
            "package_module": "cli",
            "project_package": "flask",
            "project_version": "3.0.2",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 187335,
            "report": 1324,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "config",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/flask/src/flask/config.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "164                 value = loads(value)\n165             except Exception:\n166                 # Keep the value as a string if loading failed.\n167                 pass\n168 \n",
            "lines": "165, 166, 167",
            "cwe_id": "CWE-703",
            "project": "flask",
            "source": "Direct",
            "package_module": "config",
            "project_package": "flask",
            "project_version": "3.0.2",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 187336,
            "report": 1324,
            "description": "Use of exec detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "config",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/flask/src/flask/config.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html",
            "test_id": "B102",
            "test_name": "exec_used",
            "code": "213             with open(filename, mode=\"rb\") as config_file:\n214                 exec(compile(config_file.read(), filename, \"exec\"), d.__dict__)\n215         except OSError as e:\n",
            "lines": "214",
            "cwe_id": "CWE-78",
            "project": "flask",
            "source": "Direct",
            "package_module": "config",
            "project_package": "flask",
            "project_version": "3.0.2",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 270239,
            "report": 1849,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_compat",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_compat.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "69             self.detach()\n70         except Exception:\n71             pass\n72 \n",
            "lines": "70, 71",
            "cwe_id": "CWE-703",
            "project": "click",
            "source": "Indirect",
            "package_module": "_compat",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 270240,
            "report": 1849,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_compat",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_compat.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "162             return False\n163         except Exception:\n164             pass\n165         return default\n",
            "lines": "163, 164",
            "cwe_id": "CWE-703",
            "project": "click",
            "source": "Indirect",
            "package_module": "_compat",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 270241,
            "report": 1849,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_compat",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_compat.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "430             os.path.dirname(filename),\n431             f\".__atomic-write{random.randrange(1 << 32):08x}\",\n432         )\n",
            "lines": "431",
            "cwe_id": "CWE-330",
            "project": "click",
            "source": "Indirect",
            "package_module": "_compat",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 270242,
            "report": 1849,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_compat",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_compat.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "550             _ansi_stream_wrappers[stream] = rv\n551         except Exception:\n552             pass\n553 \n",
            "lines": "551, 552",
            "cwe_id": "CWE-703",
            "project": "click",
            "source": "Indirect",
            "package_module": "_compat",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 270243,
            "report": 1849,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_compat",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_compat.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "598             cache[stream] = rv\n599         except Exception:\n600             pass\n601         return rv\n",
            "lines": "599, 600",
            "cwe_id": "CWE-703",
            "project": "click",
            "source": "Indirect",
            "package_module": "_compat",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 270244,
            "report": 1849,
            "description": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html",
            "test_id": "B605",
            "test_name": "start_process_with_a_shell",
            "code": "379         return _tempfilepager(generator, \"more <\", color)\n380     if hasattr(os, \"system\") and os.system(\"(less) 2>/dev/null\") == 0:\n381         return _pipepager(generator, \"less\", color)\n",
            "lines": "380",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270245,
            "report": 1849,
            "description": "Starting a process with a partial executable path",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html",
            "test_id": "B607",
            "test_name": "start_process_with_partial_path",
            "code": "379         return _tempfilepager(generator, \"more <\", color)\n380     if hasattr(os, \"system\") and os.system(\"(less) 2>/dev/null\") == 0:\n381         return _pipepager(generator, \"less\", color)\n",
            "lines": "380",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270246,
            "report": 1849,
            "description": "Starting a process with a shell, possible injection detected, security issue.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html",
            "test_id": "B605",
            "test_name": "start_process_with_a_shell",
            "code": "387     try:\n388         if hasattr(os, \"system\") and os.system(f'more \"{filename}\"') == 0:\n389             return _pipepager(generator, \"more\", color)\n",
            "lines": "388",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270247,
            "report": 1849,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "398     \"\"\"\n399     import subprocess\n400 \n",
            "lines": "399",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 270248,
            "report": 1849,
            "description": "subprocess call with shell=True identified, security issue.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html",
            "test_id": "B602",
            "test_name": "subprocess_popen_with_shell_equals_true",
            "code": "413 \n414     c = subprocess.Popen(cmd, shell=True, stdin=subprocess.PIPE, env=env)\n415     stdin = t.cast(t.BinaryIO, c.stdin)\n",
            "lines": "414",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270249,
            "report": 1849,
            "description": "Starting a process with a shell, possible injection detected, security issue.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html",
            "test_id": "B605",
            "test_name": "start_process_with_a_shell",
            "code": "459     try:\n460         os.system(f'{cmd} \"{filename}\"')\n461     finally:\n",
            "lines": "460",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270250,
            "report": 1849,
            "description": "Starting a process with a shell, possible injection detected, security issue.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html",
            "test_id": "B605",
            "test_name": "start_process_with_a_shell",
            "code": "498         for editor in \"sensible-editor\", \"vim\", \"nano\":\n499             if os.system(f\"which {editor} >/dev/null 2>&1\") == 0:\n500                 return editor\n",
            "lines": "499",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270251,
            "report": 1849,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "503     def edit_file(self, filename: str) -> None:\n504         import subprocess\n505 \n",
            "lines": "504",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 270252,
            "report": 1849,
            "description": "subprocess call with shell=True identified, security issue.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html",
            "test_id": "B602",
            "test_name": "subprocess_popen_with_shell_equals_true",
            "code": "513         try:\n514             c = subprocess.Popen(f'{editor} \"{filename}\"', env=environ, shell=True)\n515             exit_code = c.wait()\n",
            "lines": "514",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270253,
            "report": 1849,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "573 def open_url(url: str, wait: bool = False, locate: bool = False) -> int:\n574     import subprocess\n575 \n",
            "lines": "574",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 270254,
            "report": 1849,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "592         try:\n593             return subprocess.Popen(args, stderr=null).wait()\n594         finally:\n",
            "lines": "593",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270255,
            "report": 1849,
            "description": "Starting a process with a shell, possible injection detected, security issue.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html",
            "test_id": "B605",
            "test_name": "start_process_with_a_shell",
            "code": "603             args = f'start {wait_str} \"\" \"{url}\"'\n604         return os.system(args)\n605     elif CYGWIN:\n",
            "lines": "604",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270256,
            "report": 1849,
            "description": "Starting a process with a shell, possible injection detected, security issue.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html",
            "test_id": "B605",
            "test_name": "start_process_with_a_shell",
            "code": "612             args = f'cygstart {wait_str} \"{url}\"'\n613         return os.system(args)\n614 \n",
            "lines": "613",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270257,
            "report": 1849,
            "description": "Starting a process with a partial executable path",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html",
            "test_id": "B607",
            "test_name": "start_process_with_partial_path",
            "code": "619             url = _unquote_file(url)\n620         c = subprocess.Popen([\"xdg-open\", url])\n621         if wait:\n",
            "lines": "620",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270258,
            "report": 1849,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_termui_impl",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_termui_impl.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "619             url = _unquote_file(url)\n620         c = subprocess.Popen([\"xdg-open\", url])\n621         if wait:\n",
            "lines": "620",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "_termui_impl",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270259,
            "report": 1849,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_winconsole",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/_winconsole.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "194             self.flush()\n195         except Exception:\n196             pass\n197         return self.buffer.write(x)\n",
            "lines": "195, 196",
            "cwe_id": "CWE-703",
            "project": "click",
            "source": "Indirect",
            "package_module": "_winconsole",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 270260,
            "report": 1849,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "shell_completion",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/shell_completion.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "305     def _check_version() -> None:\n306         import subprocess\n307 \n",
            "lines": "306",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "shell_completion",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 270261,
            "report": 1849,
            "description": "Starting a process with a partial executable path",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "shell_completion",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/shell_completion.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html",
            "test_id": "B607",
            "test_name": "start_process_with_partial_path",
            "code": "307 \n308         output = subprocess.run(\n309             [\"bash\", \"-c\", 'echo \"${BASH_VERSION}\"'], stdout=subprocess.PIPE\n310         )\n311         match = re.search(r\"^(\\d+)\\.(\\d+)\\.\\d+\", output.stdout.decode())\n",
            "lines": "308, 309, 310",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "shell_completion",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270262,
            "report": 1849,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "shell_completion",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/shell_completion.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "307 \n308         output = subprocess.run(\n309             [\"bash\", \"-c\", 'echo \"${BASH_VERSION}\"'], stdout=subprocess.PIPE\n310         )\n311         match = re.search(r\"^(\\d+)\\.(\\d+)\\.\\d+\", output.stdout.decode())\n",
            "lines": "308, 309, 310",
            "cwe_id": "CWE-78",
            "project": "click",
            "source": "Indirect",
            "package_module": "shell_completion",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 270263,
            "report": 1849,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "testing",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/testing.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "325                         del os.environ[key]\n326                     except Exception:\n327                         pass\n328                 else:\n",
            "lines": "326, 327",
            "cwe_id": "CWE-703",
            "project": "click",
            "source": "Indirect",
            "package_module": "testing",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 270264,
            "report": 1849,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "testing",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/testing.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "335                         del os.environ[key]\n336                     except Exception:\n337                         pass\n338                 else:\n",
            "lines": "336, 337",
            "cwe_id": "CWE-703",
            "project": "click",
            "source": "Indirect",
            "package_module": "testing",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 270265,
            "report": 1849,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "utils",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/click/src/click/utils.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "38             return func(*args, **kwargs)\n39         except Exception:\n40             pass\n41         return None\n",
            "lines": "39, 40",
            "cwe_id": "CWE-703",
            "project": "click",
            "source": "Indirect",
            "package_module": "utils",
            "project_package": "click",
            "project_version": "8.1.7",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 270234,
            "report": 1812,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "timed",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/itsdangerous/src/itsdangerous/timed.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "119             ts_int = bytes_to_int(base64_decode(ts_bytes))\n120         except Exception:\n121             pass\n122 \n",
            "lines": "120, 121",
            "cwe_id": "CWE-703",
            "project": "itsdangerous",
            "source": "Indirect",
            "package_module": "timed",
            "project_package": "itsdangerous",
            "project_version": "2.1.2",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 272808,
            "report": 2061,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_reloader",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/_reloader.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "4 import os\n5 import subprocess\n6 import sys\n",
            "lines": "5",
            "cwe_id": "CWE-78",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "_reloader",
            "project_package": "werkzeug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 272809,
            "report": 2061,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "_reloader",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/_reloader.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "272             new_environ[\"WERKZEUG_RUN_MAIN\"] = \"true\"\n273             exit_code = subprocess.call(args, env=new_environ, close_fds=False)\n274 \n",
            "lines": "273",
            "cwe_id": "CWE-78",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "_reloader",
            "project_package": "werkzeug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 272810,
            "report": 2061,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "datastructures",
            "module": "file_storage",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/datastructures/file_storage.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "137             self.stream.close()\n138         except Exception:\n139             pass\n140 \n",
            "lines": "138, 139",
            "cwe_id": "CWE-703",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "datastructures.file_storage",
            "project_package": "werkzeug.datastructures",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 272811,
            "report": 2061,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "debug",
            "module": "__init__",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/debug/__init__.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "41 def hash_pin(pin: str) -> str:\n42     return hashlib.sha1(f\"{pin} added salt\".encode(\"utf-8\", \"replace\")).hexdigest()[:12]\n43 \n",
            "lines": "42",
            "cwe_id": "CWE-327",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "debug.__init__",
            "project_package": "werkzeug.debug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 272812,
            "report": 2061,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "debug",
            "module": "__init__",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/debug/__init__.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "84             # https://github.com/pallets/werkzeug/issues/925\n85             from subprocess import Popen, PIPE\n86 \n",
            "lines": "85",
            "cwe_id": "CWE-78",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "debug.__init__",
            "project_package": "werkzeug.debug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 272813,
            "report": 2061,
            "description": "Starting a process with a partial executable path",
            "true_positive": null,
            "verified": false,
            "package": "debug",
            "module": "__init__",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/debug/__init__.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html",
            "test_id": "B607",
            "test_name": "start_process_with_partial_path",
            "code": "86 \n87             dump = Popen(\n88                 [\"ioreg\", \"-c\", \"IOPlatformExpertDevice\", \"-d\", \"2\"], stdout=PIPE\n89             ).communicate()[0]\n90             match = re.search(b'\"serial-number\" = <([^>]+)', dump)\n",
            "lines": "87, 88, 89",
            "cwe_id": "CWE-78",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "debug.__init__",
            "project_package": "werkzeug.debug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 272814,
            "report": 2061,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "debug",
            "module": "__init__",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/debug/__init__.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "86 \n87             dump = Popen(\n88                 [\"ioreg\", \"-c\", \"IOPlatformExpertDevice\", \"-d\", \"2\"], stdout=PIPE\n89             ).communicate()[0]\n90             match = re.search(b'\"serial-number\" = <([^>]+)', dump)\n",
            "lines": "87, 88, 89",
            "cwe_id": "CWE-78",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "debug.__init__",
            "project_package": "werkzeug.debug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 272815,
            "report": 2061,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "debug",
            "module": "__init__",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/debug/__init__.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "190 \n191     h = hashlib.sha1()\n192     for bit in chain(probably_public_bits, private_bits):\n",
            "lines": "191",
            "cwe_id": "CWE-327",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "debug.__init__",
            "project_package": "werkzeug.debug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 272816,
            "report": 2061,
            "description": "Use of exec detected.",
            "true_positive": null,
            "verified": false,
            "package": "debug",
            "module": "console",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/debug/console.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html",
            "test_id": "B102",
            "test_name": "exec_used",
            "code": "176         try:\n177             exec(code, self.locals)\n178         except Exception:\n",
            "lines": "177",
            "cwe_id": "CWE-78",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "debug.console",
            "project_package": "werkzeug.debug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 272817,
            "report": 2061,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "debug",
            "module": "repr",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/debug/repr.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "260                     items.append((key, self.repr(getattr(obj, key))))\n261                 except Exception:\n262                     pass\n263             title = \"Details for\"\n",
            "lines": "261, 262",
            "cwe_id": "CWE-703",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "debug.repr",
            "project_package": "werkzeug.debug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 272818,
            "report": 2061,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "http",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/http.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "957     \"\"\"\n958     return sha1(data).hexdigest()\n959 \n",
            "lines": "958",
            "cwe_id": "CWE-327",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "http",
            "project_package": "werkzeug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 272819,
            "report": 2061,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "middleware",
            "module": "lint",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/middleware/lint.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "207                 )\n208             except Exception:\n209                 pass\n210 \n",
            "lines": "208, 209",
            "cwe_id": "CWE-703",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "middleware.lint",
            "project_package": "werkzeug.middleware",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 272820,
            "report": 2061,
            "description": "Use of exec detected.",
            "true_positive": null,
            "verified": false,
            "package": "routing",
            "module": "rules",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/routing/rules.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html",
            "test_id": "B102",
            "test_name": "exec_used",
            "code": "718         locs: dict[str, t.Any] = {}\n719         exec(code, globs, locs)\n720         return locs[name]  # type: ignore\n",
            "lines": "719",
            "cwe_id": "CWE-78",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "routing.rules",
            "project_package": "werkzeug.routing",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 272821,
            "report": 2061,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "serving",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/serving.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "378                 execute(InternalServerError())\n379             except Exception:\n380                 pass\n381 \n",
            "lines": "379, 380",
            "cwe_id": "CWE-703",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "serving",
            "project_package": "werkzeug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 272822,
            "report": 2061,
            "description": "Possible binding to all interfaces.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "serving",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/serving.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html",
            "test_id": "B104",
            "test_name": "hardcoded_bind_all_interfaces",
            "code": "834 \n835             if self.host in {\"0.0.0.0\", \"::\"}:\n836                 messages.append(f\" * Running on all addresses ({self.host})\")\n",
            "lines": "835",
            "cwe_id": "CWE-605",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "serving",
            "project_package": "werkzeug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 272823,
            "report": 2061,
            "description": "Possible binding to all interfaces.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "serving",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/serving.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html",
            "test_id": "B104",
            "test_name": "hardcoded_bind_all_interfaces",
            "code": "837 \n838                 if self.host == \"0.0.0.0\":\n839                     localhost = \"127.0.0.1\"\n",
            "lines": "838",
            "cwe_id": "CWE-605",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "serving",
            "project_package": "werkzeug",
            "project_version": "3.0.1",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 272824,
            "report": 2061,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "67     if boundary is None:\n68         boundary = f\"---------------WerkzeugFormPart_{time()}{random()}\"\n69 \n",
            "lines": "68",
            "cwe_id": "CWE-330",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "test",
            "project_package": "werkzeug",
            "project_version": "3.0.1",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 272825,
            "report": 2061,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "645             self.close()\n646         except Exception:\n647             pass\n648 \n",
            "lines": "646, 647",
            "cwe_id": "CWE-703",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "test",
            "project_package": "werkzeug",
            "project_version": "3.0.1",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 272826,
            "report": 2061,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/werkzeug/src/werkzeug/test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "662                 f.close()\n663             except Exception:\n664                 pass\n665         self.closed = True\n",
            "lines": "663, 664",
            "cwe_id": "CWE-703",
            "project": "werkzeug",
            "source": "Indirect",
            "package_module": "test",
            "project_package": "werkzeug",
            "project_version": "3.0.1",
            "is_test": true,
            "test_category": "B1"
        }
    ],
    "pypi:tornado": [
        {
            "id": 268652,
            "report": 1690,
            "description": "Possible hardcoded password: 'https://api.twitter.com/oauth/request_token'",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "auth",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/auth.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "709 \n710     _OAUTH_REQUEST_TOKEN_URL = \"https://api.twitter.com/oauth/request_token\"\n711     _OAUTH_ACCESS_TOKEN_URL = \"https://api.twitter.com/oauth/access_token\"\n",
            "lines": "710",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "auth",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268653,
            "report": 1690,
            "description": "Possible hardcoded password: 'https://api.twitter.com/oauth/access_token'",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "auth",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/auth.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "710     _OAUTH_REQUEST_TOKEN_URL = \"https://api.twitter.com/oauth/request_token\"\n711     _OAUTH_ACCESS_TOKEN_URL = \"https://api.twitter.com/oauth/access_token\"\n712     _OAUTH_AUTHORIZE_URL = \"https://api.twitter.com/oauth/authorize\"\n",
            "lines": "711",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "auth",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268654,
            "report": 1690,
            "description": "Possible hardcoded password: 'https://www.googleapis.com/oauth2/v4/token'",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "auth",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/auth.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "852     _OAUTH_AUTHORIZE_URL = \"https://accounts.google.com/o/oauth2/v2/auth\"\n853     _OAUTH_ACCESS_TOKEN_URL = \"https://www.googleapis.com/oauth2/v4/token\"\n854     _OAUTH_USERINFO_URL = \"https://www.googleapis.com/oauth2/v1/userinfo\"\n",
            "lines": "853",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "auth",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268655,
            "report": 1690,
            "description": "Possible hardcoded password: 'https://graph.facebook.com/oauth/access_token?'",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "auth",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/auth.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "951 \n952     _OAUTH_ACCESS_TOKEN_URL = \"https://graph.facebook.com/oauth/access_token?\"\n953     _OAUTH_AUTHORIZE_URL = \"https://www.facebook.com/dialog/oauth?\"\n",
            "lines": "952",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "auth",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268656,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "autoreload",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/autoreload.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "83 import types\n84 import subprocess\n85 import weakref\n",
            "lines": "84",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "autoreload",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 268657,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "autoreload",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/autoreload.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "236     if not _has_execv:\n237         subprocess.Popen([sys.executable] + argv)\n238         os._exit(0)\n",
            "lines": "237",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "autoreload",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 268658,
            "report": 1690,
            "description": "Starting a process without a shell.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "autoreload",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/autoreload.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html",
            "test_id": "B606",
            "test_name": "start_process_with_no_shell",
            "code": "240         try:\n241             os.execv(sys.executable, [sys.executable] + argv)\n242         except OSError:\n",
            "lines": "241",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "autoreload",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 268659,
            "report": 1690,
            "description": "Starting a process without a shell.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "autoreload",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/autoreload.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html",
            "test_id": "B606",
            "test_name": "start_process_with_no_shell",
            "code": "253             # this error specifically.\n254             os.spawnv(\n255                 os.P_NOWAIT, sys.executable, [sys.executable] + argv  # type: ignore\n256             )\n257             # At this point the IOLoop has been closed and finally\n",
            "lines": "254, 255, 256",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "autoreload",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 268660,
            "report": 1690,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "http1connection",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/http1connection.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "805             await self._serving_future\n806         except Exception:\n807             pass\n808 \n",
            "lines": "806, 807",
            "cwe_id": "CWE-703",
            "project": "tornado",
            "source": "Direct",
            "package_module": "http1connection",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268661,
            "report": 1690,
            "description": "Possible hardcoded password: ''",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "httpclient",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/httpclient.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "346     # implementations.\n347     _DEFAULTS = dict(\n348         connect_timeout=20.0,\n349         request_timeout=20.0,\n350         follow_redirects=True,\n351         max_redirects=5,\n352         decompress_response=True,\n353         proxy_password=\"\",\n354         allow_nonstandard_methods=False,\n355         validate_cert=True,\n356     )\n357 \n",
            "lines": "347, 348, 349, 350, 351, 352, 353, 354, 355, 356",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "httpclient",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268662,
            "report": 1690,
            "description": "Possible binding to all interfaces.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "httpserver",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/httpserver.py",
            "score": 2,
            "confidence": "medium",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html",
            "test_id": "B104",
            "test_name": "hardcoded_bind_all_interfaces",
            "code": "321             # Unix (or other) socket; fake the remote address.\n322             self.remote_ip = \"0.0.0.0\"\n323         if protocol:\n",
            "lines": "322",
            "cwe_id": "CWE-605",
            "project": "tornado",
            "source": "Direct",
            "package_module": "httpserver",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268663,
            "report": 1690,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "httputil",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/httputil.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "395                     parsed = parse_cookie(self.headers[\"Cookie\"])\n396                 except Exception:\n397                     pass\n398                 else:\n",
            "lines": "396, 397",
            "cwe_id": "CWE-703",
            "project": "tornado",
            "source": "Direct",
            "package_module": "httputil",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268664,
            "report": 1690,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "httputil",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/httputil.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "401                             self._cookies[k] = v\n402                         except Exception:\n403                             # SimpleCookie imposes some restrictions on keys;\n404                             # parse_cookie does not. Discard any cookies\n405                             # with disallowed keys.\n406                             pass\n407         return self._cookies\n",
            "lines": "402, 403, 404, 405, 406",
            "cwe_id": "CWE-703",
            "project": "tornado",
            "source": "Direct",
            "package_module": "httputil",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268665,
            "report": 1690,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "ioloop",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/ioloop.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "935             # apply jitter fraction\n936             callback_time_sec *= 1 + (self.jitter * (random.random() - 0.5))\n937         if self._next_timeout <= current_time:\n",
            "lines": "936",
            "cwe_id": "CWE-330",
            "project": "tornado",
            "source": "Direct",
            "package_module": "ioloop",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 268666,
            "report": 1690,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "log",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/log.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "66                     return True\n67     except Exception:\n68         # Very broad exception handling because it's always better to\n69         # fall back to non-colored logs than to break at startup.\n70         pass\n71     return False\n",
            "lines": "67, 68, 69, 70",
            "cwe_id": "CWE-703",
            "project": "tornado",
            "source": "Direct",
            "package_module": "log",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268667,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "process",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/process.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "22 import signal\n23 import subprocess\n24 import sys\n",
            "lines": "23",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "process",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B4"
        },
        {
            "id": 268668,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "process",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/process.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "239         try:\n240             self.proc = subprocess.Popen(*args, **kwargs)\n241         except:\n",
            "lines": "240",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "process",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B6"
        },
        {
            "id": 268669,
            "report": 1690,
            "description": "Try, Except, Pass detected.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "asyncio_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/asyncio_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html",
            "test_id": "B110",
            "test_name": "try_except_pass",
            "code": "120             loop = asyncio.get_event_loop_policy().get_event_loop()\n121         except Exception:\n122             # We may not have a current event loop at this point.\n123             pass\n124         else:\n",
            "lines": "121, 122, 123",
            "cwe_id": "CWE-703",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.asyncio_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268670,
            "report": 1690,
            "description": "Possible hardcoded password: 'qwer'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "auth_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/auth_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "62     def _oauth_consumer_token(self):\n63         return dict(key=\"asdf\", secret=\"qwer\")\n64 \n",
            "lines": "63",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.auth_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268671,
            "report": 1690,
            "description": "Possible hardcoded password: '5678'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "auth_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/auth_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "80             raise Exception(\"failing in get_user\")\n81         if access_token != dict(key=\"uiop\", secret=\"5678\"):\n82             raise Exception(\"incorrect access token %r\" % access_token)\n",
            "lines": "81",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.auth_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268672,
            "report": 1690,
            "description": "Possible hardcoded password: 'qwer'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "auth_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/auth_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "107     def _oauth_consumer_token(self):\n108         return dict(key=\"asdf\", secret=\"qwer\")\n109 \n",
            "lines": "108",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.auth_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268673,
            "report": 1690,
            "description": "Possible hardcoded password: '5678'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "auth_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/auth_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "112             \"http://www.example.com/api/asdf\",\n113             dict(key=\"uiop\", secret=\"5678\"),\n114             parameters=dict(foo=\"bar\"),\n",
            "lines": "113",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.auth_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268674,
            "report": 1690,
            "description": "Possible hardcoded password: 'asdf'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "auth_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/auth_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "163     def get(self):\n164         self.write(dict(access_token=\"asdf\", expires_in=3600))\n165 \n",
            "lines": "164",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.auth_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268675,
            "report": 1690,
            "description": "Possible hardcoded password: 'vbnm'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "auth_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/auth_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "229                 \"/users/show/%s\" % self.get_argument(\"name\"),\n230                 access_token=dict(key=\"hjkl\", secret=\"vbnm\"),\n231             )\n",
            "lines": "230",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.auth_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268676,
            "report": 1690,
            "description": "Possible hardcoded password: 'test_twitter_consumer_secret'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "auth_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/auth_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "273     def get_app(self):\n274         return Application(\n275             [\n276                 # test endpoints\n277                 (\"/openid/client/login\", OpenIdClientLoginHandler, dict(test=self)),\n278                 (\n279                     \"/oauth10/client/login\",\n280                     OAuth1ClientLoginHandler,\n281                     dict(test=self, version=\"1.0\"),\n282                 ),\n283                 (\n284                     \"/oauth10/client/request_params\",\n285                     OAuth1ClientRequestParametersHandler,\n286                     dict(version=\"1.0\"),\n287                 ),\n288                 (\n289                     \"/oauth10a/client/login\",\n290                     OAuth1ClientLoginHandler,\n291                     dict(test=self, version=\"1.0a\"),\n292                 ),\n293                 (\n294                     \"/oauth10a/client/login_coroutine\",\n295                     OAuth1ClientLoginCoroutineHandler,\n296                     dict(test=self, version=\"1.0a\"),\n297                 ),\n298                 (\n299                     \"/oauth10a/client/request_params\",\n300                     OAuth1ClientRequestParametersHandler,\n301                     dict(version=\"1.0a\"),\n302                 ),\n303                 (\"/oauth2/client/login\", OAuth2ClientLoginHandler, dict(test=self)),\n304                 (\"/facebook/client/login\", FacebookClientLoginHandler, dict(test=self)),\n305                 (\"/twitter/client/login\", TwitterClientLoginHandler, dict(test=self)),\n306                 (\n307                     \"/twitter/client/authenticate\",\n308                     TwitterClientAuthenticateHandler,\n309                     dict(test=self),\n310                 ),\n311                 (\n312                     \"/twitter/client/login_gen_coroutine\",\n313                     TwitterClientLoginGenCoroutineHandler,\n314                     dict(test=self),\n315                 ),\n316                 (\n317                     \"/twitter/client/show_user\",\n318                     TwitterClientShowUserHandler,\n319                     dict(test=self),\n320                 ),\n321                 # simulated servers\n322                 (\"/openid/server/authenticate\", OpenIdServerAuthenticateHandler),\n323                 (\"/oauth1/server/request_token\", OAuth1ServerRequestTokenHandler),\n324                 (\"/oauth1/server/access_token\", OAuth1ServerAccessTokenHandler),\n325                 (\"/facebook/server/access_token\", FacebookServerAccessTokenHandler),\n326                 (\"/facebook/server/me\", FacebookServerMeHandler),\n327                 (\"/twitter/server/access_token\", TwitterServerAccessTokenHandler),\n328                 (r\"/twitter/api/users/show/(.*)\\.json\", TwitterServerShowUserHandler),\n329                 (\n330                     r\"/twitter/api/account/verify_credentials\\.json\",\n331                     TwitterServerVerifyCredentialsHandler,\n332                 ),\n333             ],\n334             http_client=self.http_client,\n335             twitter_consumer_key=\"test_twitter_consumer_key\",\n336             twitter_consumer_secret=\"test_twitter_consumer_secret\",\n337             facebook_api_key=\"test_facebook_api_key\",\n338             facebook_secret=\"test_facebook_secret\",\n339         )\n340 \n",
            "lines": "274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.auth_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268677,
            "report": 1690,
            "description": "Possible hardcoded password: '5678'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "auth_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/auth_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "379         self.assertEqual(parsed[\"email\"], \"foo@example.com\")\n380         self.assertEqual(parsed[\"access_token\"], dict(key=\"uiop\", secret=\"5678\"))\n381 \n",
            "lines": "380",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.auth_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268678,
            "report": 1690,
            "description": "Possible hardcoded password: '5678'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "auth_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/auth_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "421         self.assertEqual(parsed[\"email\"], \"foo@example.com\")\n422         self.assertEqual(parsed[\"access_token\"], dict(key=\"uiop\", secret=\"5678\"))\n423 \n",
            "lines": "422",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.auth_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268679,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "autoreload_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/autoreload_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "2 import shutil\n3 import subprocess\n4 from subprocess import Popen\n",
            "lines": "3",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.autoreload_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268680,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "autoreload_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/autoreload_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "3 import subprocess\n4 from subprocess import Popen\n5 import sys\n",
            "lines": "4",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.autoreload_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268681,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "autoreload_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/autoreload_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "55 \n56         p = Popen(\n57             [sys.executable, \"-m\", \"testapp\"],\n58             stdout=subprocess.PIPE,\n59             cwd=self.path,\n60             env=dict(os.environ, PYTHONPATH=pythonpath),\n61             universal_newlines=True,\n62         )\n63         out = p.communicate()[0]\n",
            "lines": "56, 57, 58, 59, 60, 61, 62",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.autoreload_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B6"
        },
        {
            "id": 268682,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "autoreload_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/autoreload_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "107 \n108         autoreload_proc = Popen(\n109             [sys.executable, \"-m\", \"tornado.autoreload\", \"-m\", \"testapp\"],\n110             stdout=subprocess.PIPE,\n111             cwd=self.path,\n112             env=dict(os.environ, PYTHONPATH=pythonpath),\n113             universal_newlines=True,\n114         )\n115 \n",
            "lines": "108, 109, 110, 111, 112, 113, 114",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.autoreload_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B6"
        },
        {
            "id": 268683,
            "report": 1690,
            "description": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "curl_httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/curl_httpclient_test.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "53             assert param_dict[\"uri\"] == self.request.path\n54             h1 = md5(\n55                 utf8(\"%s:%s:%s\" % (self.username, realm, self.password))\n56             ).hexdigest()\n57             h2 = md5(\n",
            "lines": "54, 55, 56",
            "cwe_id": "CWE-327",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.curl_httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 268684,
            "report": 1690,
            "description": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "curl_httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/curl_httpclient_test.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "56             ).hexdigest()\n57             h2 = md5(\n58                 utf8(\"%s:%s\" % (self.request.method, self.request.path))\n59             ).hexdigest()\n60             digest = md5(utf8(\"%s:%s:%s\" % (h1, nonce, h2))).hexdigest()\n",
            "lines": "57, 58, 59",
            "cwe_id": "CWE-327",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.curl_httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 268685,
            "report": 1690,
            "description": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "curl_httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/curl_httpclient_test.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "59             ).hexdigest()\n60             digest = md5(utf8(\"%s:%s:%s\" % (h1, nonce, h2))).hexdigest()\n61             if digest == param_dict[\"response\"]:\n",
            "lines": "60",
            "cwe_id": "CWE-327",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.curl_httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 268686,
            "report": 1690,
            "description": "Possible hardcoded password: 'bar'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "curl_httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/curl_httpclient_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "108     def test_digest_auth(self):\n109         response = self.fetch(\n110             \"/digest\", auth_mode=\"digest\", auth_username=\"foo\", auth_password=\"bar\"\n111         )\n112         self.assertEqual(response.body, b\"ok\")\n",
            "lines": "109, 110, 111",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.curl_httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268687,
            "report": 1690,
            "description": "Possible hardcoded password: 'bar\u30e6\u00a3'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "curl_httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/curl_httpclient_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "122     def test_digest_auth_non_ascii(self):\n123         response = self.fetch(\n124             \"/digest_non_ascii\",\n125             auth_mode=\"digest\",\n126             auth_username=\"foo\",\n127             auth_password=\"bar\u30e6\u00a3\",\n128         )\n129         self.assertEqual(response.body, b\"ok\")\n",
            "lines": "123, 124, 125, 126, 127, 128",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.curl_httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268688,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/httpclient_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "8 from io import BytesIO\n9 import subprocess\n10 import sys\n",
            "lines": "9",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268689,
            "report": 1690,
            "description": "Possible hardcoded password: 'open sesame'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/httpclient_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "267         self.assertEqual(\n268             self.fetch(\n269                 \"/auth\", auth_username=\"Aladdin\", auth_password=\"open sesame\"\n270             ).body,\n271             b\"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n",
            "lines": "268, 269, 270",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268690,
            "report": 1690,
            "description": "Possible hardcoded password: 'open sesame'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/httpclient_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "275         self.assertEqual(\n276             self.fetch(\n277                 \"/auth\",\n278                 auth_username=\"Aladdin\",\n279                 auth_password=\"open sesame\",\n280                 auth_mode=\"basic\",\n281             ).body,\n282             b\"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n",
            "lines": "276, 277, 278, 279, 280, 281",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268691,
            "report": 1690,
            "description": "Possible hardcoded password: '123\u00a3'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/httpclient_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "287         self.assertEqual(\n288             self.fetch(\"/auth\", auth_username=\"test\", auth_password=\"123\u00a3\").body,\n289             b\"Basic dGVzdDoxMjPCow==\",\n",
            "lines": "288",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268692,
            "report": 1690,
            "description": "Possible hardcoded password: 's\u0259cr\u0259t'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/httpclient_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "295         self.assertEqual(\n296             self.fetch(\"/auth\", auth_username=username, auth_password=\"s\u0259cr\u0259t\").body,\n297             b\"Basic am9zw6k6c8mZY3LJmXQ=\",\n",
            "lines": "296",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268693,
            "report": 1690,
            "description": "Possible hardcoded password: 'open sesame'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/httpclient_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "305             with self.assertRaises((ValueError, HTTPError)):  # type: ignore\n306                 self.fetch(\n307                     \"/auth\",\n308                     auth_username=\"Aladdin\",\n309                     auth_password=\"open sesame\",\n310                     auth_mode=\"asdf\",\n311                     raise_error=True,\n312                 )\n313 \n",
            "lines": "306, 307, 308, 309, 310, 311, 312",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268694,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "httpclient_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/httpclient_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "846         # as a whole, which is why we use this subprocess).\n847         proc = subprocess.run(\n848             [\n849                 sys.executable,\n850                 \"-c\",\n851                 \"from tornado.httpclient import HTTPClient; f = lambda: None; c = HTTPClient()\",\n852             ],\n853             stdout=subprocess.PIPE,\n854             stderr=subprocess.STDOUT,\n855             check=True,\n856             timeout=5,\n857         )\n858         if proc.stdout:\n",
            "lines": "847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.httpclient_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B6"
        },
        {
            "id": 268695,
            "report": 1690,
            "description": "Consider possible security implications associated with pickle module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "httputil_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/httputil_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle",
            "test_id": "B403",
            "test_name": "blacklist",
            "code": "19 import logging\n20 import pickle\n21 import time\n",
            "lines": "20",
            "cwe_id": "CWE-502",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.httputil_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268696,
            "report": 1690,
            "description": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "httputil_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/httputil_test.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle",
            "test_id": "B301",
            "test_name": "blacklist",
            "code": "368         pickled = pickle.dumps(headers)\n369         unpickled = pickle.loads(pickled)\n370         self.assertEqual(sorted(headers.get_all()), sorted(unpickled.get_all()))\n",
            "lines": "369",
            "cwe_id": "CWE-502",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.httputil_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 268697,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "import_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/import_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "1 # flake8: noqa\n2 import subprocess\n3 import sys\n",
            "lines": "2",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.import_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268698,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "import_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/import_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "47         # in our process, do it in a subprocess for a clean slate.\n48         proc = subprocess.Popen([sys.executable], stdin=subprocess.PIPE)\n49         proc.communicate(_import_everything)\n",
            "lines": "48",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.import_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B6"
        },
        {
            "id": 268699,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "import_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/import_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "53         # Test that submodules can be referenced lazily after \"import tornado\"\n54         proc = subprocess.Popen([sys.executable], stdin=subprocess.PIPE)\n55         proc.communicate(_import_lazy)\n",
            "lines": "54",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.import_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B6"
        },
        {
            "id": 268700,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "ioloop_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/ioloop_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "8 import socket\n9 import subprocess\n10 import sys\n",
            "lines": "9",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.ioloop_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268701,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "ioloop_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/ioloop_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "768         args = [sys.executable, \"-c\", \"; \".join(stmt_list)]\n769         return native_str(subprocess.check_output(args)).strip()\n770 \n",
            "lines": "769",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.ioloop_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B6"
        },
        {
            "id": 268702,
            "report": 1690,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "iostream_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/iostream_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "678         # (using a user-allocated buffer).\n679         r = random.Random(42)\n680         nbytes = 1000000\n",
            "lines": "679",
            "cwe_id": "CWE-330",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.iostream_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 268703,
            "report": 1690,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "iostream_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/iostream_test.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "682 \n683         produce_hash = hashlib.sha1()\n684         consume_hash = hashlib.sha1()\n",
            "lines": "683",
            "cwe_id": "CWE-327",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.iostream_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 268704,
            "report": 1690,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "iostream_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/iostream_test.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "683         produce_hash = hashlib.sha1()\n684         consume_hash = hashlib.sha1()\n685 \n",
            "lines": "684",
            "cwe_id": "CWE-327",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.iostream_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 268705,
            "report": 1690,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "iostream_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/iostream_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "1201     def setUp(self):\n1202         self.random = random.Random(42)\n1203 \n",
            "lines": "1202",
            "cwe_id": "CWE-330",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.iostream_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 268706,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "log_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/log_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "19 import re\n20 import subprocess\n21 import sys\n",
            "lines": "20",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.log_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268707,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "log_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/log_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "207         program = \";\".join([IMPORT, statement, LOG_INFO])\n208         proc = subprocess.Popen(\n209             [sys.executable, \"-c\", program] + (args or []),\n210             stdout=subprocess.PIPE,\n211             stderr=subprocess.STDOUT,\n212         )\n213         stdout, stderr = proc.communicate()\n",
            "lines": "208, 209, 210, 211, 212",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.log_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B6"
        },
        {
            "id": 268708,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "netutil_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/netutil_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "4 import socket\n5 from subprocess import Popen\n6 import sys\n",
            "lines": "5",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.netutil_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268709,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "netutil_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/netutil_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "153         start = time.time()\n154         popen = Popen(command, preexec_fn=lambda: signal.alarm(TIMEOUT))\n155         while time.time() - start < TIMEOUT:\n",
            "lines": "154",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.netutil_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B6"
        },
        {
            "id": 268710,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "process_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/process_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "4 import signal\n5 import subprocess\n6 import sys\n",
            "lines": "5",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.process_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268711,
            "report": 1690,
            "description": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "queues_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/queues_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random",
            "test_id": "B311",
            "test_name": "blacklist",
            "code": "330                 q.task_done()\n331                 yield gen.sleep(random() * 0.01)\n332 \n",
            "lines": "331",
            "cwe_id": "CWE-330",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.queues_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B3"
        },
        {
            "id": 268712,
            "report": 1690,
            "description": "Consider possible security implications associated with the subprocess module.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "tcpserver_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/tcpserver_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist",
            "code": "1 import socket\n2 import subprocess\n3 import sys\n",
            "lines": "2",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.tcpserver_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B4"
        },
        {
            "id": 268713,
            "report": 1690,
            "description": "subprocess call - check for execution of untrusted input.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "tcpserver_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/tcpserver_test.py",
            "score": 2,
            "confidence": "high",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true",
            "code": "127         try:\n128             result = subprocess.run(\n129                 [sys.executable, \"-Werror::DeprecationWarning\"],\n130                 capture_output=True,\n131                 input=code,\n132                 encoding=\"utf8\",\n133                 check=True,\n134             )\n135         except subprocess.CalledProcessError as e:\n",
            "lines": "128, 129, 130, 131, 132, 133, 134",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.tcpserver_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B6"
        },
        {
            "id": 268714,
            "report": 1690,
            "description": "Use of exec detected.",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "util",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/util.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html",
            "test_id": "B102",
            "test_name": "exec_used",
            "code": "92     local_namespace = {}  # type: typing.Dict[str, typing.Any]\n93     exec(textwrap.dedent(s), global_namespace, local_namespace)\n94     return local_namespace\n",
            "lines": "93",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.util",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268715,
            "report": 1690,
            "description": "Possible hardcoded password: '0123456789'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "web_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/web_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html",
            "test_id": "B107",
            "test_name": "hardcoded_password_default",
            "code": "101     # stub out enough methods to make the signed_cookie functions work\n102     def __init__(self, cookie_secret=\"0123456789\", key_version=None):\n103         # don't call super.__init__\n104         self._cookies = {}  # type: typing.Dict[str, bytes]\n105         if key_version is None:\n106             self.application = ObjectDict(  # type: ignore\n107                 settings=dict(cookie_secret=cookie_secret)\n108             )\n109         else:\n110             self.application = ObjectDict(  # type: ignore\n111                 settings=dict(cookie_secret=cookie_secret, key_version=key_version)\n112             )\n113 \n",
            "lines": "102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.web_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268716,
            "report": 1690,
            "description": "Possible hardcoded password: 'WebTest.COOKIE_SECRET'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "web_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/web_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "730 class WSGISafeWebTest(WebTestCase):\n731     COOKIE_SECRET = \"WebTest.COOKIE_SECRET\"\n732 \n",
            "lines": "731",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.web_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268717,
            "report": 1690,
            "description": "Possible hardcoded password: 'It's a secret to everybody'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "web_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/web_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string",
            "code": "2562 class SignedValueTest(unittest.TestCase):\n2563     SECRET = \"It's a secret to everybody\"\n2564     SECRET_DICT = {0: \"asdfbasdf\", 1: \"12312312\", 2: \"2342342\"}\n",
            "lines": "2563",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.web_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268718,
            "report": 1690,
            "description": "Possible hardcoded password: '3|'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "web_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/web_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "2795                 method=\"POST\",\n2796                 headers=self.cookie_headers(token=\"3|\"),\n2797                 body=urllib.parse.urlencode(dict(_xsrf=self.xsrf_token)),\n",
            "lines": "2796",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.web_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268719,
            "report": 1690,
            "description": "Possible hardcoded password: 'deadbeef'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "web_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/web_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "2812             body=urllib.parse.urlencode(dict(_xsrf=\"deadbeef\")),\n2813             headers=self.cookie_headers(token=\"deadbeef\"),\n2814         )\n",
            "lines": "2813",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.web_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268720,
            "report": 1690,
            "description": "Possible hardcoded password: 'xoxo'",
            "true_positive": null,
            "verified": false,
            "package": "test",
            "module": "web_test",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/test/web_test.py",
            "score": 1,
            "confidence": "medium",
            "severity": "low",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html",
            "test_id": "B106",
            "test_name": "hardcoded_password_funcarg",
            "code": "2821             body=urllib.parse.urlencode(dict(_xsrf=\"xoxo\")),\n2822             headers=self.cookie_headers(token=\"xoxo\"),\n2823         )\n",
            "lines": "2822",
            "cwe_id": "CWE-259",
            "project": "tornado",
            "source": "Direct",
            "package_module": "test.web_test",
            "project_package": "tornado.test",
            "project_version": "6.3.3",
            "is_test": true,
            "test_category": "B1"
        },
        {
            "id": 268721,
            "report": 1690,
            "description": "Use of exec detected.",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "util",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/util.py",
            "score": 3,
            "confidence": "high",
            "severity": "medium",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html",
            "test_id": "B102",
            "test_name": "exec_used",
            "code": "160         code = compile(code, \"<string>\", \"exec\", dont_inherit=True)\n161     exec(code, glob, loc)\n162 \n",
            "lines": "161",
            "cwe_id": "CWE-78",
            "project": "tornado",
            "source": "Direct",
            "package_module": "util",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B1"
        },
        {
            "id": 268722,
            "report": 1690,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "web",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/web.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "1685         \"\"\"\n1686         hasher = hashlib.sha1()\n1687         for part in self._write_buffer:\n",
            "lines": "1686",
            "cwe_id": "CWE-327",
            "project": "tornado",
            "source": "Direct",
            "package_module": "web",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B3"
        },
        {
            "id": 268723,
            "report": 1690,
            "description": "Use of weak SHA1 hash for security. Consider usedforsecurity=False",
            "true_positive": null,
            "verified": false,
            "package": "",
            "module": "websocket",
            "filename": "/Users/zakariasabbagh/Documents/GitHub/private/securipy/repositories/tornado/tornado/websocket.py",
            "score": 4,
            "confidence": "high",
            "severity": "high",
            "more_info": "https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html",
            "test_id": "B324",
            "test_name": "hashlib",
            "code": "885         \"\"\"\n886         sha1 = hashlib.sha1()\n887         sha1.update(utf8(key))\n",
            "lines": "886",
            "cwe_id": "CWE-327",
            "project": "tornado",
            "source": "Direct",
            "package_module": "websocket",
            "project_package": "tornado",
            "project_version": "6.3.3",
            "is_test": false,
            "test_category": "B3"
        }
    ]
}